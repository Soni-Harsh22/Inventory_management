2025-05-11 18:41:34.959 +05:30 [INF] Starting up the application...
2025-05-11 18:41:35.929 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-11 18:41:36.029 +05:30 [DBG] Hosting starting
2025-05-11 18:41:36.079 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-11 18:41:36.095 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-11 18:41:36.107 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-11 18:41:36.114 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-11 18:41:36.119 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-11 18:41:36.125 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-11 18:41:36.129 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-11 18:41:36.134 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-11 18:41:36.137 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-11 18:41:36.143 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-11 18:41:36.145 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-11 18:41:36.148 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-11 18:41:36.150 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-11 18:41:36.156 +05:30 [DBG] Middleware loaded
2025-05-11 18:41:36.158 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-11 18:41:36.159 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-11 18:41:36.252 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-11 18:41:36.355 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-11 18:41:36.356 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-11 18:41:36.357 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-11 18:41:36.359 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-11 18:41:36.360 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-11 18:41:36.361 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-11 18:41:36.475 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-11 18:41:36.477 +05:30 [INF] Hosting environment: Development
2025-05-11 18:41:36.478 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-11 18:41:36.480 +05:30 [DBG] Hosting started
2025-05-11 18:41:36.694 +05:30 [DBG] Connection id "0HNCGHLE22327" accepted.
2025-05-11 18:41:36.694 +05:30 [DBG] Connection id "0HNCGHLE22328" accepted.
2025-05-11 18:41:36.701 +05:30 [DBG] Connection id "0HNCGHLE22327" started.
2025-05-11 18:41:36.711 +05:30 [DBG] Connection id "0HNCGHLE22328" started.
2025-05-11 18:41:36.750 +05:30 [DBG] Connection id "0HNCGHLE22328" received FIN.
2025-05-11 18:41:36.750 +05:30 [DBG] Connection id "0HNCGHLE22327" received FIN.
2025-05-11 18:41:36.799 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-11 18:41:36.799 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-11 18:41:36.872 +05:30 [DBG] Connection id "0HNCGHLE22328" stopped.
2025-05-11 18:41:36.874 +05:30 [DBG] Connection id "0HNCGHLE22327" stopped.
2025-05-11 18:41:36.881 +05:30 [DBG] Connection id "0HNCGHLE22328" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-11 18:41:36.882 +05:30 [DBG] Connection id "0HNCGHLE22327" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-11 18:41:37.336 +05:30 [DBG] Connection id "0HNCGHLE22329" accepted.
2025-05-11 18:41:37.347 +05:30 [DBG] Connection id "0HNCGHLE22329" started.
2025-05-11 18:41:37.442 +05:30 [DBG] Connection 0HNCGHLE22329 established using the following protocol: "Tls12"
2025-05-11 18:41:37.559 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-11 18:41:37.749 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-11 18:41:37.773 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-11 18:41:37.775 +05:30 [DBG] Request did not match any endpoints
2025-05-11 18:41:37.890 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-11 18:41:37.899 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-11 18:41:37.938 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-11 18:41:37.952 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-11 18:41:37.959 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 417.38ms
2025-05-11 18:41:37.960 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-11 18:41:37.965 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-11 18:41:37.976 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-11 18:41:37.984 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 25.103ms
2025-05-11 18:41:38.104 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 138.3095ms
2025-05-11 18:41:38.216 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-11 18:41:38.221 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-11 18:41:38.223 +05:30 [DBG] Request did not match any endpoints
2025-05-11 18:41:38.263 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 46.8174ms
2025-05-11 18:42:00.886 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/login - application/json 57
2025-05-11 18:42:00.906 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/login'
2025-05-11 18:42:00.913 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-05-11 18:42:00.917 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-11 18:42:00.921 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-11 18:42:00.997 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-11 18:42:01.002 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-11 18:42:01.035 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(InventoryManagementSystem.Models.Request.UserLoginRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-11 18:42:01.038 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-11 18:42:01.039 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-11 18:42:01.040 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-11 18:42:01.043 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-11 18:42:01.044 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-11 18:42:01.048 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-11 18:42:01.169 +05:30 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-05-11 18:42:01.191 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-11 18:42:01.203 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-11 18:42:01.206 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' using the name '' in request data ...
2025-05-11 18:42:01.208 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-11 18:42:01.217 +05:30 [DBG] Connection id "0HNCGHLE22329", Request id "0HNCGHLE22329:00000009": started reading request body.
2025-05-11 18:42:01.218 +05:30 [DBG] Connection id "0HNCGHLE22329", Request id "0HNCGHLE22329:00000009": done reading request body.
2025-05-11 18:42:01.229 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserLoginRequest'
2025-05-11 18:42:01.232 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-11 18:42:01.233 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-11 18:42:01.234 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-11 18:42:01.265 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-11 18:42:01.938 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-11 18:42:02.026 +05:30 [DBG] Compiling query expression: 
'DbSet<Users>()
    .Include(u => u.Role)
    .FirstOrDefault(u => u.Email == __email_0 && u.IsDeleted == False)'
2025-05-11 18:42:02.088 +05:30 [DBG] Including navigation: 'Users.Role'.
2025-05-11 18:42:02.352 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Users>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Users>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Users.UserId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Users.CreatedBy (int) Required, 1], [Property: Users.CreatedDate (DateTime) Required, 2], [Property: Users.Email (string) Required MaxLength(100), 3], [Property: Users.IsDeleted (bool) Required, 4], [Property: Users.Name (string) Required MaxLength(100), 5], [Property: Users.Password (string) Required MaxLength(255), 6], [Property: Users.Phone (string) Required MaxLength(15), 7], [Property: Users.RoleId (int) Required FK Index, 8], [Property: Users.UpdatedBy (int) Required, 9], [Property: Users.UpdatedDate (DateTime) Required, 10] }
                1 -> Dictionary<IProperty, int> { [Property: Roles.RoleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Roles.Name (string) Required MaxLength(50), 12] }
            SELECT TOP(1) u.UserId, u.CreatedBy, u.CreatedDate, u.Email, u.IsDeleted, u.Name, u.Password, u.Phone, u.RoleId, u.UpdatedBy, u.UpdatedDate, r.RoleId, r.Name
            FROM Users AS u
            INNER JOIN Roles AS r ON u.RoleId == r.RoleId
            WHERE (u.Email == @__email_0) && (u.IsDeleted == CAST(0 AS bit))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Users.UserId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Users.CreatedBy (int) Required, 1], [Property: Users.CreatedDate (DateTime) Required, 2], [Property: Users.Email (string) Required MaxLength(100), 3], [Property: Users.IsDeleted (bool) Required, 4], [Property: Users.Name (string) Required MaxLength(100), 5], [Property: Users.Password (string) Required MaxLength(255), 6], [Property: Users.Phone (string) Required MaxLength(15), 7], [Property: Users.RoleId (int) Required FK Index, 8], [Property: Users.UpdatedBy (int) Required, 9], [Property: Users.UpdatedDate (DateTime) Required, 10] }
                1 -> Dictionary<IProperty, int> { [Property: Roles.RoleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Roles.Name (string) Required MaxLength(50), 12] }
            SELECT TOP(1) u.UserId, u.CreatedBy, u.CreatedDate, u.Email, u.IsDeleted, u.Name, u.Password, u.Phone, u.RoleId, u.UpdatedBy, u.UpdatedDate, r.RoleId, r.Name
            FROM Users AS u
            INNER JOIN Roles AS r ON u.RoleId == r.RoleId
            WHERE (u.Email == @__email_0) && (u.IsDeleted == CAST(0 AS bit)), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Users entity;
            Roles entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Users instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Users);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Users.UserId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Users)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")]: 
                            {
                                return 
                                {
                                    Users instance;
                                    instance = new Users();
                                    instance.<UserId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CreatedDate>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Email>k__BackingField = dataReader.GetString(3);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    instance.<Password>k__BackingField = dataReader.GetString(6);
                                    instance.<Phone>k__BackingField = dataReader.GetString(7);
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(8);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt32(9);
                                    instance.<UpdatedDate>k__BackingField = dataReader.GetDateTime(10);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Users)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Roles instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Roles);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Roles.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(11) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Roles)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")]: 
                            {
                                return 
                                {
                                    Roles instance;
                                    instance = new Roles();
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(11);
                                    instance.<Name>k__BackingField = dataReader.GetString(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Roles)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Users, Users, Roles>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Users.Role (Roles) ToPrincipal Roles Inverse: Users | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users").FindNavigation("Role")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Roles.Users (ICollection<Users>) Collection ToDependent Users Inverse: Role | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindNavigation("Users")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Role>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Roles, ICollection<Users>, Users> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindNavigation("Users").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-11 18:42:02.426 +05:30 [DBG] Creating DbConnection.
2025-05-11 18:42:02.444 +05:30 [DBG] Created DbConnection. (16ms).
2025-05-11 18:42:02.449 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:42:02.661 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:42:02.665 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 18:42:02.672 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-05-11 18:42:02.680 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (14ms).
2025-05-11 18:42:02.687 +05:30 [DBG] Executing DbCommand [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-11 18:42:02.741 +05:30 [INF] Executed DbCommand (55ms) [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-11 18:42:02.755 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:42:02.762 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 13ms reading results.
2025-05-11 18:42:02.766 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:42:02.771 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (5ms).
2025-05-11 18:42:02.774 +05:30 [WRN] Login failed: Invalid credentials for harsh@gmial.com Email already exists
2025-05-11 18:42:02.779 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-11 18:42:02.783 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-11 18:42:02.784 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-11 18:42:02.785 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-11 18:42:02.786 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-11 18:42:02.787 +05:30 [INF] Executing UnauthorizedObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.UserLoginResponce, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-11 18:42:02.808 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem) in 1759.5124ms
2025-05-11 18:42:02.810 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-11 18:42:02.815 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-11 18:42:02.820 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:42:02.823 +05:30 [DBG] Disposed connection to database '' on server '' (3ms).
2025-05-11 18:42:02.825 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/login - 401 null application/json; charset=utf-8 1939.2333ms
2025-05-11 18:42:23.529 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/login - application/json 57
2025-05-11 18:42:23.537 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/login'
2025-05-11 18:42:23.539 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-05-11 18:42:23.546 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-11 18:42:23.552 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-11 18:42:23.554 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-11 18:42:23.556 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-11 18:42:23.557 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(InventoryManagementSystem.Models.Request.UserLoginRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-11 18:42:23.559 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-11 18:42:23.560 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-11 18:42:23.562 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-11 18:42:23.565 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-11 18:42:23.567 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-11 18:42:23.569 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-11 18:42:23.571 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-11 18:42:23.573 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-11 18:42:23.574 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' using the name '' in request data ...
2025-05-11 18:42:23.576 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-11 18:42:23.577 +05:30 [DBG] Connection id "0HNCGHLE22329", Request id "0HNCGHLE22329:0000000B": started reading request body.
2025-05-11 18:42:23.578 +05:30 [DBG] Connection id "0HNCGHLE22329", Request id "0HNCGHLE22329:0000000B": done reading request body.
2025-05-11 18:42:23.579 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserLoginRequest'
2025-05-11 18:42:23.582 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-11 18:42:23.583 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-11 18:42:23.584 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-11 18:42:23.587 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-11 18:42:23.602 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-11 18:42:23.607 +05:30 [DBG] Creating DbConnection.
2025-05-11 18:42:23.608 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-11 18:42:23.609 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:42:23.610 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:42:23.612 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 18:42:23.613 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 18:42:23.616 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-11 18:42:23.617 +05:30 [DBG] Executing DbCommand [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-11 18:42:23.628 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-11 18:42:23.682 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Users' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 18:42:23.732 +05:30 [DBG] The navigation 'Users.Role' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 18:42:23.739 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Roles' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 18:42:23.744 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:42:23.745 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 108ms reading results.
2025-05-11 18:42:23.747 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:42:23.748 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-11 18:42:23.874 +05:30 [INF] User logged in successfully: harsh@gmail.com
2025-05-11 18:42:23.876 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-11 18:42:23.878 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-11 18:42:23.879 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-11 18:42:23.880 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-11 18:42:23.881 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-11 18:42:23.883 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.UserLoginResponce, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-11 18:42:23.885 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem) in 316.2712ms
2025-05-11 18:42:23.887 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-11 18:42:23.888 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-11 18:42:23.889 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:42:23.890 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-11 18:42:23.891 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/login - 200 null application/json; charset=utf-8 362.3155ms
2025-05-11 18:43:14.646 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Order/customer-order - application/json 96
2025-05-11 18:43:14.674 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/customer-order'
2025-05-11 18:43:14.678 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)' with route pattern 'api/Order/customer-order' is valid for the request path '/api/Order/customer-order'
2025-05-11 18:43:14.680 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-11 18:43:14.682 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-11 18:43:14.735 +05:30 [DBG] Successfully validated the token.
2025-05-11 18:43:14.741 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-11 18:43:14.746 +05:30 [DBG] Authorization was successful.
2025-05-11 18:43:14.748 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-11 18:43:14.756 +05:30 [INF] Route matched with {action = "PlaceOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PlaceOrder(InventoryManagementSystem.Models.Request.CustomerOrderRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-11 18:43:14.758 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-11 18:43:14.760 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-11 18:43:14.761 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-11 18:43:14.763 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-11 18:43:14.764 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-11 18:43:14.765 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-11 18:43:14.771 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-11 18:43:14.773 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' ...
2025-05-11 18:43:14.774 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' using the name '' in request data ...
2025-05-11 18:43:14.776 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-11 18:43:14.779 +05:30 [DBG] Connection id "0HNCGHLE22329", Request id "0HNCGHLE22329:0000000D": started reading request body.
2025-05-11 18:43:14.780 +05:30 [DBG] Connection id "0HNCGHLE22329", Request id "0HNCGHLE22329:0000000D": done reading request body.
2025-05-11 18:43:14.790 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'
2025-05-11 18:43:14.791 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-11 18:43:14.792 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-11 18:43:14.794 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' ...
2025-05-11 18:43:14.827 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-11 18:43:14.831 +05:30 [INF] Starting order placement for userId: 2
2025-05-11 18:43:14.891 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-11 18:43:14.895 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .FirstOrDefault(p => p.ProductId == __productId_0 && !(p.IsDeleted))'
2025-05-11 18:43:14.905 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Products>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Products>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE (p.ProductId == @__productId_0) && Not(p.IsDeleted)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE (p.ProductId == @__productId_0) && Not(p.IsDeleted), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Products entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Products instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Products);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Products)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                            {
                                return 
                                {
                                    Products instance;
                                    instance = new Products();
                                    instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                    instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Name>k__BackingField = dataReader.GetString(9);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                    instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Products)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-11 18:43:14.925 +05:30 [DBG] Creating DbConnection.
2025-05-11 18:43:14.926 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-11 18:43:14.927 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:14.928 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:14.929 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 18:43:14.930 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 18:43:14.931 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-11 18:43:14.933 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-11 18:43:14.946 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-11 18:43:14.961 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 18:43:14.978 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:14.979 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 29ms reading results.
2025-05-11 18:43:14.981 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:14.981 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-11 18:43:14.983 +05:30 [INF] Product 4 is now low on stock
2025-05-11 18:43:14.993 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 18:43:14.996 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-11 18:43:14.999 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-11 18:43:15.010 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-11 18:43:15.072 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:15.074 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:15.077 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 18:43:15.078 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 18:43:15.079 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-11 18:43:15.080 +05:30 [DBG] Executing DbCommand [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
2025-05-11 18:43:15.090 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
2025-05-11 18:43:15.097 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:15.099 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 5ms reading results.
2025-05-11 18:43:15.101 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:15.102 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-11 18:43:15.106 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 18:43:15.108 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-11 18:43:15.111 +05:30 [INF] Starting stock movement for ProductId: 4, UserId: 2, Status: "Completed"
2025-05-11 18:43:15.113 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .FirstOrDefault(p => p.ProductId == __productId_0)'
2025-05-11 18:43:15.119 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Products>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Products>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__productId_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__productId_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Products entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Products instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Products);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Products)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                            {
                                return 
                                {
                                    Products instance;
                                    instance = new Products();
                                    instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                    instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Name>k__BackingField = dataReader.GetString(9);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                    instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Products)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-11 18:43:15.136 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:15.137 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:15.138 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 18:43:15.139 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 18:43:15.140 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-11 18:43:15.141 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-11 18:43:15.146 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-11 18:43:15.149 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:15.150 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-11 18:43:15.152 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:15.153 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-11 18:43:15.155 +05:30 [INF] 'SellOut' movement for ProductId: 4
2025-05-11 18:43:15.173 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 18:43:15.189 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 18:43:15.193 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 18:43:15.195 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-11 18:43:15.196 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-11 18:43:15.203 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-11 18:43:15.211 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:15.212 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:15.213 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 18:43:15.214 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 18:43:15.215 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-11 18:43:15.216 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-11 18:43:15.224 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-11 18:43:15.233 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-11 18:43:15.238 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:15.239 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 13ms reading results.
2025-05-11 18:43:15.241 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:15.242 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-11 18:43:15.245 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 18:43:15.246 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-11 18:43:15.247 +05:30 [INF] Stock movement successfully for ProductId: 4
2025-05-11 18:43:15.252 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Orders.OrderId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 18:43:15.274 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Orders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 18:43:15.279 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'OrderItems.OrderItemId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 18:43:15.292 +05:30 [DBG] The navigation 'OrderItems.Order' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 18:43:15.295 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 18:43:15.297 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 18:43:15.299 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-11 18:43:15.300 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-11 18:43:15.307 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-11 18:43:15.315 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:15.316 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:15.319 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-11 18:43:15.324 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-11 18:43:15.326 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 18:43:15.327 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 18:43:15.329 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-11 18:43:15.330 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p8='?' (DbType = Int32), @p9='?' (DbType = Int64), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Orders] ([NumberOfItems], [OrderDate], [OrderStatus], [PaymentDate], [PaymentMethod], [PaymentStatus], [PaymentType], [TotalCost], [TotalQuantity], [UpdatedBy], [UpdatedDate], [UserId])
OUTPUT INSERTED.[OrderId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11);
2025-05-11 18:43:15.342 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p8='?' (DbType = Int32), @p9='?' (DbType = Int64), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Orders] ([NumberOfItems], [OrderDate], [OrderStatus], [PaymentDate], [PaymentMethod], [PaymentStatus], [PaymentType], [TotalCost], [TotalQuantity], [UpdatedBy], [UpdatedDate], [UserId])
OUTPUT INSERTED.[OrderId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11);
2025-05-11 18:43:15.347 +05:30 [DBG] The foreign key property 'Orders.OrderId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-11 18:43:15.352 +05:30 [DBG] The foreign key property 'OrderItems.OrderId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-11 18:43:15.356 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:15.357 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 11ms reading results.
2025-05-11 18:43:15.358 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 18:43:15.359 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 18:43:15.361 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-11 18:43:15.362 +05:30 [DBG] Executing DbCommand [Parameters=[@p12='?' (DbType = DateTime2), @p13='?' (DbType = Int64), @p14='?' (DbType = Int32), @p15='?' (DbType = Int64), @p16='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p17='?' (DbType = Int32), @p18='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [OrderItems] ([OrderDate], [OrderId], [OrderItemStatus], [ProductId], [ProductPrice], [Quantity], [TotalPrice])
OUTPUT INSERTED.[OrderItemId]
VALUES (@p12, @p13, @p14, @p15, @p16, @p17, @p18);
2025-05-11 18:43:15.368 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p12='?' (DbType = DateTime2), @p13='?' (DbType = Int64), @p14='?' (DbType = Int32), @p15='?' (DbType = Int64), @p16='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p17='?' (DbType = Int32), @p18='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [OrderItems] ([OrderDate], [OrderId], [OrderItemStatus], [ProductId], [ProductPrice], [Quantity], [TotalPrice])
OUTPUT INSERTED.[OrderItemId]
VALUES (@p12, @p13, @p14, @p15, @p16, @p17, @p18);
2025-05-11 18:43:15.372 +05:30 [DBG] The foreign key property 'OrderItems.OrderItemId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-11 18:43:15.373 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:15.374 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-11 18:43:15.379 +05:30 [DBG] Committing transaction.
2025-05-11 18:43:15.383 +05:30 [DBG] Committed transaction.
2025-05-11 18:43:15.387 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:15.389 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-11 18:43:15.392 +05:30 [DBG] Disposing transaction.
2025-05-11 18:43:15.393 +05:30 [DBG] An entity of type 'Orders' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 18:43:15.395 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 18:43:15.397 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 2 entities written to the database.
2025-05-11 18:43:15.398 +05:30 [INF] Order successfully placed for userId: 2
2025-05-11 18:43:15.399 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-11 18:43:15.401 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-11 18:43:15.402 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-11 18:43:15.403 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-11 18:43:15.404 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-11 18:43:15.405 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-11 18:43:15.408 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem) in 642.4408ms
2025-05-11 18:43:15.409 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-11 18:43:15.411 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-11 18:43:15.412 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 18:43:15.413 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-11 18:43:15.414 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Order/customer-order - 201 null application/json; charset=utf-8 767.7759ms
2025-05-11 18:46:15.886 +05:30 [DBG] Connection id "0HNCGHLE22329" received FIN.
2025-05-11 18:46:15.904 +05:30 [DBG] Connection id "0HNCGHLE22329" is closed. The last processed stream ID was 13.
2025-05-11 18:46:15.904 +05:30 [DBG] The connection queue processing loop for 0HNCGHLE22329 completed.
2025-05-11 18:46:15.907 +05:30 [DBG] Connection id "0HNCGHLE22329" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-11 18:46:15.913 +05:30 [DBG] Connection id "0HNCGHLE22329" stopped.
2025-05-11 19:00:56.384 +05:30 [INF] Starting up the application...
2025-05-11 19:00:57.295 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-11 19:00:57.373 +05:30 [DBG] Hosting starting
2025-05-11 19:00:57.410 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-11 19:00:57.422 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-11 19:00:57.427 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-11 19:00:57.431 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-11 19:00:57.436 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-11 19:00:57.441 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-11 19:00:57.444 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-11 19:00:57.447 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-11 19:00:57.450 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-11 19:00:57.458 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-11 19:00:57.461 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-11 19:00:57.464 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-11 19:00:57.466 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-11 19:00:57.472 +05:30 [DBG] Middleware loaded
2025-05-11 19:00:57.474 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-11 19:00:57.476 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-11 19:00:57.589 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-11 19:00:57.685 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-11 19:00:57.688 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-11 19:00:57.690 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-11 19:00:57.692 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-11 19:00:57.693 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-11 19:00:57.694 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-11 19:00:57.788 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-11 19:00:57.789 +05:30 [INF] Hosting environment: Development
2025-05-11 19:00:57.790 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-11 19:00:57.791 +05:30 [DBG] Hosting started
2025-05-11 19:00:57.849 +05:30 [DBG] Connection id "0HNCGI083MDSL" accepted.
2025-05-11 19:00:57.849 +05:30 [DBG] Connection id "0HNCGI083MDSK" accepted.
2025-05-11 19:00:57.852 +05:30 [DBG] Connection id "0HNCGI083MDSL" started.
2025-05-11 19:00:57.853 +05:30 [DBG] Connection id "0HNCGI083MDSK" started.
2025-05-11 19:00:57.882 +05:30 [DBG] Connection id "0HNCGI083MDSL" received FIN.
2025-05-11 19:00:57.897 +05:30 [DBG] Connection id "0HNCGI083MDSK" received FIN.
2025-05-11 19:00:57.921 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-11 19:00:57.921 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-11 19:00:57.971 +05:30 [DBG] Connection id "0HNCGI083MDSK" stopped.
2025-05-11 19:00:57.971 +05:30 [DBG] Connection id "0HNCGI083MDSL" stopped.
2025-05-11 19:00:57.975 +05:30 [DBG] Connection id "0HNCGI083MDSL" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-11 19:00:57.975 +05:30 [DBG] Connection id "0HNCGI083MDSK" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-11 19:00:58.129 +05:30 [DBG] Connection id "0HNCGI083MDSM" accepted.
2025-05-11 19:00:58.135 +05:30 [DBG] Connection id "0HNCGI083MDSM" started.
2025-05-11 19:00:58.197 +05:30 [DBG] Connection 0HNCGI083MDSM established using the following protocol: "Tls12"
2025-05-11 19:00:58.343 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-11 19:00:58.493 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-11 19:00:58.512 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-11 19:00:58.514 +05:30 [DBG] Request did not match any endpoints
2025-05-11 19:00:58.575 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-11 19:00:58.579 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-11 19:00:58.598 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-11 19:00:58.601 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-11 19:00:58.608 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 281.8337ms
2025-05-11 19:00:58.620 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-11 19:00:58.620 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-11 19:00:58.632 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-11 19:00:58.635 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 14.1739ms
2025-05-11 19:00:58.707 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 86.262ms
2025-05-11 19:00:58.819 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-11 19:00:58.822 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-11 19:00:58.823 +05:30 [DBG] Request did not match any endpoints
2025-05-11 19:00:58.854 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 35.4563ms
2025-05-11 19:01:25.681 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - application/json 47
2025-05-11 19:01:25.697 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/return-order-items'
2025-05-11 19:01:25.705 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)' with route pattern 'api/Order/return-order-items' is valid for the request path '/api/Order/return-order-items'
2025-05-11 19:01:25.709 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-11 19:01:25.716 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-11 19:01:25.870 +05:30 [DBG] Successfully validated the token.
2025-05-11 19:01:25.873 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-11 19:01:25.882 +05:30 [DBG] Authorization was successful.
2025-05-11 19:01:25.884 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-11 19:01:25.917 +05:30 [INF] Route matched with {action = "ReturnOrderItems", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReturnOrderItems(InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-11 19:01:25.923 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-11 19:01:25.925 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-11 19:01:25.928 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-11 19:01:25.932 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-11 19:01:25.933 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-11 19:01:25.937 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-11 19:01:26.055 +05:30 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-05-11 19:01:26.077 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-11 19:01:26.089 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-11 19:01:26.092 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' using the name '' in request data ...
2025-05-11 19:01:26.099 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-11 19:01:26.109 +05:30 [DBG] Connection id "0HNCGI083MDSM", Request id "0HNCGI083MDSM:00000009": started reading request body.
2025-05-11 19:01:26.110 +05:30 [DBG] Connection id "0HNCGI083MDSM", Request id "0HNCGI083MDSM:00000009": done reading request body.
2025-05-11 19:01:26.124 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'
2025-05-11 19:01:26.125 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 19:01:26.127 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 19:01:26.129 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-11 19:01:26.170 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 19:01:26.175 +05:30 [INF] Processing return for OrderId 1
2025-05-11 19:02:22.952 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-11 19:02:25.823 +05:30 [DBG] Compiling query expression: 
'DbSet<OrderItems>()
    .Where(x => x.OrderId == __orderId_0 && __productIds_1.Contains(x.ProductId))'
2025-05-11 19:02:26.123 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<OrderItems>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE (o.OrderId == @__orderId_0) && o.ProductId IN (
            SELECT p.value
            FROM OPENJSON(@__productIds_1) WITH (value bigint '') AS p)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE (o.OrderId == @__orderId_0) && o.ProductId IN (
            SELECT p.value
            FROM OPENJSON(@__productIds_1) WITH (value bigint '') AS p), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        OrderItems entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            OrderItems instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(OrderItems);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: OrderItems.OrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (OrderItems)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]: 
                        {
                            return 
                            {
                                OrderItems instance;
                                instance = new OrderItems();
                                instance.<OrderItemId>k__BackingField = dataReader.GetInt64(0);
                                instance.<OrderDate>k__BackingField = dataReader.GetDateTime(1);
                                instance.<OrderId>k__BackingField = dataReader.GetInt64(2);
                                instance.<OrderItemStatus>k__BackingField = dataReader.GetInt32(3);
                                instance.<ProductId>k__BackingField = dataReader.GetInt64(4);
                                instance.<ProductPrice>k__BackingField = dataReader.GetDecimal(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(OrderItems)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-11 19:02:26.175 +05:30 [DBG] Creating DbConnection.
2025-05-11 19:02:26.194 +05:30 [DBG] Created DbConnection. (16ms).
2025-05-11 19:02:26.198 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:02:26.416 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:02:26.420 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 19:02:26.426 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-05-11 19:02:26.439 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (19ms).
2025-05-11 19:02:26.447 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-11 19:02:26.500 +05:30 [INF] Executed DbCommand (54ms) [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-11 19:02:26.533 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:02:26.563 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:02:26.571 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 64ms reading results.
2025-05-11 19:02:26.575 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:02:26.580 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (5ms).
2025-05-11 19:03:02.943 +05:30 [DBG] Compiling query expression: 
'DbSet<OrderItems>()
    .Where(x => x.OrderId == __orderId_0)'
2025-05-11 19:03:02.948 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<OrderItems>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE o.OrderId == @__orderId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE o.OrderId == @__orderId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        OrderItems entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            OrderItems instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(OrderItems);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: OrderItems.OrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (OrderItems)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]: 
                        {
                            return 
                            {
                                OrderItems instance;
                                instance = new OrderItems();
                                instance.<OrderItemId>k__BackingField = dataReader.GetInt64(0);
                                instance.<OrderDate>k__BackingField = dataReader.GetDateTime(1);
                                instance.<OrderId>k__BackingField = dataReader.GetInt64(2);
                                instance.<OrderItemStatus>k__BackingField = dataReader.GetInt32(3);
                                instance.<ProductId>k__BackingField = dataReader.GetInt64(4);
                                instance.<ProductPrice>k__BackingField = dataReader.GetDecimal(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(OrderItems)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-11 19:03:02.961 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:03:02.963 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:03:02.964 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 19:03:02.965 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 19:03:02.966 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-11 19:03:02.967 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0
2025-05-11 19:03:02.987 +05:30 [INF] Executed DbCommand (20ms) [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0
2025-05-11 19:03:02.990 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:03:02.992 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:03:02.993 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-11 19:03:02.994 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:03:02.995 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-11 19:15:34.142 +05:30 [INF] Starting up the application...
2025-05-11 19:15:35.163 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-11 19:15:35.276 +05:30 [DBG] Hosting starting
2025-05-11 19:15:35.317 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-11 19:15:35.329 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-11 19:15:35.335 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-11 19:15:35.339 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-11 19:15:35.343 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-11 19:15:35.350 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-11 19:15:35.355 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-11 19:15:35.359 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-11 19:15:35.361 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-11 19:15:35.367 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-11 19:15:35.369 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-11 19:15:35.371 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-11 19:15:35.372 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-11 19:15:35.379 +05:30 [DBG] Middleware loaded
2025-05-11 19:15:35.381 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-11 19:15:35.383 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-11 19:15:35.482 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-11 19:15:35.586 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-11 19:15:35.597 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-11 19:15:35.599 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-11 19:15:35.600 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-11 19:15:35.602 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-11 19:15:35.603 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-11 19:15:35.732 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-11 19:15:35.733 +05:30 [INF] Hosting environment: Development
2025-05-11 19:15:35.734 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-11 19:15:35.735 +05:30 [DBG] Hosting started
2025-05-11 19:15:35.785 +05:30 [DBG] Connection id "0HNCGI8DOBHCJ" received FIN.
2025-05-11 19:15:35.785 +05:30 [DBG] Connection id "0HNCGI8DOBHCI" received FIN.
2025-05-11 19:15:35.804 +05:30 [DBG] Connection id "0HNCGI8DOBHCI" accepted.
2025-05-11 19:15:35.804 +05:30 [DBG] Connection id "0HNCGI8DOBHCJ" accepted.
2025-05-11 19:15:35.806 +05:30 [DBG] Connection id "0HNCGI8DOBHCI" started.
2025-05-11 19:15:35.807 +05:30 [DBG] Connection id "0HNCGI8DOBHCJ" started.
2025-05-11 19:15:35.831 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-11 19:15:35.831 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-11 19:15:35.885 +05:30 [DBG] Connection id "0HNCGI8DOBHCI" stopped.
2025-05-11 19:15:35.885 +05:30 [DBG] Connection id "0HNCGI8DOBHCJ" stopped.
2025-05-11 19:15:35.891 +05:30 [DBG] Connection id "0HNCGI8DOBHCI" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-11 19:15:35.891 +05:30 [DBG] Connection id "0HNCGI8DOBHCJ" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-11 19:15:36.036 +05:30 [DBG] Connection id "0HNCGI8DOBHCK" accepted.
2025-05-11 19:15:36.039 +05:30 [DBG] Connection id "0HNCGI8DOBHCK" started.
2025-05-11 19:15:36.119 +05:30 [DBG] Connection 0HNCGI8DOBHCK established using the following protocol: "Tls12"
2025-05-11 19:15:36.242 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-11 19:15:36.403 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-11 19:15:36.426 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-11 19:15:36.428 +05:30 [DBG] Request did not match any endpoints
2025-05-11 19:15:36.502 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-11 19:15:36.505 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-11 19:15:36.527 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-11 19:15:36.529 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-11 19:15:36.534 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 308.7722ms
2025-05-11 19:15:36.545 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-11 19:15:36.545 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-11 19:15:36.571 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-11 19:15:36.576 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 31.248ms
2025-05-11 19:15:36.671 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 125.9285ms
2025-05-11 19:15:36.916 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-11 19:15:36.920 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-11 19:15:36.923 +05:30 [DBG] Request did not match any endpoints
2025-05-11 19:15:36.952 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 36.3361ms
2025-05-11 19:15:54.818 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - application/json 47
2025-05-11 19:15:54.831 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/return-order-items'
2025-05-11 19:15:54.836 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)' with route pattern 'api/Order/return-order-items' is valid for the request path '/api/Order/return-order-items'
2025-05-11 19:15:54.839 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-11 19:15:54.845 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-11 19:15:55.010 +05:30 [DBG] Successfully validated the token.
2025-05-11 19:15:55.015 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-11 19:15:55.021 +05:30 [DBG] Authorization was successful.
2025-05-11 19:15:55.023 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-11 19:15:55.054 +05:30 [INF] Route matched with {action = "ReturnOrderItems", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReturnOrderItems(InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-11 19:15:55.061 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-11 19:15:55.062 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-11 19:15:55.064 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-11 19:15:55.067 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-11 19:15:55.068 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-11 19:15:55.072 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-11 19:15:55.199 +05:30 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-05-11 19:15:55.222 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-11 19:15:55.235 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-11 19:15:55.238 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' using the name '' in request data ...
2025-05-11 19:15:55.241 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-11 19:15:55.254 +05:30 [DBG] Connection id "0HNCGI8DOBHCK", Request id "0HNCGI8DOBHCK:00000009": started reading request body.
2025-05-11 19:15:55.256 +05:30 [DBG] Connection id "0HNCGI8DOBHCK", Request id "0HNCGI8DOBHCK:00000009": done reading request body.
2025-05-11 19:15:55.271 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'
2025-05-11 19:15:55.273 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 19:15:55.275 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 19:15:55.277 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-11 19:15:55.320 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 19:15:55.329 +05:30 [INF] Processing return for OrderId 1
2025-05-11 19:16:05.910 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-11 19:16:05.974 +05:30 [DBG] Compiling query expression: 
'DbSet<OrderItems>()
    .Where(x => x.OrderId == __orderId_0 && __productIds_1.Contains(x.ProductId))'
2025-05-11 19:16:06.541 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<OrderItems>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE (o.OrderId == @__orderId_0) && o.ProductId IN (
            SELECT p.value
            FROM OPENJSON(@__productIds_1) WITH (value bigint '') AS p)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE (o.OrderId == @__orderId_0) && o.ProductId IN (
            SELECT p.value
            FROM OPENJSON(@__productIds_1) WITH (value bigint '') AS p), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        OrderItems entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            OrderItems instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(OrderItems);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: OrderItems.OrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (OrderItems)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]: 
                        {
                            return 
                            {
                                OrderItems instance;
                                instance = new OrderItems();
                                instance.<OrderItemId>k__BackingField = dataReader.GetInt64(0);
                                instance.<OrderDate>k__BackingField = dataReader.GetDateTime(1);
                                instance.<OrderId>k__BackingField = dataReader.GetInt64(2);
                                instance.<OrderItemStatus>k__BackingField = dataReader.GetInt32(3);
                                instance.<ProductId>k__BackingField = dataReader.GetInt64(4);
                                instance.<ProductPrice>k__BackingField = dataReader.GetDecimal(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(OrderItems)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-11 19:16:06.599 +05:30 [DBG] Creating DbConnection.
2025-05-11 19:16:06.619 +05:30 [DBG] Created DbConnection. (17ms).
2025-05-11 19:16:06.623 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:16:06.933 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:16:06.938 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 19:16:06.945 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-05-11 19:16:06.957 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (19ms).
2025-05-11 19:16:06.967 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-11 19:16:07.025 +05:30 [INF] Executed DbCommand (61ms) [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-11 19:16:07.066 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:16:07.101 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:16:07.109 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 75ms reading results.
2025-05-11 19:16:07.113 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:16:07.119 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (5ms).
2025-05-11 19:16:13.286 +05:30 [DBG] Compiling query expression: 
'DbSet<OrderItems>()
    .Where(x => x.OrderId == __orderId_0)'
2025-05-11 19:16:13.300 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<OrderItems>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE o.OrderId == @__orderId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE o.OrderId == @__orderId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        OrderItems entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            OrderItems instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(OrderItems);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: OrderItems.OrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (OrderItems)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]: 
                        {
                            return 
                            {
                                OrderItems instance;
                                instance = new OrderItems();
                                instance.<OrderItemId>k__BackingField = dataReader.GetInt64(0);
                                instance.<OrderDate>k__BackingField = dataReader.GetDateTime(1);
                                instance.<OrderId>k__BackingField = dataReader.GetInt64(2);
                                instance.<OrderItemStatus>k__BackingField = dataReader.GetInt32(3);
                                instance.<ProductId>k__BackingField = dataReader.GetInt64(4);
                                instance.<ProductPrice>k__BackingField = dataReader.GetDecimal(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(OrderItems)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-11 19:16:13.316 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:16:13.318 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:16:13.319 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 19:16:13.320 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 19:16:13.321 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-11 19:16:13.322 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0
2025-05-11 19:16:13.343 +05:30 [INF] Executed DbCommand (21ms) [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0
2025-05-11 19:16:13.346 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:16:13.348 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:16:13.349 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-11 19:16:13.350 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:16:13.351 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-11 19:16:28.468 +05:30 [WRN] Item 2 in OrderId 1 has already been returned
2025-05-11 19:16:53.187 +05:30 [INF] Starting up the application...
2025-05-11 19:16:54.072 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-11 19:16:54.241 +05:30 [DBG] Hosting starting
2025-05-11 19:16:54.291 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-11 19:16:54.311 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-11 19:16:54.319 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-11 19:16:54.326 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-11 19:16:54.332 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-11 19:16:54.341 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-11 19:16:54.348 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-11 19:16:54.354 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-11 19:16:54.357 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-11 19:16:54.367 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-11 19:16:54.369 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-11 19:16:54.373 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-11 19:16:54.374 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-11 19:16:54.384 +05:30 [DBG] Middleware loaded
2025-05-11 19:16:54.388 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-11 19:16:54.391 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-11 19:16:54.518 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-11 19:16:54.649 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-11 19:16:54.651 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-11 19:16:54.652 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-11 19:16:54.654 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-11 19:16:54.655 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-11 19:16:54.657 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-11 19:16:54.787 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-11 19:16:54.789 +05:30 [INF] Hosting environment: Development
2025-05-11 19:16:54.790 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-11 19:16:54.792 +05:30 [DBG] Hosting started
2025-05-11 19:16:54.879 +05:30 [DBG] Connection id "0HNCGI95AKTEH" received FIN.
2025-05-11 19:16:54.879 +05:30 [DBG] Connection id "0HNCGI95AKTEG" received FIN.
2025-05-11 19:16:54.891 +05:30 [DBG] Connection id "0HNCGI95AKTEG" accepted.
2025-05-11 19:16:54.891 +05:30 [DBG] Connection id "0HNCGI95AKTEH" accepted.
2025-05-11 19:16:54.893 +05:30 [DBG] Connection id "0HNCGI95AKTEG" started.
2025-05-11 19:16:54.893 +05:30 [DBG] Connection id "0HNCGI95AKTEH" started.
2025-05-11 19:16:54.910 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-11 19:16:54.910 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-11 19:16:54.960 +05:30 [DBG] Connection id "0HNCGI95AKTEH" stopped.
2025-05-11 19:16:54.960 +05:30 [DBG] Connection id "0HNCGI95AKTEG" stopped.
2025-05-11 19:16:54.964 +05:30 [DBG] Connection id "0HNCGI95AKTEH" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-11 19:16:54.965 +05:30 [DBG] Connection id "0HNCGI95AKTEG" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-11 19:16:55.096 +05:30 [DBG] Connection id "0HNCGI95AKTEI" accepted.
2025-05-11 19:16:55.101 +05:30 [DBG] Connection id "0HNCGI95AKTEI" started.
2025-05-11 19:16:55.166 +05:30 [DBG] Connection 0HNCGI95AKTEI established using the following protocol: "Tls12"
2025-05-11 19:16:55.238 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-11 19:16:55.355 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-11 19:16:55.374 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-11 19:16:55.376 +05:30 [DBG] Request did not match any endpoints
2025-05-11 19:16:55.462 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-11 19:16:55.466 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-11 19:16:55.483 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-11 19:16:55.484 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-11 19:16:55.489 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 261.0055ms
2025-05-11 19:16:55.498 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-11 19:16:55.499 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-11 19:16:55.511 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-11 19:16:55.516 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 18.1538ms
2025-05-11 19:16:55.587 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 88.1489ms
2025-05-11 19:16:55.796 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-11 19:16:55.801 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-11 19:16:55.802 +05:30 [DBG] Request did not match any endpoints
2025-05-11 19:16:55.823 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 27.7482ms
2025-05-11 19:17:13.817 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - application/json 47
2025-05-11 19:17:13.835 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/return-order-items'
2025-05-11 19:17:13.842 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)' with route pattern 'api/Order/return-order-items' is valid for the request path '/api/Order/return-order-items'
2025-05-11 19:17:13.845 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-11 19:17:13.853 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-11 19:17:13.987 +05:30 [DBG] Successfully validated the token.
2025-05-11 19:17:13.990 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-11 19:17:13.996 +05:30 [DBG] Authorization was successful.
2025-05-11 19:17:13.999 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-11 19:17:14.030 +05:30 [INF] Route matched with {action = "ReturnOrderItems", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReturnOrderItems(InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-11 19:17:14.034 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-11 19:17:14.036 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-11 19:17:14.037 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-11 19:17:14.039 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-11 19:17:14.040 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-11 19:17:14.043 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-11 19:17:14.157 +05:30 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-05-11 19:17:14.177 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-11 19:17:14.189 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-11 19:17:14.192 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' using the name '' in request data ...
2025-05-11 19:17:14.195 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-11 19:17:14.205 +05:30 [DBG] Connection id "0HNCGI95AKTEI", Request id "0HNCGI95AKTEI:00000009": started reading request body.
2025-05-11 19:17:14.207 +05:30 [DBG] Connection id "0HNCGI95AKTEI", Request id "0HNCGI95AKTEI:00000009": done reading request body.
2025-05-11 19:17:14.220 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'
2025-05-11 19:17:14.221 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 19:17:14.222 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 19:17:14.224 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-11 19:17:14.260 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 19:17:14.267 +05:30 [INF] Processing return for OrderId 1
2025-05-11 19:17:17.478 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-11 19:17:17.533 +05:30 [DBG] Compiling query expression: 
'DbSet<OrderItems>()
    .Where(x => x.OrderId == __orderId_0 && __productIds_1.Contains(x.ProductId))'
2025-05-11 19:17:18.042 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<OrderItems>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE (o.OrderId == @__orderId_0) && o.ProductId IN (
            SELECT p.value
            FROM OPENJSON(@__productIds_1) WITH (value bigint '') AS p)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE (o.OrderId == @__orderId_0) && o.ProductId IN (
            SELECT p.value
            FROM OPENJSON(@__productIds_1) WITH (value bigint '') AS p), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        OrderItems entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            OrderItems instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(OrderItems);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: OrderItems.OrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (OrderItems)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]: 
                        {
                            return 
                            {
                                OrderItems instance;
                                instance = new OrderItems();
                                instance.<OrderItemId>k__BackingField = dataReader.GetInt64(0);
                                instance.<OrderDate>k__BackingField = dataReader.GetDateTime(1);
                                instance.<OrderId>k__BackingField = dataReader.GetInt64(2);
                                instance.<OrderItemStatus>k__BackingField = dataReader.GetInt32(3);
                                instance.<ProductId>k__BackingField = dataReader.GetInt64(4);
                                instance.<ProductPrice>k__BackingField = dataReader.GetDecimal(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(OrderItems)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-11 19:17:18.095 +05:30 [DBG] Creating DbConnection.
2025-05-11 19:17:18.119 +05:30 [DBG] Created DbConnection. (21ms).
2025-05-11 19:17:18.125 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:17:18.343 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:17:18.347 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 19:17:18.355 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-05-11 19:17:18.372 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (25ms).
2025-05-11 19:17:18.383 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-11 19:17:18.471 +05:30 [INF] Executed DbCommand (89ms) [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-11 19:17:18.520 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:17:18.555 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:17:18.562 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 83ms reading results.
2025-05-11 19:17:18.566 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:17:18.572 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (5ms).
2025-05-11 19:17:19.104 +05:30 [DBG] Compiling query expression: 
'DbSet<OrderItems>()
    .Where(x => x.OrderId == __orderId_0)'
2025-05-11 19:17:19.110 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<OrderItems>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE o.OrderId == @__orderId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE o.OrderId == @__orderId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        OrderItems entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            OrderItems instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(OrderItems);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: OrderItems.OrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (OrderItems)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]: 
                        {
                            return 
                            {
                                OrderItems instance;
                                instance = new OrderItems();
                                instance.<OrderItemId>k__BackingField = dataReader.GetInt64(0);
                                instance.<OrderDate>k__BackingField = dataReader.GetDateTime(1);
                                instance.<OrderId>k__BackingField = dataReader.GetInt64(2);
                                instance.<OrderItemStatus>k__BackingField = dataReader.GetInt32(3);
                                instance.<ProductId>k__BackingField = dataReader.GetInt64(4);
                                instance.<ProductPrice>k__BackingField = dataReader.GetDecimal(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(OrderItems)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-11 19:17:19.125 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:17:19.127 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:17:19.128 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 19:17:19.128 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 19:17:19.129 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-11 19:17:19.130 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0
2025-05-11 19:17:19.153 +05:30 [INF] Executed DbCommand (23ms) [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0
2025-05-11 19:17:19.156 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:17:19.158 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:17:19.178 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 22ms reading results.
2025-05-11 19:17:19.180 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:17:19.183 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-11 19:17:24.964 +05:30 [WRN] Item 2 in OrderId 1 has already been returned
2025-05-11 19:17:47.985 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-11 19:17:47.990 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-11 19:17:47.991 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-11 19:17:47.992 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-11 19:17:47.995 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-11 19:17:47.997 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-11 19:17:48.018 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem) in 33973.6002ms
2025-05-11 19:17:48.020 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-11 19:17:48.024 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-11 19:17:48.029 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:17:48.031 +05:30 [DBG] Disposed connection to database '' on server '' (2ms).
2025-05-11 19:17:48.032 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - 400 null application/json; charset=utf-8 34215.9854ms
2025-05-11 19:45:31.404 +05:30 [INF] Starting up the application...
2025-05-11 19:45:32.374 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-11 19:45:32.464 +05:30 [DBG] Hosting starting
2025-05-11 19:45:32.520 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-11 19:45:32.537 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-11 19:45:32.543 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-11 19:45:32.546 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-11 19:45:32.551 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-11 19:45:32.556 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-11 19:45:32.559 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-11 19:45:32.562 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-11 19:45:32.564 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-11 19:45:32.571 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-11 19:45:32.573 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-11 19:45:32.575 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-11 19:45:32.576 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-11 19:45:32.582 +05:30 [DBG] Middleware loaded
2025-05-11 19:45:32.585 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-11 19:45:32.587 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-11 19:45:32.681 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-11 19:45:32.793 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-11 19:45:32.794 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-11 19:45:32.795 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-11 19:45:32.796 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-11 19:45:32.796 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-11 19:45:32.798 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-11 19:45:32.890 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-11 19:45:32.894 +05:30 [INF] Hosting environment: Development
2025-05-11 19:45:32.900 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-11 19:45:32.903 +05:30 [DBG] Hosting started
2025-05-11 19:45:33.118 +05:30 [DBG] Connection id "0HNCGIP5D1RTG" accepted.
2025-05-11 19:45:33.120 +05:30 [DBG] Connection id "0HNCGIP5D1RTG" started.
2025-05-11 19:45:33.127 +05:30 [DBG] Connection id "0HNCGIP5D1RTH" accepted.
2025-05-11 19:45:33.128 +05:30 [DBG] Connection id "0HNCGIP5D1RTH" started.
2025-05-11 19:45:33.144 +05:30 [DBG] Connection id "0HNCGIP5D1RTH" received FIN.
2025-05-11 19:45:33.144 +05:30 [DBG] Connection id "0HNCGIP5D1RTG" received FIN.
2025-05-11 19:45:33.164 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-11 19:45:33.164 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-11 19:45:33.202 +05:30 [DBG] Connection id "0HNCGIP5D1RTG" stopped.
2025-05-11 19:45:33.202 +05:30 [DBG] Connection id "0HNCGIP5D1RTH" stopped.
2025-05-11 19:45:33.205 +05:30 [DBG] Connection id "0HNCGIP5D1RTG" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-11 19:45:33.205 +05:30 [DBG] Connection id "0HNCGIP5D1RTH" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-11 19:45:33.327 +05:30 [DBG] Connection id "0HNCGIP5D1RTI" accepted.
2025-05-11 19:45:33.337 +05:30 [DBG] Connection id "0HNCGIP5D1RTI" started.
2025-05-11 19:45:33.410 +05:30 [DBG] Connection 0HNCGIP5D1RTI established using the following protocol: "Tls12"
2025-05-11 19:45:33.522 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-11 19:45:33.644 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-11 19:45:33.666 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-11 19:45:33.668 +05:30 [DBG] Request did not match any endpoints
2025-05-11 19:45:33.738 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-11 19:45:33.740 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-11 19:45:33.759 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-11 19:45:33.762 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-11 19:45:33.771 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 263.1544ms
2025-05-11 19:45:33.778 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-11 19:45:33.778 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-11 19:45:33.799 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-11 19:45:33.808 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 29.9668ms
2025-05-11 19:45:33.859 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 81.2843ms
2025-05-11 19:45:33.972 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-11 19:45:33.975 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-11 19:45:33.976 +05:30 [DBG] Request did not match any endpoints
2025-05-11 19:45:34.008 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 36.1418ms
2025-05-11 19:46:12.409 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - application/json 49
2025-05-11 19:46:12.433 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/return-order-items'
2025-05-11 19:46:12.441 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)' with route pattern 'api/Order/return-order-items' is valid for the request path '/api/Order/return-order-items'
2025-05-11 19:46:12.443 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-11 19:46:12.447 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-11 19:46:12.592 +05:30 [DBG] Successfully validated the token.
2025-05-11 19:46:12.595 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-11 19:46:12.601 +05:30 [DBG] Authorization was successful.
2025-05-11 19:46:12.604 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-11 19:46:12.644 +05:30 [INF] Route matched with {action = "ReturnOrderItems", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReturnOrderItems(InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-11 19:46:12.648 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-11 19:46:12.650 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-11 19:46:12.652 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-11 19:46:12.655 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-11 19:46:12.657 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-11 19:46:12.660 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-11 19:46:12.779 +05:30 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-05-11 19:46:12.802 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-11 19:46:12.813 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-11 19:46:12.816 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' using the name '' in request data ...
2025-05-11 19:46:12.818 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-11 19:46:12.834 +05:30 [DBG] Connection id "0HNCGIP5D1RTI", Request id "0HNCGIP5D1RTI:00000009": started reading request body.
2025-05-11 19:46:12.835 +05:30 [DBG] Connection id "0HNCGIP5D1RTI", Request id "0HNCGIP5D1RTI:00000009": done reading request body.
2025-05-11 19:46:12.852 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'
2025-05-11 19:46:12.854 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 19:46:12.856 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 19:46:12.857 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-11 19:46:12.893 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 19:46:12.899 +05:30 [INF] Processing return for OrderId 1
2025-05-11 19:46:13.642 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-11 19:46:13.692 +05:30 [DBG] Compiling query expression: 
'DbSet<OrderItems>()
    .Where(x => x.OrderId == __orderId_0 && __productIds_1.Contains(x.ProductId))'
2025-05-11 19:46:14.021 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<OrderItems>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE (o.OrderId == @__orderId_0) && o.ProductId IN (
            SELECT p.value
            FROM OPENJSON(@__productIds_1) WITH (value bigint '') AS p)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE (o.OrderId == @__orderId_0) && o.ProductId IN (
            SELECT p.value
            FROM OPENJSON(@__productIds_1) WITH (value bigint '') AS p), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        OrderItems entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            OrderItems instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(OrderItems);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: OrderItems.OrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (OrderItems)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]: 
                        {
                            return 
                            {
                                OrderItems instance;
                                instance = new OrderItems();
                                instance.<OrderItemId>k__BackingField = dataReader.GetInt64(0);
                                instance.<OrderDate>k__BackingField = dataReader.GetDateTime(1);
                                instance.<OrderId>k__BackingField = dataReader.GetInt64(2);
                                instance.<OrderItemStatus>k__BackingField = dataReader.GetInt32(3);
                                instance.<ProductId>k__BackingField = dataReader.GetInt64(4);
                                instance.<ProductPrice>k__BackingField = dataReader.GetDecimal(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(OrderItems)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-11 19:46:14.072 +05:30 [DBG] Creating DbConnection.
2025-05-11 19:46:14.090 +05:30 [DBG] Created DbConnection. (16ms).
2025-05-11 19:46:14.095 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.287 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.291 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 19:46:14.297 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-05-11 19:46:14.308 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (17ms).
2025-05-11 19:46:14.317 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-11 19:46:14.396 +05:30 [INF] Executed DbCommand (82ms) [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-11 19:46:14.431 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:46:14.458 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:46:14.466 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.475 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 71ms reading results.
2025-05-11 19:46:14.479 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.484 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (5ms).
2025-05-11 19:46:14.488 +05:30 [DBG] Compiling query expression: 
'DbSet<OrderItems>()
    .Where(x => x.OrderId == __orderId_0)'
2025-05-11 19:46:14.493 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<OrderItems>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE o.OrderId == @__orderId_0) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE o.OrderId == @__orderId_0, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        OrderItems entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            OrderItems instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(OrderItems);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: OrderItems.OrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (OrderItems)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]: 
                        {
                            return 
                            {
                                OrderItems instance;
                                instance = new OrderItems();
                                instance.<OrderItemId>k__BackingField = dataReader.GetInt64(0);
                                instance.<OrderDate>k__BackingField = dataReader.GetDateTime(1);
                                instance.<OrderId>k__BackingField = dataReader.GetInt64(2);
                                instance.<OrderItemStatus>k__BackingField = dataReader.GetInt32(3);
                                instance.<ProductId>k__BackingField = dataReader.GetInt64(4);
                                instance.<ProductPrice>k__BackingField = dataReader.GetDecimal(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(OrderItems)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-11 19:46:14.507 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.509 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.510 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 19:46:14.510 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 19:46:14.511 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-11 19:46:14.512 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0
2025-05-11 19:46:14.517 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0
2025-05-11 19:46:14.521 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.522 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-11 19:46:14.523 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.524 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-11 19:46:14.534 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .FirstOrDefault(e => EF.Property<long>(e, "ProductId") == __p_0)'
2025-05-11 19:46:14.546 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Products>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Products>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Products entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Products instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Products);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Products)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                            {
                                return 
                                {
                                    Products instance;
                                    instance = new Products();
                                    instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                    instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Name>k__BackingField = dataReader.GetString(9);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                    instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Products)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-11 19:46:14.563 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.564 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.565 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 19:46:14.566 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 19:46:14.567 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-11 19:46:14.568 +05:30 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__p_0
2025-05-11 19:46:14.573 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__p_0
2025-05-11 19:46:14.591 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:46:14.593 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:46:14.621 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.622 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 46ms reading results.
2025-05-11 19:46:14.623 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.624 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-11 19:46:14.634 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:46:14.638 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-11 19:46:14.641 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-11 19:46:14.657 +05:30 [DBG] The unchanged property 'OrderItems.OrderDate' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-11 19:46:14.659 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:46:14.662 +05:30 [DBG] The unchanged property 'OrderItems.OrderItemStatus' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-11 19:46:14.665 +05:30 [DBG] The foreign key property 'OrderItems.OrderItemStatus' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-11 19:46:14.675 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-11 19:46:14.739 +05:30 [DBG] Executing 2 update commands as a batch.
2025-05-11 19:46:14.744 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.746 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.748 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-11 19:46:14.756 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-11 19:46:14.759 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 19:46:14.760 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 19:46:14.763 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-11 19:46:14.764 +05:30 [DBG] Executing DbCommand [Parameters=[@p2='?' (DbType = Int64), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32), @p16='?' (DbType = Int64), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64), @p7='?' (Size = 225), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Int32), @p11='?' (Size = 100), @p12='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p13='?' (DbType = Int32), @p14='?' (DbType = DateTime2), @p15='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [OrderItems] SET [OrderDate] = @p0, [OrderItemStatus] = @p1
OUTPUT 1
WHERE [OrderItemId] = @p2;
UPDATE [Products] SET [AvailableQuantity] = @p3, [CategoryId] = @p4, [CreatedAt] = @p5, [CreatedBy] = @p6, [Description] = @p7, [IsDeleted] = @p8, [LastRestockAt] = @p9, [MinimumRequiredQuantity] = @p10, [Name] = @p11, [Price] = @p12, [ProductStatus] = @p13, [UpdatedAt] = @p14, [UpdatedBy] = @p15
OUTPUT 1
WHERE [ProductId] = @p16;
2025-05-11 19:46:14.779 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@p2='?' (DbType = Int64), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32), @p16='?' (DbType = Int64), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64), @p7='?' (Size = 225), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Int32), @p11='?' (Size = 100), @p12='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p13='?' (DbType = Int32), @p14='?' (DbType = DateTime2), @p15='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [OrderItems] SET [OrderDate] = @p0, [OrderItemStatus] = @p1
OUTPUT 1
WHERE [OrderItemId] = @p2;
UPDATE [Products] SET [AvailableQuantity] = @p3, [CategoryId] = @p4, [CreatedAt] = @p5, [CreatedBy] = @p6, [Description] = @p7, [IsDeleted] = @p8, [LastRestockAt] = @p9, [MinimumRequiredQuantity] = @p10, [Name] = @p11, [Price] = @p12, [ProductStatus] = @p13, [UpdatedAt] = @p14, [UpdatedBy] = @p15
OUTPUT 1
WHERE [ProductId] = @p16;
2025-05-11 19:46:14.787 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.788 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 5ms reading results.
2025-05-11 19:46:14.791 +05:30 [DBG] Committing transaction.
2025-05-11 19:46:14.795 +05:30 [DBG] Committed transaction.
2025-05-11 19:46:14.797 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.798 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-11 19:46:14.801 +05:30 [DBG] Disposing transaction.
2025-05-11 19:46:14.805 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:46:14.807 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:46:14.810 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 2 entities written to the database.
2025-05-11 19:46:14.812 +05:30 [INF] Starting stock movement for ProductId: 1, UserId: 2, Status: "Returned"
2025-05-11 19:46:14.814 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .FirstOrDefault(p => p.ProductId == __productId_0)'
2025-05-11 19:46:14.824 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Products>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Products>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__productId_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__productId_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Products entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Products instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Products);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Products)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                            {
                                return 
                                {
                                    Products instance;
                                    instance = new Products();
                                    instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                    instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Name>k__BackingField = dataReader.GetString(9);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                    instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Products)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-11 19:46:14.843 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.844 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.845 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 19:46:14.846 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-11 19:46:14.847 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-11 19:46:14.848 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-11 19:46:14.852 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-11 19:46:14.855 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.855 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-11 19:46:14.857 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.857 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-11 19:46:14.859 +05:30 [INF] 'Return' movement for ProductId: 1
2025-05-11 19:46:14.882 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:46:14.906 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:46:14.911 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:46:14.913 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-11 19:46:14.914 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-11 19:46:14.921 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-11 19:46:14.930 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.931 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.932 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 19:46:14.933 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-11 19:46:14.935 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-11 19:46:14.937 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-11 19:46:14.945 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-11 19:46:14.955 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-11 19:46:14.959 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.960 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 12ms reading results.
2025-05-11 19:46:14.962 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:14.963 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-11 19:46:14.966 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:46:14.968 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-11 19:46:14.970 +05:30 [INF] Stock movement successfully for ProductId: 1
2025-05-11 19:46:14.971 +05:30 [WRN] Item 2 in OrderId 1 has already been returned
2025-05-11 19:46:14.977 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-11 19:46:14.981 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-11 19:46:14.982 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-11 19:46:14.983 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-11 19:46:14.994 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-11 19:46:14.997 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-11 19:46:15.021 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem) in 2357.6773ms
2025-05-11 19:46:15.023 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-11 19:46:15.026 +05:30 [DBG] Connection id "0HNCGIP5D1RTI" received FIN.
2025-05-11 19:46:15.027 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-11 19:46:15.029 +05:30 [DBG] Connection id "0HNCGIP5D1RTI" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-11 19:46:15.036 +05:30 [DBG] Connection id "0HNCGIP5D1RTI" is closed. The last processed stream ID was 9.
2025-05-11 19:46:15.041 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:15.044 +05:30 [DBG] Disposed connection to database '' on server '' (3ms).
2025-05-11 19:46:15.048 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - 400 null application/json; charset=utf-8 2638.7092ms
2025-05-11 19:46:15.052 +05:30 [DBG] The connection queue processing loop for 0HNCGIP5D1RTI completed.
2025-05-11 19:46:15.054 +05:30 [DBG] Connection id "0HNCGIP5D1RTI" stopped.
2025-05-11 19:46:30.917 +05:30 [DBG] Connection id "0HNCGIP5D1RTJ" accepted.
2025-05-11 19:46:30.919 +05:30 [DBG] Connection id "0HNCGIP5D1RTJ" started.
2025-05-11 19:46:30.998 +05:30 [DBG] Connection 0HNCGIP5D1RTJ established using the following protocol: "Tls12"
2025-05-11 19:46:31.000 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - application/json 47
2025-05-11 19:46:31.007 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/return-order-items'
2025-05-11 19:46:31.008 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)' with route pattern 'api/Order/return-order-items' is valid for the request path '/api/Order/return-order-items'
2025-05-11 19:46:31.010 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-11 19:46:31.012 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-11 19:46:31.014 +05:30 [DBG] Successfully validated the token.
2025-05-11 19:46:31.015 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-11 19:46:31.018 +05:30 [DBG] Authorization was successful.
2025-05-11 19:46:31.019 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-11 19:46:31.025 +05:30 [INF] Route matched with {action = "ReturnOrderItems", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReturnOrderItems(InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-11 19:46:31.027 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-11 19:46:31.029 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-11 19:46:31.030 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-11 19:46:31.033 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-11 19:46:31.034 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-11 19:46:31.036 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-11 19:46:31.041 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-11 19:46:31.043 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-11 19:46:31.045 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' using the name '' in request data ...
2025-05-11 19:46:31.046 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-11 19:46:31.048 +05:30 [DBG] Connection id "0HNCGIP5D1RTJ", Request id "0HNCGIP5D1RTJ:00000001": started reading request body.
2025-05-11 19:46:31.049 +05:30 [DBG] Connection id "0HNCGIP5D1RTJ", Request id "0HNCGIP5D1RTJ:00000001": done reading request body.
2025-05-11 19:46:31.050 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'
2025-05-11 19:46:31.052 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 19:46:31.053 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 19:46:31.055 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-11 19:46:31.059 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 19:46:31.061 +05:30 [INF] Processing return for OrderId 1
2025-05-11 19:46:31.083 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-11 19:46:31.090 +05:30 [DBG] Creating DbConnection.
2025-05-11 19:46:31.091 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-11 19:46:31.092 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:31.094 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:31.095 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 19:46:31.097 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-11 19:46:31.098 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-11 19:46:31.100 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-11 19:46:31.109 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-11 19:46:31.113 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:46:31.115 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:31.116 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-11 19:46:31.117 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:31.118 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-11 19:46:31.119 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:31.121 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:31.122 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 19:46:31.123 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 19:46:31.124 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-11 19:46:31.130 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0
2025-05-11 19:46:31.133 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0
2025-05-11 19:46:31.136 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:46:31.138 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:31.139 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-11 19:46:31.141 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:31.143 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-11 19:46:31.145 +05:30 [WRN] Item 1 in OrderId 1 has already been returned
2025-05-11 19:46:31.146 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-11 19:46:31.149 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-11 19:46:31.149 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-11 19:46:31.150 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-11 19:46:31.151 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-11 19:46:31.152 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-11 19:46:31.155 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem) in 118.5611ms
2025-05-11 19:46:31.157 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-11 19:46:31.159 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-11 19:46:31.160 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:46:31.162 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-11 19:46:31.164 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - 400 null application/json; charset=utf-8 163.2865ms
2025-05-11 19:52:39.388 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Order/customer-order/1 - null null
2025-05-11 19:52:39.400 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/customer-order/1'
2025-05-11 19:52:39.402 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)' with route pattern 'api/Order/customer-order/{orderId}' is valid for the request path '/api/Order/customer-order/1'
2025-05-11 19:52:39.404 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)'
2025-05-11 19:52:39.406 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-11 19:52:39.408 +05:30 [DBG] Successfully validated the token.
2025-05-11 19:52:39.409 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-11 19:52:39.411 +05:30 [DBG] Authorization was successful.
2025-05-11 19:52:39.412 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)'
2025-05-11 19:52:39.422 +05:30 [INF] Route matched with {action = "GetCustomerOrderById", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerOrderById(Int64) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-11 19:52:39.424 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-11 19:52:39.426 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-11 19:52:39.427 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-11 19:52:39.429 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-11 19:52:39.430 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-11 19:52:39.432 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-11 19:52:39.439 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-11 19:52:39.441 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' ...
2025-05-11 19:52:39.442 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' using the name 'orderId' in request data ...
2025-05-11 19:52:39.444 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-11 19:52:39.446 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-11 19:52:39.447 +05:30 [DBG] Attempting to validate the bound parameter 'orderId' of type 'System.Int64' ...
2025-05-11 19:52:39.450 +05:30 [DBG] Done attempting to validate the bound parameter 'orderId' of type 'System.Int64'.
2025-05-11 19:52:39.453 +05:30 [INF] Fetching order details for OrderId 1, UserId 2
2025-05-11 19:52:39.522 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-11 19:52:39.529 +05:30 [DBG] Compiling query expression: 
'DbSet<Orders>()
    .Include(o => o.OrderItems)
    .ThenInclude(oi => oi.Product)
    .Include(o => o.OrderStatusNavigation)
    .Include(o => o.PaymentTypeNavigation)
    .Include(o => o.PaymentMethodNavigation)
    .Include(o => o.PaymentStatusNavigation)
    .FirstOrDefault(o => o.OrderId == __orderId_0 && o.UserId == __userId_1)'
2025-05-11 19:52:39.541 +05:30 [DBG] Including navigation: 'Orders.OrderItems'.
2025-05-11 19:52:39.545 +05:30 [DBG] Including navigation: 'Orders.OrderStatusNavigation'.
2025-05-11 19:52:39.548 +05:30 [DBG] Including navigation: 'Orders.PaymentTypeNavigation'.
2025-05-11 19:52:39.552 +05:30 [DBG] Including navigation: 'Orders.PaymentMethodNavigation'.
2025-05-11 19:52:39.555 +05:30 [DBG] Including navigation: 'Orders.PaymentStatusNavigation'.
2025-05-11 19:52:39.558 +05:30 [DBG] Including navigation: 'OrderItems.Product'.
2025-05-11 19:52:39.671 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Orders>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Orders>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Orders.OrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Orders.NumberOfItems (int) Required, 1], [Property: Orders.OrderDate (DateTime) Required ValueGenerated.OnAdd, 2], [Property: Orders.OrderStatus (int) Required FK Index, 3], [Property: Orders.PaymentDate (DateTime) Required, 4], [Property: Orders.PaymentMethod (int) Required FK Index, 5], [Property: Orders.PaymentStatus (int) Required FK Index, 6], [Property: Orders.PaymentType (int) Required FK Index, 7], [Property: Orders.TotalCost (decimal) Required, 8], [Property: Orders.TotalQuantity (int) Required, 9], [Property: Orders.UpdatedBy (long) Required FK Index, 10], [Property: Orders.UpdatedDate (DateTime) Required ValueGenerated.OnAdd, 11], [Property: Orders.UserId (long) Required FK Index, 12] }
                1 -> 0
                2 -> 13
                3 -> 14
                4 -> 15
                5 -> 16
                6 -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 18], [Property: OrderItems.OrderId (long) Required FK Index, 19], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 20], [Property: OrderItems.ProductId (long) Required FK Index, 21], [Property: OrderItems.ProductPrice (decimal) Required, 22], [Property: OrderItems.Quantity (int) Required, 23], [Property: OrderItems.TotalPrice (decimal) Required, 24] }
                7 -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Products.AvailableQuantity (int) Required, 26], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 27], [Property: Products.CreatedAt (DateTime) Required, 28], [Property: Products.CreatedBy (long) Required FK Index, 29], [Property: Products.Description (string) MaxLength(225), 30], [Property: Products.IsDeleted (bool) Required, 31], [Property: Products.LastRestockAt (DateTime) Required, 32], [Property: Products.MinimumRequiredQuantity (int) Required, 33], [Property: Products.Name (string) Required MaxLength(100), 34], [Property: Products.Price (decimal) Required, 35], [Property: Products.ProductStatus (int) Required, 36], [Property: Products.UpdatedAt (DateTime) Required, 37], [Property: Products.UpdatedBy (long) Required FK Index, 38] }
                8 -> 17
                9 -> 25
                10 -> Dictionary<IProperty, int> { [Property: OrderStatus.StatusId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: OrderStatus.Name (string) Required MaxLength(100), 39] }
                11 -> Dictionary<IProperty, int> { [Property: PaymentType.PaymentTypeId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 14], [Property: PaymentType.Name (string) Required MaxLength(100), 40] }
                12 -> Dictionary<IProperty, int> { [Property: PaymentMethod.PaymentMethodId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: PaymentMethod.Name (string) Required MaxLength(100), 41] }
                13 -> Dictionary<IProperty, int> { [Property: PaymentStatus.PaymentStatusId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 16], [Property: PaymentStatus.Name (string) Required MaxLength(100), 42] }
            SELECT s.OrderId, s.NumberOfItems, s.OrderDate, s.OrderStatus, s.PaymentDate, s.PaymentMethod, s.PaymentStatus, s.PaymentType, s.TotalCost, s.TotalQuantity, s.UpdatedBy, s.UpdatedDate, s.UserId, s.StatusId, s.PaymentTypeId, s.PaymentMethodId, s.PaymentStatusId, s0.OrderItemId, s0.OrderDate, s0.OrderId, s0.OrderItemStatus, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.TotalPrice, s0.ProductId0, s0.AvailableQuantity, s0.CategoryId, s0.CreatedAt, s0.CreatedBy, s0.Description, s0.IsDeleted, s0.LastRestockAt, s0.MinimumRequiredQuantity, s0.Name, s0.Price, s0.ProductStatus, s0.UpdatedAt, s0.UpdatedBy, s.Name, s.Name0, s.Name1, s.Name2
            FROM 
            (
                SELECT TOP(1) o.OrderId, o.NumberOfItems, o.OrderDate, o.OrderStatus, o.PaymentDate, o.PaymentMethod, o.PaymentStatus, o.PaymentType, o.TotalCost, o.TotalQuantity, o.UpdatedBy, o.UpdatedDate, o.UserId, o0.StatusId, o0.Name, p.PaymentTypeId, p.Name AS Name0, p0.PaymentMethodId, p0.Name AS Name1, p1.PaymentStatusId, p1.Name AS Name2
                FROM Orders AS o
                INNER JOIN OrderStatus AS o0 ON o.OrderStatus == o0.StatusId
                INNER JOIN PaymentType AS p ON o.PaymentType == p.PaymentTypeId
                INNER JOIN PaymentMethod AS p0 ON o.PaymentMethod == p0.PaymentMethodId
                INNER JOIN PaymentStatus AS p1 ON o.PaymentStatus == p1.PaymentStatusId
                WHERE (o.OrderId == @__orderId_0) && (o.UserId == @__userId_1)
            ) AS s
            LEFT JOIN 
            (
                SELECT o1.OrderItemId, o1.OrderDate, o1.OrderId, o1.OrderItemStatus, o1.ProductId, o1.ProductPrice, o1.Quantity, o1.TotalPrice, p2.ProductId AS ProductId0, p2.AvailableQuantity, p2.CategoryId, p2.CreatedAt, p2.CreatedBy, p2.Description, p2.IsDeleted, p2.LastRestockAt, p2.MinimumRequiredQuantity, p2.Name, p2.Price, p2.ProductStatus, p2.UpdatedAt, p2.UpdatedBy
                FROM OrderItems AS o1
                INNER JOIN Products AS p2 ON o1.ProductId == p2.ProductId
            ) AS s0 ON s.OrderId == s0.OrderId
            ORDER BY s.OrderId ASC, s.StatusId ASC, s.PaymentTypeId ASC, s.PaymentMethodId ASC, s.PaymentStatusId ASC, s0.OrderItemId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Orders.OrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Orders.NumberOfItems (int) Required, 1], [Property: Orders.OrderDate (DateTime) Required ValueGenerated.OnAdd, 2], [Property: Orders.OrderStatus (int) Required FK Index, 3], [Property: Orders.PaymentDate (DateTime) Required, 4], [Property: Orders.PaymentMethod (int) Required FK Index, 5], [Property: Orders.PaymentStatus (int) Required FK Index, 6], [Property: Orders.PaymentType (int) Required FK Index, 7], [Property: Orders.TotalCost (decimal) Required, 8], [Property: Orders.TotalQuantity (int) Required, 9], [Property: Orders.UpdatedBy (long) Required FK Index, 10], [Property: Orders.UpdatedDate (DateTime) Required ValueGenerated.OnAdd, 11], [Property: Orders.UserId (long) Required FK Index, 12] }
                1 -> 0
                2 -> 13
                3 -> 14
                4 -> 15
                5 -> 16
                6 -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 18], [Property: OrderItems.OrderId (long) Required FK Index, 19], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 20], [Property: OrderItems.ProductId (long) Required FK Index, 21], [Property: OrderItems.ProductPrice (decimal) Required, 22], [Property: OrderItems.Quantity (int) Required, 23], [Property: OrderItems.TotalPrice (decimal) Required, 24] }
                7 -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Products.AvailableQuantity (int) Required, 26], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 27], [Property: Products.CreatedAt (DateTime) Required, 28], [Property: Products.CreatedBy (long) Required FK Index, 29], [Property: Products.Description (string) MaxLength(225), 30], [Property: Products.IsDeleted (bool) Required, 31], [Property: Products.LastRestockAt (DateTime) Required, 32], [Property: Products.MinimumRequiredQuantity (int) Required, 33], [Property: Products.Name (string) Required MaxLength(100), 34], [Property: Products.Price (decimal) Required, 35], [Property: Products.ProductStatus (int) Required, 36], [Property: Products.UpdatedAt (DateTime) Required, 37], [Property: Products.UpdatedBy (long) Required FK Index, 38] }
                8 -> 17
                9 -> 25
                10 -> Dictionary<IProperty, int> { [Property: OrderStatus.StatusId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: OrderStatus.Name (string) Required MaxLength(100), 39] }
                11 -> Dictionary<IProperty, int> { [Property: PaymentType.PaymentTypeId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 14], [Property: PaymentType.Name (string) Required MaxLength(100), 40] }
                12 -> Dictionary<IProperty, int> { [Property: PaymentMethod.PaymentMethodId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: PaymentMethod.Name (string) Required MaxLength(100), 41] }
                13 -> Dictionary<IProperty, int> { [Property: PaymentStatus.PaymentStatusId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 16], [Property: PaymentStatus.Name (string) Required MaxLength(100), 42] }
            SELECT s.OrderId, s.NumberOfItems, s.OrderDate, s.OrderStatus, s.PaymentDate, s.PaymentMethod, s.PaymentStatus, s.PaymentType, s.TotalCost, s.TotalQuantity, s.UpdatedBy, s.UpdatedDate, s.UserId, s.StatusId, s.PaymentTypeId, s.PaymentMethodId, s.PaymentStatusId, s0.OrderItemId, s0.OrderDate, s0.OrderId, s0.OrderItemStatus, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.TotalPrice, s0.ProductId0, s0.AvailableQuantity, s0.CategoryId, s0.CreatedAt, s0.CreatedBy, s0.Description, s0.IsDeleted, s0.LastRestockAt, s0.MinimumRequiredQuantity, s0.Name, s0.Price, s0.ProductStatus, s0.UpdatedAt, s0.UpdatedBy, s.Name, s.Name0, s.Name1, s.Name2
            FROM 
            (
                SELECT TOP(1) o.OrderId, o.NumberOfItems, o.OrderDate, o.OrderStatus, o.PaymentDate, o.PaymentMethod, o.PaymentStatus, o.PaymentType, o.TotalCost, o.TotalQuantity, o.UpdatedBy, o.UpdatedDate, o.UserId, o0.StatusId, o0.Name, p.PaymentTypeId, p.Name AS Name0, p0.PaymentMethodId, p0.Name AS Name1, p1.PaymentStatusId, p1.Name AS Name2
                FROM Orders AS o
                INNER JOIN OrderStatus AS o0 ON o.OrderStatus == o0.StatusId
                INNER JOIN PaymentType AS p ON o.PaymentType == p.PaymentTypeId
                INNER JOIN PaymentMethod AS p0 ON o.PaymentMethod == p0.PaymentMethodId
                INNER JOIN PaymentStatus AS p1 ON o.PaymentStatus == p1.PaymentStatusId
                WHERE (o.OrderId == @__orderId_0) && (o.UserId == @__userId_1)
            ) AS s
            LEFT JOIN 
            (
                SELECT o1.OrderItemId, o1.OrderDate, o1.OrderId, o1.OrderItemStatus, o1.ProductId, o1.ProductPrice, o1.Quantity, o1.TotalPrice, p2.ProductId AS ProductId0, p2.AvailableQuantity, p2.CategoryId, p2.CreatedAt, p2.CreatedBy, p2.Description, p2.IsDeleted, p2.LastRestockAt, p2.MinimumRequiredQuantity, p2.Name, p2.Price, p2.ProductStatus, p2.UpdatedAt, p2.UpdatedBy
                FROM OrderItems AS o1
                INNER JOIN Products AS p2 ON o1.ProductId == p2.ProductId
            ) AS s0 ON s.OrderId == s0.OrderId
            ORDER BY s.OrderId ASC, s.StatusId ASC, s.PaymentTypeId ASC, s.PaymentMethodId ASC, s.PaymentStatusId ASC, s0.OrderItemId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Orders entity;
                OrderStatus entity;
                PaymentType entity;
                PaymentMethod entity;
                PaymentStatus entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Orders instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Orders);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Orders.OrderId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Orders)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")]: 
                                {
                                    return 
                                    {
                                        Orders instance;
                                        instance = new Orders();
                                        instance.<OrderId>k__BackingField = dataReader.GetInt64(0);
                                        instance.<NumberOfItems>k__BackingField = dataReader.GetInt32(1);
                                        instance.<OrderDate>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<OrderStatus>k__BackingField = dataReader.GetInt32(3);
                                        instance.<PaymentDate>k__BackingField = dataReader.GetDateTime(4);
                                        instance.<PaymentMethod>k__BackingField = dataReader.GetInt32(5);
                                        instance.<PaymentStatus>k__BackingField = dataReader.GetInt32(6);
                                        instance.<PaymentType>k__BackingField = dataReader.GetInt32(7);
                                        instance.<TotalCost>k__BackingField = dataReader.GetDecimal(8);
                                        instance.<TotalQuantity>k__BackingField = dataReader.GetInt32(9);
                                        instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(10);
                                        instance.<UpdatedDate>k__BackingField = dataReader.GetDateTime(11);
                                        instance.<UserId>k__BackingField = dataReader.GetInt64(12);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Orders)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                entity = 
                {
                    MaterializationContext materializationContext4;
                    IEntityType entityType4;
                    OrderStatus instance4;
                    InternalEntityEntry entry4;
                    bool hasNullKey4;
                    materializationContext4 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance4 = default(OrderStatus);
                    entry4 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: OrderStatus.StatusId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(13) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey4);
                    !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
                    {
                        entityType4 = entry4.EntityType;
                        return instance4 = (OrderStatus)entry4.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot4;
                        shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType4 = [LIFTABLE Constant: EntityType: OrderStatus | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus")];
                        instance4 = switch (entityType4)
                        {
                            case [LIFTABLE Constant: EntityType: OrderStatus | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus")]: 
                                {
                                    return 
                                    {
                                        OrderStatus instance;
                                        instance = new OrderStatus();
                                        instance.<StatusId>k__BackingField = dataReader.GetInt32(13);
                                        instance.<Name>k__BackingField = dataReader.GetString(39);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext4.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: OrderStatus | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(OrderStatus)
                        }
                        ;
                        entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType4, 
                            entity: instance4, 
                            snapshot: shadowSnapshot4);
                        return instance4;
                    } : default(void);
                    return instance4;
                };
                entity = 
                {
                    MaterializationContext materializationContext5;
                    IEntityType entityType5;
                    PaymentType instance5;
                    InternalEntityEntry entry5;
                    bool hasNullKey5;
                    materializationContext5 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance5 = default(PaymentType);
                    entry5 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: PaymentType.PaymentTypeId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentType").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(14) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey5);
                    !(hasNullKey5) ? entry5 != default(InternalEntityEntry) ? 
                    {
                        entityType5 = entry5.EntityType;
                        return instance5 = (PaymentType)entry5.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot5;
                        shadowSnapshot5 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType5 = [LIFTABLE Constant: EntityType: PaymentType | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentType")];
                        instance5 = switch (entityType5)
                        {
                            case [LIFTABLE Constant: EntityType: PaymentType | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentType")]: 
                                {
                                    return 
                                    {
                                        PaymentType instance;
                                        instance = new PaymentType();
                                        instance.<PaymentTypeId>k__BackingField = dataReader.GetInt32(14);
                                        instance.<Name>k__BackingField = dataReader.GetString(40);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext5.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: PaymentType | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentType")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(PaymentType)
                        }
                        ;
                        entry5 = entityType5 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType5, 
                            entity: instance5, 
                            snapshot: shadowSnapshot5);
                        return instance5;
                    } : default(void);
                    return instance5;
                };
                entity = 
                {
                    MaterializationContext materializationContext6;
                    IEntityType entityType6;
                    PaymentMethod instance6;
                    InternalEntityEntry entry6;
                    bool hasNullKey6;
                    materializationContext6 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance6 = default(PaymentMethod);
                    entry6 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: PaymentMethod.PaymentMethodId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentMethod").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(15) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey6);
                    !(hasNullKey6) ? entry6 != default(InternalEntityEntry) ? 
                    {
                        entityType6 = entry6.EntityType;
                        return instance6 = (PaymentMethod)entry6.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot6;
                        shadowSnapshot6 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType6 = [LIFTABLE Constant: EntityType: PaymentMethod | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentMethod")];
                        instance6 = switch (entityType6)
                        {
                            case [LIFTABLE Constant: EntityType: PaymentMethod | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentMethod")]: 
                                {
                                    return 
                                    {
                                        PaymentMethod instance;
                                        instance = new PaymentMethod();
                                        instance.<PaymentMethodId>k__BackingField = dataReader.GetInt32(15);
                                        instance.<Name>k__BackingField = dataReader.GetString(41);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext6.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: PaymentMethod | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentMethod")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(PaymentMethod)
                        }
                        ;
                        entry6 = entityType6 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType6, 
                            entity: instance6, 
                            snapshot: shadowSnapshot6);
                        return instance6;
                    } : default(void);
                    return instance6;
                };
                entity = 
                {
                    MaterializationContext materializationContext7;
                    IEntityType entityType7;
                    PaymentStatus instance7;
                    InternalEntityEntry entry7;
                    bool hasNullKey7;
                    materializationContext7 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance7 = default(PaymentStatus);
                    entry7 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: PaymentStatus.PaymentStatusId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentStatus").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(16) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey7);
                    !(hasNullKey7) ? entry7 != default(InternalEntityEntry) ? 
                    {
                        entityType7 = entry7.EntityType;
                        return instance7 = (PaymentStatus)entry7.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot7;
                        shadowSnapshot7 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType7 = [LIFTABLE Constant: EntityType: PaymentStatus | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentStatus")];
                        instance7 = switch (entityType7)
                        {
                            case [LIFTABLE Constant: EntityType: PaymentStatus | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentStatus")]: 
                                {
                                    return 
                                    {
                                        PaymentStatus instance;
                                        instance = new PaymentStatus();
                                        instance.<PaymentStatusId>k__BackingField = dataReader.GetInt32(16);
                                        instance.<Name>k__BackingField = dataReader.GetString(42);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext7.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: PaymentStatus | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentStatus")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(PaymentStatus)
                        }
                        ;
                        entry7 = entityType7 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType7, 
                            entity: instance7, 
                            snapshot: shadowSnapshot7);
                        return instance7;
                    } : default(void);
                    return instance7;
                };
                resultContext.Values = new object[]
                { 
                    entity, 
                    entity, 
                    entity, 
                    entity, 
                    entity 
                };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Orders, Orders>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Orders)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(long?)dataReader.GetInt64(0), 
                        (object)(int?)dataReader.GetInt32(13), 
                        (object)(int?)dataReader.GetInt32(14), 
                        (object)(int?)dataReader.GetInt32(15), 
                        (object)(int?)dataReader.GetInt32(16) 
                    }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(long?)dataReader.GetInt64(0), 
                        (object)(int?)dataReader.GetInt32(13), 
                        (object)(int?)dataReader.GetInt32(14), 
                        (object)(int?)dataReader.GetInt32(15), 
                        (object)(int?)dataReader.GetInt32(16) 
                    }], 
                    navigation: [LIFTABLE Constant: Navigation: Orders.OrderItems (ICollection<OrderItems>) Collection ToDependent OrderItems Inverse: Order | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("OrderItems")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Orders, ICollection<OrderItems>, OrderItems> | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("OrderItems").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
                ShaperProcessingExpressionVisitor.IncludeReference<Orders, Orders, OrderStatus>(
                    queryContext: queryContext, 
                    entity: (Orders)(resultContext.Values[0]), 
                    relatedEntity: (OrderStatus)(resultContext.Values[1]), 
                    navigation: [LIFTABLE Constant: Navigation: Orders.OrderStatusNavigation (OrderStatus) ToPrincipal OrderStatus | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("OrderStatusNavigation")], 
                    inverseNavigation: default(INavigation), 
                    fixup: (namelessParameter{18}, namelessParameter{19}) => 
                    {
                        return namelessParameter{18}.<OrderStatusNavigation>k__BackingField = namelessParameter{19};
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.IncludeReference<Orders, Orders, PaymentType>(
                    queryContext: queryContext, 
                    entity: (Orders)(resultContext.Values[0]), 
                    relatedEntity: (PaymentType)(resultContext.Values[2]), 
                    navigation: [LIFTABLE Constant: Navigation: Orders.PaymentTypeNavigation (PaymentType) ToPrincipal PaymentType | Resolver: namelessParameter{20} => namelessParameter{20}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("PaymentTypeNavigation")], 
                    inverseNavigation: default(INavigation), 
                    fixup: (namelessParameter{21}, namelessParameter{22}) => 
                    {
                        return namelessParameter{21}.<PaymentTypeNavigation>k__BackingField = namelessParameter{22};
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.IncludeReference<Orders, Orders, PaymentMethod>(
                    queryContext: queryContext, 
                    entity: (Orders)(resultContext.Values[0]), 
                    relatedEntity: (PaymentMethod)(resultContext.Values[3]), 
                    navigation: [LIFTABLE Constant: Navigation: Orders.PaymentMethodNavigation (PaymentMethod) ToPrincipal PaymentMethod | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("PaymentMethodNavigation")], 
                    inverseNavigation: default(INavigation), 
                    fixup: (namelessParameter{24}, namelessParameter{25}) => 
                    {
                        return namelessParameter{24}.<PaymentMethodNavigation>k__BackingField = namelessParameter{25};
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.IncludeReference<Orders, Orders, PaymentStatus>(
                    queryContext: queryContext, 
                    entity: (Orders)(resultContext.Values[0]), 
                    relatedEntity: (PaymentStatus)(resultContext.Values[4]), 
                    navigation: [LIFTABLE Constant: Navigation: Orders.PaymentStatusNavigation (PaymentStatus) ToPrincipal PaymentStatus | Resolver: namelessParameter{26} => namelessParameter{26}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("PaymentStatusNavigation")], 
                    inverseNavigation: default(INavigation), 
                    fixup: (namelessParameter{27}, namelessParameter{28}) => 
                    {
                        return namelessParameter{27}.<PaymentStatusNavigation>k__BackingField = namelessParameter{28};
                    }, 
                    trackingQuery: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Orders, OrderItems>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(long?)dataReader.GetInt64(0), 
                    (object)(int?)dataReader.GetInt32(13), 
                    (object)(int?)dataReader.GetInt32(14), 
                    (object)(int?)dataReader.GetInt32(15), 
                    (object)(int?)dataReader.GetInt32(16) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(long?)dataReader.GetInt64(0), 
                    (object)(int?)dataReader.GetInt32(13), 
                    (object)(int?)dataReader.GetInt32(14), 
                    (object)(int?)dataReader.GetInt32(15), 
                    (object)(int?)dataReader.GetInt32(16) 
                }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)dataReader.IsDBNull(17) ? default(long?) : (long?)dataReader.GetInt64(17), 
                    (object)dataReader.IsDBNull(25) ? default(long?) : (long?)dataReader.GetInt64(25) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right, 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    OrderItems entity;
                    Products entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        OrderItems instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(OrderItems);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: OrderItems.OrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetInt64(17) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (OrderItems)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{29} => namelessParameter{29}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{30} => namelessParameter{30}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]: 
                                    {
                                        return 
                                        {
                                            OrderItems instance;
                                            instance = new OrderItems();
                                            instance.<OrderItemId>k__BackingField = dataReader.IsDBNull(17) ? default(long) : dataReader.GetInt64(17);
                                            instance.<OrderDate>k__BackingField = dataReader.IsDBNull(18) ? default(DateTime) : dataReader.GetDateTime(18);
                                            instance.<OrderId>k__BackingField = dataReader.IsDBNull(19) ? default(long) : dataReader.GetInt64(19);
                                            instance.<OrderItemStatus>k__BackingField = dataReader.IsDBNull(20) ? default(int) : dataReader.GetInt32(20);
                                            instance.<ProductId>k__BackingField = dataReader.IsDBNull(21) ? default(long) : dataReader.GetInt64(21);
                                            instance.<ProductPrice>k__BackingField = dataReader.IsDBNull(22) ? default(decimal) : dataReader.GetDecimal(22);
                                            instance.<Quantity>k__BackingField = dataReader.IsDBNull(23) ? default(int) : dataReader.GetInt32(23);
                                            instance.<TotalPrice>k__BackingField = dataReader.IsDBNull(24) ? default(decimal) : dataReader.GetDecimal(24);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{31} => namelessParameter{31}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(OrderItems)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        Products instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(Products);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(25) ? default(object) : (object)dataReader.GetInt64(25) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (Products)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{32} => namelessParameter{32}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{33} => namelessParameter{33}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                                    {
                                        return 
                                        {
                                            Products instance;
                                            instance = new Products();
                                            instance.<ProductId>k__BackingField = dataReader.IsDBNull(25) ? default(long) : dataReader.GetInt64(25);
                                            instance.<AvailableQuantity>k__BackingField = dataReader.IsDBNull(26) ? default(int) : dataReader.GetInt32(26);
                                            instance.<CategoryId>k__BackingField = dataReader.IsDBNull(27) ? default(int) : dataReader.GetInt32(27);
                                            instance.<CreatedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime) : dataReader.GetDateTime(28);
                                            instance.<CreatedBy>k__BackingField = dataReader.IsDBNull(29) ? default(long) : dataReader.GetInt64(29);
                                            instance.<Description>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                            instance.<IsDeleted>k__BackingField = dataReader.IsDBNull(31) ? default(bool) : dataReader.GetBoolean(31);
                                            instance.<LastRestockAt>k__BackingField = dataReader.IsDBNull(32) ? default(DateTime) : dataReader.GetDateTime(32);
                                            instance.<MinimumRequiredQuantity>k__BackingField = dataReader.IsDBNull(33) ? default(int) : dataReader.GetInt32(33);
                                            instance.<Name>k__BackingField = dataReader.IsDBNull(34) ? default(string) : dataReader.GetString(34);
                                            instance.<Price>k__BackingField = dataReader.IsDBNull(35) ? default(decimal) : dataReader.GetDecimal(35);
                                            instance.<ProductStatus>k__BackingField = dataReader.IsDBNull(36) ? default(int) : dataReader.GetInt32(36);
                                            instance.<UpdatedAt>k__BackingField = dataReader.IsDBNull(37) ? default(DateTime) : dataReader.GetDateTime(37);
                                            instance.<UpdatedBy>k__BackingField = dataReader.IsDBNull(38) ? default(long) : dataReader.GetInt64(38);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{34} => namelessParameter{34}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Products)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    ShaperProcessingExpressionVisitor.IncludeReference<OrderItems, OrderItems, Products>(
                        queryContext: queryContext, 
                        entity: entity, 
                        relatedEntity: entity, 
                        navigation: [LIFTABLE Constant: Navigation: OrderItems.Product (Products) ToPrincipal Products | Resolver: namelessParameter{35} => namelessParameter{35}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindNavigation("Product")], 
                        inverseNavigation: default(INavigation), 
                        fixup: (namelessParameter{36}, namelessParameter{37}) => 
                        {
                            return namelessParameter{36}.<Product>k__BackingField = namelessParameter{37};
                        }, 
                        trackingQuery: True);
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: OrderItems.Order (Orders) ToPrincipal Orders Inverse: OrderItems | Resolver: namelessParameter{38} => namelessParameter{38}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindNavigation("Order")], 
                fixup: (namelessParameter{39}, namelessParameter{40}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Orders, ICollection<OrderItems>, OrderItems> | Resolver: namelessParameter{41} => namelessParameter{41}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("OrderItems").GetCollectionAccessor()].Add(
                        entity: namelessParameter{39}, 
                        value: namelessParameter{40}, 
                        forMaterialization: True);
                    return namelessParameter{40}.<Order>k__BackingField = namelessParameter{39};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Orders)(resultContext.Values[0]) : default(Orders);
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-11 19:52:39.774 +05:30 [DBG] Creating DbConnection.
2025-05-11 19:52:39.775 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-11 19:52:39.776 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:52:39.789 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:52:39.790 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 19:52:39.791 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 19:52:39.792 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-11 19:52:39.793 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64), @__userId_1='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[OrderId], [s].[NumberOfItems], [s].[OrderDate], [s].[OrderStatus], [s].[PaymentDate], [s].[PaymentMethod], [s].[PaymentStatus], [s].[PaymentType], [s].[TotalCost], [s].[TotalQuantity], [s].[UpdatedBy], [s].[UpdatedDate], [s].[UserId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId], [s0].[OrderDate], [s0].[OrderId], [s0].[OrderItemStatus], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[TotalPrice], [s0].[ProductId0], [s0].[AvailableQuantity], [s0].[CategoryId], [s0].[CreatedAt], [s0].[CreatedBy], [s0].[Description], [s0].[IsDeleted], [s0].[LastRestockAt], [s0].[MinimumRequiredQuantity], [s0].[Name], [s0].[Price], [s0].[ProductStatus], [s0].[UpdatedAt], [s0].[UpdatedBy], [s].[Name], [s].[Name0], [s].[Name1], [s].[Name2]
FROM (
    SELECT TOP(1) [o].[OrderId], [o].[NumberOfItems], [o].[OrderDate], [o].[OrderStatus], [o].[PaymentDate], [o].[PaymentMethod], [o].[PaymentStatus], [o].[PaymentType], [o].[TotalCost], [o].[TotalQuantity], [o].[UpdatedBy], [o].[UpdatedDate], [o].[UserId], [o0].[StatusId], [o0].[Name], [p].[PaymentTypeId], [p].[Name] AS [Name0], [p0].[PaymentMethodId], [p0].[Name] AS [Name1], [p1].[PaymentStatusId], [p1].[Name] AS [Name2]
    FROM [Orders] AS [o]
    INNER JOIN [OrderStatus] AS [o0] ON [o].[OrderStatus] = [o0].[StatusId]
    INNER JOIN [PaymentType] AS [p] ON [o].[PaymentType] = [p].[PaymentTypeId]
    INNER JOIN [PaymentMethod] AS [p0] ON [o].[PaymentMethod] = [p0].[PaymentMethodId]
    INNER JOIN [PaymentStatus] AS [p1] ON [o].[PaymentStatus] = [p1].[PaymentStatusId]
    WHERE [o].[OrderId] = @__orderId_0 AND [o].[UserId] = @__userId_1
) AS [s]
LEFT JOIN (
    SELECT [o1].[OrderItemId], [o1].[OrderDate], [o1].[OrderId], [o1].[OrderItemStatus], [o1].[ProductId], [o1].[ProductPrice], [o1].[Quantity], [o1].[TotalPrice], [p2].[ProductId] AS [ProductId0], [p2].[AvailableQuantity], [p2].[CategoryId], [p2].[CreatedAt], [p2].[CreatedBy], [p2].[Description], [p2].[IsDeleted], [p2].[LastRestockAt], [p2].[MinimumRequiredQuantity], [p2].[Name], [p2].[Price], [p2].[ProductStatus], [p2].[UpdatedAt], [p2].[UpdatedBy]
    FROM [OrderItems] AS [o1]
    INNER JOIN [Products] AS [p2] ON [o1].[ProductId] = [p2].[ProductId]
) AS [s0] ON [s].[OrderId] = [s0].[OrderId]
ORDER BY [s].[OrderId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId]
2025-05-11 19:52:39.818 +05:30 [INF] Executed DbCommand (25ms) [Parameters=[@__orderId_0='?' (DbType = Int64), @__userId_1='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[OrderId], [s].[NumberOfItems], [s].[OrderDate], [s].[OrderStatus], [s].[PaymentDate], [s].[PaymentMethod], [s].[PaymentStatus], [s].[PaymentType], [s].[TotalCost], [s].[TotalQuantity], [s].[UpdatedBy], [s].[UpdatedDate], [s].[UserId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId], [s0].[OrderDate], [s0].[OrderId], [s0].[OrderItemStatus], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[TotalPrice], [s0].[ProductId0], [s0].[AvailableQuantity], [s0].[CategoryId], [s0].[CreatedAt], [s0].[CreatedBy], [s0].[Description], [s0].[IsDeleted], [s0].[LastRestockAt], [s0].[MinimumRequiredQuantity], [s0].[Name], [s0].[Price], [s0].[ProductStatus], [s0].[UpdatedAt], [s0].[UpdatedBy], [s].[Name], [s].[Name0], [s].[Name1], [s].[Name2]
FROM (
    SELECT TOP(1) [o].[OrderId], [o].[NumberOfItems], [o].[OrderDate], [o].[OrderStatus], [o].[PaymentDate], [o].[PaymentMethod], [o].[PaymentStatus], [o].[PaymentType], [o].[TotalCost], [o].[TotalQuantity], [o].[UpdatedBy], [o].[UpdatedDate], [o].[UserId], [o0].[StatusId], [o0].[Name], [p].[PaymentTypeId], [p].[Name] AS [Name0], [p0].[PaymentMethodId], [p0].[Name] AS [Name1], [p1].[PaymentStatusId], [p1].[Name] AS [Name2]
    FROM [Orders] AS [o]
    INNER JOIN [OrderStatus] AS [o0] ON [o].[OrderStatus] = [o0].[StatusId]
    INNER JOIN [PaymentType] AS [p] ON [o].[PaymentType] = [p].[PaymentTypeId]
    INNER JOIN [PaymentMethod] AS [p0] ON [o].[PaymentMethod] = [p0].[PaymentMethodId]
    INNER JOIN [PaymentStatus] AS [p1] ON [o].[PaymentStatus] = [p1].[PaymentStatusId]
    WHERE [o].[OrderId] = @__orderId_0 AND [o].[UserId] = @__userId_1
) AS [s]
LEFT JOIN (
    SELECT [o1].[OrderItemId], [o1].[OrderDate], [o1].[OrderId], [o1].[OrderItemStatus], [o1].[ProductId], [o1].[ProductPrice], [o1].[Quantity], [o1].[TotalPrice], [p2].[ProductId] AS [ProductId0], [p2].[AvailableQuantity], [p2].[CategoryId], [p2].[CreatedAt], [p2].[CreatedBy], [p2].[Description], [p2].[IsDeleted], [p2].[LastRestockAt], [p2].[MinimumRequiredQuantity], [p2].[Name], [p2].[Price], [p2].[ProductStatus], [p2].[UpdatedAt], [p2].[UpdatedBy]
    FROM [OrderItems] AS [o1]
    INNER JOIN [Products] AS [p2] ON [o1].[ProductId] = [p2].[ProductId]
) AS [s0] ON [s].[OrderId] = [s0].[OrderId]
ORDER BY [s].[OrderId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId]
2025-05-11 19:52:39.824 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Orders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:52:39.851 +05:30 [DBG] The navigation 'Orders.OrderStatusNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:52:39.853 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderStatus' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:52:39.859 +05:30 [DBG] The navigation 'Orders.PaymentTypeNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:52:39.860 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'PaymentType' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:52:39.867 +05:30 [DBG] The navigation 'Orders.PaymentMethodNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:52:39.868 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'PaymentMethod' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:52:39.874 +05:30 [DBG] The navigation 'Orders.PaymentStatusNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:52:39.875 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'PaymentStatus' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:52:39.888 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:52:39.890 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:52:39.893 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:52:39.895 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:52:39.897 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:52:39.899 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 19:52:39.900 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:52:39.901 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 78ms reading results.
2025-05-11 19:52:39.902 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:52:39.903 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-11 19:52:39.907 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-11 19:52:39.909 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-11 19:52:39.909 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-11 19:52:39.910 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-11 19:52:39.911 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-11 19:52:39.912 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.CustomerOrderDetailsResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-11 19:52:39.928 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem) in 495.6056ms
2025-05-11 19:52:39.930 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)'
2025-05-11 19:52:39.931 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-11 19:52:39.932 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 19:52:39.933 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-11 19:52:39.934 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Order/customer-order/1 - 200 null application/json; charset=utf-8 550.5009ms
2025-05-11 20:13:16.761 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - application/json 49
2025-05-11 20:13:16.770 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/return-order-items'
2025-05-11 20:13:16.773 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)' with route pattern 'api/Order/return-order-items' is valid for the request path '/api/Order/return-order-items'
2025-05-11 20:13:16.776 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-11 20:13:16.777 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-11 20:13:16.778 +05:30 [DBG] Successfully validated the token.
2025-05-11 20:13:16.779 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-11 20:13:16.780 +05:30 [DBG] Authorization was successful.
2025-05-11 20:13:16.781 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-11 20:13:16.782 +05:30 [INF] Route matched with {action = "ReturnOrderItems", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReturnOrderItems(InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-11 20:13:16.784 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-11 20:13:16.786 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-11 20:13:16.789 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-11 20:13:16.792 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-11 20:13:16.793 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-11 20:13:16.795 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-11 20:13:16.797 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-11 20:13:16.799 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-11 20:13:16.801 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' using the name '' in request data ...
2025-05-11 20:13:16.802 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-11 20:13:16.806 +05:30 [DBG] Connection id "0HNCGIP5D1RTJ", Request id "0HNCGIP5D1RTJ:00000005": started reading request body.
2025-05-11 20:13:16.808 +05:30 [DBG] Connection id "0HNCGIP5D1RTJ", Request id "0HNCGIP5D1RTJ:00000005": done reading request body.
2025-05-11 20:13:16.809 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'
2025-05-11 20:13:16.810 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 20:13:16.812 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 20:13:16.813 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-11 20:13:16.816 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 20:13:16.818 +05:30 [INF] Processing return for OrderId 1
2025-05-11 20:13:16.820 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-11 20:13:16.823 +05:30 [DBG] Creating DbConnection.
2025-05-11 20:13:16.824 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-11 20:13:16.825 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.836 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.840 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 20:13:16.841 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 20:13:16.843 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-11 20:13:16.844 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-11 20:13:16.852 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-11 20:13:16.856 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 20:13:16.858 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 20:13:16.859 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.860 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 4ms reading results.
2025-05-11 20:13:16.862 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.863 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-11 20:13:16.864 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.865 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.866 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 20:13:16.867 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 20:13:16.868 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-11 20:13:16.870 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0
2025-05-11 20:13:16.875 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0
2025-05-11 20:13:16.878 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.879 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-11 20:13:16.880 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.881 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-11 20:13:16.883 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.884 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.885 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 20:13:16.887 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-11 20:13:16.888 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-11 20:13:16.890 +05:30 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__p_0
2025-05-11 20:13:16.899 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__p_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__p_0
2025-05-11 20:13:16.903 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 20:13:16.905 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 20:13:16.907 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.908 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 5ms reading results.
2025-05-11 20:13:16.910 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.911 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-11 20:13:16.912 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 20:13:16.914 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-11 20:13:16.916 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-11 20:13:16.917 +05:30 [DBG] The unchanged property 'OrderItems.OrderDate' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-11 20:13:16.918 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 20:13:16.921 +05:30 [DBG] The unchanged property 'OrderItems.OrderItemStatus' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-11 20:13:16.922 +05:30 [DBG] The foreign key property 'OrderItems.OrderItemStatus' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-11 20:13:16.924 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-11 20:13:16.926 +05:30 [DBG] Executing 2 update commands as a batch.
2025-05-11 20:13:16.927 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.928 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.929 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-11 20:13:16.931 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-11 20:13:16.932 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 20:13:16.933 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 20:13:16.934 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-11 20:13:16.935 +05:30 [DBG] Executing DbCommand [Parameters=[@p2='?' (DbType = Int64), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32), @p16='?' (DbType = Int64), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64), @p7='?' (Size = 225), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Int32), @p11='?' (Size = 100), @p12='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p13='?' (DbType = Int32), @p14='?' (DbType = DateTime2), @p15='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [OrderItems] SET [OrderDate] = @p0, [OrderItemStatus] = @p1
OUTPUT 1
WHERE [OrderItemId] = @p2;
UPDATE [Products] SET [AvailableQuantity] = @p3, [CategoryId] = @p4, [CreatedAt] = @p5, [CreatedBy] = @p6, [Description] = @p7, [IsDeleted] = @p8, [LastRestockAt] = @p9, [MinimumRequiredQuantity] = @p10, [Name] = @p11, [Price] = @p12, [ProductStatus] = @p13, [UpdatedAt] = @p14, [UpdatedBy] = @p15
OUTPUT 1
WHERE [ProductId] = @p16;
2025-05-11 20:13:16.946 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@p2='?' (DbType = Int64), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32), @p16='?' (DbType = Int64), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64), @p7='?' (Size = 225), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Int32), @p11='?' (Size = 100), @p12='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p13='?' (DbType = Int32), @p14='?' (DbType = DateTime2), @p15='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [OrderItems] SET [OrderDate] = @p0, [OrderItemStatus] = @p1
OUTPUT 1
WHERE [OrderItemId] = @p2;
UPDATE [Products] SET [AvailableQuantity] = @p3, [CategoryId] = @p4, [CreatedAt] = @p5, [CreatedBy] = @p6, [Description] = @p7, [IsDeleted] = @p8, [LastRestockAt] = @p9, [MinimumRequiredQuantity] = @p10, [Name] = @p11, [Price] = @p12, [ProductStatus] = @p13, [UpdatedAt] = @p14, [UpdatedBy] = @p15
OUTPUT 1
WHERE [ProductId] = @p16;
2025-05-11 20:13:16.950 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.952 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-11 20:13:16.955 +05:30 [DBG] Committing transaction.
2025-05-11 20:13:16.957 +05:30 [DBG] Committed transaction.
2025-05-11 20:13:16.958 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.961 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-11 20:13:16.963 +05:30 [DBG] Disposing transaction.
2025-05-11 20:13:16.964 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 20:13:16.967 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 20:13:16.968 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 2 entities written to the database.
2025-05-11 20:13:16.970 +05:30 [INF] Starting stock movement for ProductId: 1, UserId: 2, Status: "Returned"
2025-05-11 20:13:16.972 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.974 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.975 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 20:13:16.976 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 20:13:16.977 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-11 20:13:16.978 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-11 20:13:16.982 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-11 20:13:16.984 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.985 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 0ms reading results.
2025-05-11 20:13:16.986 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.988 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-11 20:13:16.989 +05:30 [INF] 'Return' movement for ProductId: 1
2025-05-11 20:13:16.990 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 20:13:16.992 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 20:13:16.993 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 20:13:16.994 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-11 20:13:16.994 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-11 20:13:16.995 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-11 20:13:16.996 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.997 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:16.998 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 20:13:16.999 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-11 20:13:17.000 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-11 20:13:17.000 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-11 20:13:17.008 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-11 20:13:17.010 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-11 20:13:17.011 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:17.012 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-11 20:13:17.013 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:17.014 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-11 20:13:17.015 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 20:13:17.016 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-11 20:13:17.017 +05:30 [INF] Stock movement successfully for ProductId: 1
2025-05-11 20:13:17.018 +05:30 [WRN] Item 2 in OrderId 1 has already been returned
2025-05-11 20:13:17.018 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-11 20:13:17.021 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-11 20:13:17.022 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-11 20:13:17.022 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-11 20:13:17.023 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-11 20:13:17.024 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-11 20:13:17.025 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem) in 230.0202ms
2025-05-11 20:13:17.026 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-11 20:13:17.027 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-11 20:13:17.028 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:17.029 +05:30 [DBG] Disposed connection to database '' on server '' (0ms).
2025-05-11 20:13:17.030 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - 400 null application/json; charset=utf-8 296.638ms
2025-05-11 20:13:34.452 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - application/json 47
2025-05-11 20:13:34.458 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/return-order-items'
2025-05-11 20:13:34.460 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)' with route pattern 'api/Order/return-order-items' is valid for the request path '/api/Order/return-order-items'
2025-05-11 20:13:34.466 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-11 20:13:34.478 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-11 20:13:34.480 +05:30 [DBG] Successfully validated the token.
2025-05-11 20:13:34.481 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-11 20:13:34.483 +05:30 [DBG] Authorization was successful.
2025-05-11 20:13:34.485 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-11 20:13:34.486 +05:30 [INF] Route matched with {action = "ReturnOrderItems", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReturnOrderItems(InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-11 20:13:34.493 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-11 20:13:34.495 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-11 20:13:34.496 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-11 20:13:34.499 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-11 20:13:34.500 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-11 20:13:34.502 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-11 20:13:34.505 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-11 20:13:34.509 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-11 20:13:34.511 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' using the name '' in request data ...
2025-05-11 20:13:34.513 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-11 20:13:34.514 +05:30 [DBG] Connection id "0HNCGIP5D1RTJ", Request id "0HNCGIP5D1RTJ:00000007": started reading request body.
2025-05-11 20:13:34.516 +05:30 [DBG] Connection id "0HNCGIP5D1RTJ", Request id "0HNCGIP5D1RTJ:00000007": done reading request body.
2025-05-11 20:13:34.517 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'
2025-05-11 20:13:34.518 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 20:13:34.520 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 20:13:34.524 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-11 20:13:34.526 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-11 20:13:34.528 +05:30 [INF] Processing return for OrderId 1
2025-05-11 20:13:34.529 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-11 20:13:34.532 +05:30 [DBG] Creating DbConnection.
2025-05-11 20:13:34.533 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-11 20:13:34.534 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:34.535 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:34.536 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 20:13:34.538 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-11 20:13:34.540 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-11 20:13:34.542 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-11 20:13:34.546 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-11 20:13:34.550 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 20:13:34.551 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:34.552 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-11 20:13:34.554 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:34.557 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-11 20:13:34.559 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:34.560 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:34.562 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-11 20:13:34.563 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-11 20:13:34.564 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-11 20:13:34.566 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0
2025-05-11 20:13:34.574 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0
2025-05-11 20:13:34.581 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-11 20:13:34.583 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:34.584 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-11 20:13:34.586 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:34.587 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-11 20:13:34.590 +05:30 [WRN] Item 1 in OrderId 1 has already been returned
2025-05-11 20:13:34.592 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-11 20:13:34.595 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-11 20:13:34.595 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-11 20:13:34.596 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-11 20:13:34.597 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-11 20:13:34.598 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-11 20:13:34.599 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem) in 96.9674ms
2025-05-11 20:13:34.601 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-11 20:13:34.603 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-11 20:13:34.604 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-11 20:13:34.607 +05:30 [DBG] Disposed connection to database '' on server '' (2ms).
2025-05-11 20:13:34.608 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - 400 null application/json; charset=utf-8 156.4154ms
2025-05-11 20:16:13.867 +05:30 [DBG] Connection id "0HNCGIP5D1RTJ" received FIN.
2025-05-11 20:16:13.876 +05:30 [DBG] Connection id "0HNCGIP5D1RTJ" is closed. The last processed stream ID was 7.
2025-05-11 20:16:13.879 +05:30 [DBG] The connection queue processing loop for 0HNCGIP5D1RTJ completed.
2025-05-11 20:16:13.884 +05:30 [DBG] Connection id "0HNCGIP5D1RTJ" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-11 20:16:13.896 +05:30 [DBG] Connection id "0HNCGIP5D1RTJ" stopped.
