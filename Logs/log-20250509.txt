2025-05-09 00:04:55.239 +05:30 [INF] Starting up the application...
2025-05-09 00:04:56.381 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-09 00:04:56.534 +05:30 [DBG] Hosting starting
2025-05-09 00:04:56.585 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-09 00:04:56.606 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-09 00:04:56.615 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-09 00:04:56.622 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-09 00:04:56.629 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-09 00:04:56.638 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-09 00:04:56.645 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 00:04:56.652 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-09 00:04:56.657 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 00:04:56.667 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-09 00:04:56.674 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-09 00:04:56.677 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-09 00:04:56.679 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-09 00:04:56.694 +05:30 [DBG] Middleware loaded
2025-05-09 00:04:56.703 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-09 00:04:56.709 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-09 00:04:56.835 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-09 00:04:56.972 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-09 00:04:56.976 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-09 00:04:56.979 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-09 00:04:56.980 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-09 00:04:56.981 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-09 00:04:56.982 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-09 00:04:57.104 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-09 00:04:57.107 +05:30 [INF] Hosting environment: Development
2025-05-09 00:04:57.111 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-09 00:04:57.114 +05:30 [DBG] Hosting started
2025-05-09 00:04:57.272 +05:30 [DBG] Connection id "0HNCEBS48I7QV" accepted.
2025-05-09 00:04:57.277 +05:30 [DBG] Connection id "0HNCEBS48I7QV" started.
2025-05-09 00:04:57.281 +05:30 [DBG] Connection id "0HNCEBS48I7QV" received FIN.
2025-05-09 00:04:57.312 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 00:04:57.372 +05:30 [DBG] Connection id "0HNCEBS48I7QV" stopped.
2025-05-09 00:04:57.381 +05:30 [DBG] Connection id "0HNCEBS48I7QV" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 00:04:57.588 +05:30 [DBG] Connection id "0HNCEBS48I7R0" accepted.
2025-05-09 00:04:57.593 +05:30 [DBG] Connection id "0HNCEBS48I7R0" started.
2025-05-09 00:04:57.665 +05:30 [DBG] Connection 0HNCEBS48I7R0 established using the following protocol: "Tls12"
2025-05-09 00:04:57.746 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-09 00:04:57.871 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-09 00:04:57.899 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-09 00:04:57.905 +05:30 [DBG] Request did not match any endpoints
2025-05-09 00:04:58.079 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-09 00:04:58.081 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-09 00:04:58.107 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-09 00:04:58.113 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-09 00:04:58.124 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 386.5904ms
2025-05-09 00:04:58.144 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-09 00:04:58.144 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-09 00:04:58.161 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-09 00:04:58.164 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 20.5749ms
2025-05-09 00:04:58.219 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 75.0813ms
2025-05-09 00:04:58.360 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-09 00:04:58.366 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-09 00:04:58.368 +05:30 [DBG] Request did not match any endpoints
2025-05-09 00:04:58.444 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 83.9883ms
2025-05-09 00:05:46.640 +05:30 [INF] Starting up the application...
2025-05-09 00:05:47.599 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-09 00:05:47.698 +05:30 [DBG] Hosting starting
2025-05-09 00:05:47.767 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-09 00:05:47.789 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-09 00:05:47.802 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-09 00:05:47.816 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-09 00:05:47.828 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-09 00:05:47.841 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-09 00:05:47.853 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 00:05:47.859 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-09 00:05:47.865 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 00:05:47.880 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-09 00:05:47.884 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-09 00:05:47.885 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-09 00:05:47.888 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-09 00:05:47.893 +05:30 [DBG] Middleware loaded
2025-05-09 00:05:47.895 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-09 00:05:47.896 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-09 00:05:47.999 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-09 00:05:48.150 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-09 00:05:48.156 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-09 00:05:48.161 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-09 00:05:48.167 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-09 00:05:48.174 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-09 00:05:48.180 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-09 00:05:48.272 +05:30 [DBG] Connection id "0HNCEBSJEU37V" accepted.
2025-05-09 00:05:48.272 +05:30 [DBG] Connection id "0HNCEBSJEU37U" accepted.
2025-05-09 00:05:48.276 +05:30 [DBG] Connection id "0HNCEBSJEU37V" started.
2025-05-09 00:05:48.279 +05:30 [DBG] Connection id "0HNCEBSJEU37U" started.
2025-05-09 00:05:48.298 +05:30 [DBG] Connection id "0HNCEBSJEU37U" received FIN.
2025-05-09 00:05:48.298 +05:30 [DBG] Connection id "0HNCEBSJEU37V" received FIN.
2025-05-09 00:05:48.311 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 00:05:48.324 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-09 00:05:48.314 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 00:05:48.354 +05:30 [INF] Hosting environment: Development
2025-05-09 00:05:48.360 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-09 00:05:48.361 +05:30 [DBG] Connection id "0HNCEBSJEU37U" stopped.
2025-05-09 00:05:48.361 +05:30 [DBG] Connection id "0HNCEBSJEU37V" stopped.
2025-05-09 00:05:48.361 +05:30 [DBG] Hosting started
2025-05-09 00:05:48.366 +05:30 [DBG] Connection id "0HNCEBSJEU37V" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 00:05:48.366 +05:30 [DBG] Connection id "0HNCEBSJEU37U" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 00:05:48.510 +05:30 [DBG] Connection id "0HNCEBSJEU380" accepted.
2025-05-09 00:05:48.519 +05:30 [DBG] Connection id "0HNCEBSJEU380" started.
2025-05-09 00:05:48.584 +05:30 [DBG] Connection 0HNCEBSJEU380 established using the following protocol: "Tls12"
2025-05-09 00:05:48.685 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-09 00:05:48.798 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-09 00:05:48.823 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-09 00:05:48.826 +05:30 [DBG] Request did not match any endpoints
2025-05-09 00:05:48.922 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-09 00:05:48.925 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-09 00:05:48.950 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-09 00:05:48.953 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-09 00:05:48.964 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 290.8721ms
2025-05-09 00:05:48.971 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-09 00:05:48.971 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-09 00:05:48.984 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-09 00:05:48.987 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 15.7478ms
2025-05-09 00:05:49.043 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 71.8894ms
2025-05-09 00:05:49.170 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-09 00:05:49.174 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-09 00:05:49.176 +05:30 [DBG] Request did not match any endpoints
2025-05-09 00:05:49.215 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 45.831ms
2025-05-09 00:06:04.647 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Product/get-all-products - null null
2025-05-09 00:06:04.669 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/get-all-products'
2025-05-09 00:06:04.675 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)' with route pattern 'api/Product/get-all-products' is valid for the request path '/api/Product/get-all-products'
2025-05-09 00:06:04.681 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 00:06:04.688 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 00:06:04.778 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 00:06:04.787 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 00:06:04.836 +05:30 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 00:06:04.842 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 00:06:04.848 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 00:06:04.855 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 00:06:04.862 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 00:06:04.865 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 00:06:04.871 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 00:06:05.057 +05:30 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-05-09 00:06:05.090 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 00:06:06.203 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 00:06:06.269 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .Where(p => !(p.IsDeleted))'
2025-05-09 00:06:06.730 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Products>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(255), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
        SELECT p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
        FROM Products AS p
        WHERE Not(p.IsDeleted)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(255), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
        SELECT p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
        FROM Products AS p
        WHERE Not(p.IsDeleted), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Products entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Products instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Products);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Products)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                        {
                            return 
                            {
                                Products instance;
                                instance = new Products();
                                instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                instance.<Name>k__BackingField = dataReader.GetString(9);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Products)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 00:06:06.799 +05:30 [DBG] Creating DbConnection.
2025-05-09 00:06:06.829 +05:30 [DBG] Created DbConnection. (27ms).
2025-05-09 00:06:06.834 +05:30 [DBG] Opening connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:06:07.134 +05:30 [DBG] Opened connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:06:07.143 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 00:06:07.157 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (9ms).
2025-05-09 00:06:07.164 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (21ms).
2025-05-09 00:06:07.181 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 00:06:07.254 +05:30 [INF] Executed DbCommand (75ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 00:06:07.304 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:06:07.356 +05:30 [DBG] Closing data reader to 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:06:07.366 +05:30 [DBG] A data reader for 'InventoryManagement2323' on server 'ATPL-LAP-354' is being disposed after spending 102ms reading results.
2025-05-09 00:06:07.374 +05:30 [DBG] Closing connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:06:07.380 +05:30 [DBG] Closed connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354' (6ms).
2025-05-09 00:06:07.387 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 00:06:07.392 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 00:06:07.393 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 00:06:07.393 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 00:06:07.396 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 00:06:07.398 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.ProductResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 00:06:07.430 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem) in 2557.1219ms
2025-05-09 00:06:07.433 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 00:06:07.437 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 00:06:07.441 +05:30 [DBG] Disposing connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:06:07.444 +05:30 [DBG] Disposed connection to database '' on server '' (2ms).
2025-05-09 00:06:07.446 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Product/get-all-products - 200 null application/json; charset=utf-8 2799.3938ms
2025-05-09 00:06:26.211 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Product/search?keyword=tri - null null
2025-05-09 00:06:26.227 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/search'
2025-05-09 00:06:26.228 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)' with route pattern 'api/Product/search' is valid for the request path '/api/Product/search'
2025-05-09 00:06:26.231 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)'
2025-05-09 00:06:26.233 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 00:06:26.235 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 00:06:26.236 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)'
2025-05-09 00:06:26.247 +05:30 [INF] Route matched with {action = "SearchProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SearchProducts(System.String) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 00:06:26.249 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 00:06:26.251 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 00:06:26.253 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 00:06:26.255 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 00:06:26.256 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 00:06:26.257 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 00:06:26.260 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 00:06:26.282 +05:30 [DBG] Attempting to bind parameter 'keyword' of type 'System.String' ...
2025-05-09 00:06:26.286 +05:30 [DBG] Attempting to bind parameter 'keyword' of type 'System.String' using the name 'keyword' in request data ...
2025-05-09 00:06:26.289 +05:30 [DBG] Done attempting to bind parameter 'keyword' of type 'System.String'.
2025-05-09 00:06:26.291 +05:30 [DBG] Done attempting to bind parameter 'keyword' of type 'System.String'.
2025-05-09 00:06:26.292 +05:30 [DBG] Attempting to validate the bound parameter 'keyword' of type 'System.String' ...
2025-05-09 00:06:26.302 +05:30 [DBG] Done attempting to validate the bound parameter 'keyword' of type 'System.String'.
2025-05-09 00:06:26.370 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 00:06:26.397 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .Where(p => !(p.IsDeleted) && p.Name.ToLower().Contains(__ToLower_0))'
2025-05-09 00:06:26.465 +05:30 [DBG] Generated query execution expression: 
'queryContext => 
{
    queryContext.AddParameter(
        name: "__ToLower_0_contains", 
        value: (object)Invoke(queryContext => SqlServerSqlTranslatingExpressionVisitor.ConstructLikePatternParameter(
            queryContext: queryContext, 
            baseParameterName: "__ToLower_0", 
            methodType: Contains), queryContext));
    return SingleQueryingEnumerable.Create<Products>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(255), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE Not(p.IsDeleted) && (LOWER(p.Name) LIKE @__ToLower_0_contains ESCAPE N'\')) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(255), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE Not(p.IsDeleted) && (LOWER(p.Name) LIKE @__ToLower_0_contains ESCAPE N'\'), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Products entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Products instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Products);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Products)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                            {
                                return 
                                {
                                    Products instance;
                                    instance = new Products();
                                    instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                    instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Name>k__BackingField = dataReader.GetString(9);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                    instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Products)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True);
}'
2025-05-09 00:06:26.518 +05:30 [DBG] Creating DbConnection.
2025-05-09 00:06:26.520 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 00:06:26.521 +05:30 [DBG] Opening connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:06:26.523 +05:30 [DBG] Opened connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:06:26.524 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 00:06:26.525 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 00:06:26.530 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-05-09 00:06:26.534 +05:30 [DBG] Executing DbCommand [Parameters=[@__ToLower_0_contains='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND LOWER([p].[Name]) LIKE @__ToLower_0_contains ESCAPE N'\'
2025-05-09 00:06:26.567 +05:30 [INF] Executed DbCommand (35ms) [Parameters=[@__ToLower_0_contains='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND LOWER([p].[Name]) LIKE @__ToLower_0_contains ESCAPE N'\'
2025-05-09 00:06:26.578 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:06:26.581 +05:30 [DBG] Closing data reader to 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:06:26.583 +05:30 [DBG] A data reader for 'InventoryManagement2323' on server 'ATPL-LAP-354' is being disposed after spending 5ms reading results.
2025-05-09 00:06:26.585 +05:30 [DBG] Closing connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:06:26.586 +05:30 [DBG] Closed connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354' (1ms).
2025-05-09 00:06:26.589 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 00:06:26.591 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 00:06:26.592 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 00:06:26.593 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 00:06:26.594 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 00:06:26.597 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.ProductResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 00:06:26.599 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem) in 342.061ms
2025-05-09 00:06:26.601 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)'
2025-05-09 00:06:26.602 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 00:06:26.603 +05:30 [DBG] Disposing connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:06:26.604 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 00:06:26.606 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Product/search?keyword=tri - 200 null application/json; charset=utf-8 395.8226ms
2025-05-09 00:06:38.252 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Product/search?keyword=Tring - null null
2025-05-09 00:06:38.269 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/search'
2025-05-09 00:06:38.272 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)' with route pattern 'api/Product/search' is valid for the request path '/api/Product/search'
2025-05-09 00:06:38.274 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)'
2025-05-09 00:06:38.276 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 00:06:38.278 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 00:06:38.279 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)'
2025-05-09 00:06:38.281 +05:30 [INF] Route matched with {action = "SearchProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SearchProducts(System.String) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 00:06:38.283 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 00:06:38.284 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 00:06:38.285 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 00:06:38.287 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 00:06:38.289 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 00:06:38.290 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 00:06:38.296 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 00:06:38.299 +05:30 [DBG] Attempting to bind parameter 'keyword' of type 'System.String' ...
2025-05-09 00:06:38.300 +05:30 [DBG] Attempting to bind parameter 'keyword' of type 'System.String' using the name 'keyword' in request data ...
2025-05-09 00:06:38.301 +05:30 [DBG] Done attempting to bind parameter 'keyword' of type 'System.String'.
2025-05-09 00:06:38.303 +05:30 [DBG] Done attempting to bind parameter 'keyword' of type 'System.String'.
2025-05-09 00:06:38.304 +05:30 [DBG] Attempting to validate the bound parameter 'keyword' of type 'System.String' ...
2025-05-09 00:06:38.305 +05:30 [DBG] Done attempting to validate the bound parameter 'keyword' of type 'System.String'.
2025-05-09 00:06:38.368 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 00:06:38.387 +05:30 [DBG] Creating DbConnection.
2025-05-09 00:06:38.394 +05:30 [DBG] Created DbConnection. (7ms).
2025-05-09 00:06:38.402 +05:30 [DBG] Opening connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:06:38.406 +05:30 [DBG] Opened connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:06:38.408 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 00:06:38.410 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 00:06:38.412 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 00:06:38.416 +05:30 [DBG] Executing DbCommand [Parameters=[@__ToLower_0_contains='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND LOWER([p].[Name]) LIKE @__ToLower_0_contains ESCAPE N'\'
2025-05-09 00:06:38.422 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__ToLower_0_contains='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND LOWER([p].[Name]) LIKE @__ToLower_0_contains ESCAPE N'\'
2025-05-09 00:06:38.424 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:06:38.425 +05:30 [DBG] Closing data reader to 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:06:38.426 +05:30 [DBG] A data reader for 'InventoryManagement2323' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 00:06:38.427 +05:30 [DBG] Closing connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:06:38.428 +05:30 [DBG] Closed connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354' (1ms).
2025-05-09 00:06:38.430 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 00:06:38.434 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 00:06:38.435 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 00:06:38.437 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 00:06:38.437 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 00:06:38.439 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.ProductResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 00:06:38.440 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem) in 149.91ms
2025-05-09 00:06:38.442 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)'
2025-05-09 00:06:38.443 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 00:06:38.444 +05:30 [DBG] Disposing connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:06:38.446 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 00:06:38.447 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Product/search?keyword=Tring - 200 null application/json; charset=utf-8 195.3382ms
2025-05-09 00:07:16.964 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Category/all - null null
2025-05-09 00:07:16.972 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/all'
2025-05-09 00:07:16.986 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)' with route pattern 'api/Category/all' is valid for the request path '/api/Category/all'
2025-05-09 00:07:17.000 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 00:07:17.002 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 00:07:17.003 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 00:07:17.007 +05:30 [DBG] Policy authentication schemes  did not succeed
2025-05-09 00:07:17.011 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-05-09 00:07:17.017 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-09 00:07:17.019 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Category/all - 401 0 null 55.1089ms
2025-05-09 00:07:44.498 +05:30 [DBG] Connection id "0HNCEBSJEU380" received FIN.
2025-05-09 00:07:44.513 +05:30 [DBG] Connection id "0HNCEBSJEU380" is closed. The last processed stream ID was 15.
2025-05-09 00:07:44.526 +05:30 [DBG] The connection queue processing loop for 0HNCEBSJEU380 completed.
2025-05-09 00:07:44.530 +05:30 [DBG] Connection id "0HNCEBSJEU380" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 00:07:44.545 +05:30 [DBG] Connection id "0HNCEBSJEU380" stopped.
2025-05-09 00:07:49.078 +05:30 [DBG] Connection id "0HNCEBSJEU381" accepted.
2025-05-09 00:07:49.082 +05:30 [DBG] Connection id "0HNCEBSJEU381" started.
2025-05-09 00:07:49.114 +05:30 [DBG] Connection 0HNCEBSJEU381 established using the following protocol: "Tls12"
2025-05-09 00:07:49.122 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/login - application/json 56
2025-05-09 00:07:49.126 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/login'
2025-05-09 00:07:49.129 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-05-09 00:07:49.131 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 00:07:49.132 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 00:07:49.133 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 00:07:49.135 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 00:07:49.141 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(InventoryManagementSystem.Models.Request.UserLoginRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-09 00:07:49.143 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 00:07:49.145 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 00:07:49.147 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 00:07:49.150 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 00:07:49.152 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 00:07:49.154 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 00:07:49.156 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 00:07:49.158 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-09 00:07:49.160 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' using the name '' in request data ...
2025-05-09 00:07:49.163 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 00:07:49.172 +05:30 [DBG] Connection id "0HNCEBSJEU381", Request id "0HNCEBSJEU381:00000001": started reading request body.
2025-05-09 00:07:49.174 +05:30 [DBG] Connection id "0HNCEBSJEU381", Request id "0HNCEBSJEU381:00000001": done reading request body.
2025-05-09 00:07:49.191 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserLoginRequest'
2025-05-09 00:07:49.202 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 00:07:49.211 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 00:07:49.221 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-09 00:07:49.240 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 00:07:49.255 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 00:07:49.278 +05:30 [DBG] Compiling query expression: 
'DbSet<Users>()
    .Include(u => u.Role)
    .FirstOrDefault(u => u.Email == __email_0 && u.IsDeleted == (bool?)False)'
2025-05-09 00:07:49.306 +05:30 [DBG] Including navigation: 'Users.Role'.
2025-05-09 00:07:49.382 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Users>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Users>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Users.UserId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Users.CreatedBy (int?), 1], [Property: Users.CreatedDate (DateTime?), 2], [Property: Users.Email (string), 3], [Property: Users.IsDeleted (bool?), 4], [Property: Users.Name (string), 5], [Property: Users.Password (string), 6], [Property: Users.Phone (string), 7], [Property: Users.RoleId (int) Required FK Index, 8], [Property: Users.UpdatedBy (int?), 9], [Property: Users.UpdatedDate (DateTime?), 10] }
                1 -> Dictionary<IProperty, int> { [Property: Roles.RoleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Roles.Name (string), 12] }
            SELECT TOP(1) u.UserId, u.CreatedBy, u.CreatedDate, u.Email, u.IsDeleted, u.Name, u.Password, u.Phone, u.RoleId, u.UpdatedBy, u.UpdatedDate, r.RoleId, r.Name
            FROM Users AS u
            INNER JOIN Roles AS r ON u.RoleId == r.RoleId
            WHERE (u.Email == @__email_0) && (u.IsDeleted == CAST(0 AS bit))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Users.UserId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Users.CreatedBy (int?), 1], [Property: Users.CreatedDate (DateTime?), 2], [Property: Users.Email (string), 3], [Property: Users.IsDeleted (bool?), 4], [Property: Users.Name (string), 5], [Property: Users.Password (string), 6], [Property: Users.Phone (string), 7], [Property: Users.RoleId (int) Required FK Index, 8], [Property: Users.UpdatedBy (int?), 9], [Property: Users.UpdatedDate (DateTime?), 10] }
                1 -> Dictionary<IProperty, int> { [Property: Roles.RoleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Roles.Name (string), 12] }
            SELECT TOP(1) u.UserId, u.CreatedBy, u.CreatedDate, u.Email, u.IsDeleted, u.Name, u.Password, u.Phone, u.RoleId, u.UpdatedBy, u.UpdatedDate, r.RoleId, r.Name
            FROM Users AS u
            INNER JOIN Roles AS r ON u.RoleId == r.RoleId
            WHERE (u.Email == @__email_0) && (u.IsDeleted == CAST(0 AS bit)), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Users entity;
            Roles entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Users instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Users);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Users.UserId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Users)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")]: 
                            {
                                return 
                                {
                                    Users instance;
                                    instance = new Users();
                                    instance.<UserId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<CreatedBy>k__BackingField = dataReader.IsDBNull(1) ? default(int?) : (int?)dataReader.GetInt32(1);
                                    instance.<CreatedDate>k__BackingField = dataReader.IsDBNull(2) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(2);
                                    instance.<Email>k__BackingField = dataReader.IsDBNull(3) ? default(string) : dataReader.GetString(3);
                                    instance.<IsDeleted>k__BackingField = dataReader.IsDBNull(4) ? default(bool?) : (bool?)dataReader.GetBoolean(4);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                    instance.<Password>k__BackingField = dataReader.IsDBNull(6) ? default(string) : dataReader.GetString(6);
                                    instance.<Phone>k__BackingField = dataReader.IsDBNull(7) ? default(string) : dataReader.GetString(7);
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(8);
                                    instance.<UpdatedBy>k__BackingField = dataReader.IsDBNull(9) ? default(int?) : (int?)dataReader.GetInt32(9);
                                    instance.<UpdatedDate>k__BackingField = dataReader.IsDBNull(10) ? default(DateTime?) : (DateTime?)dataReader.GetDateTime(10);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Users)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Roles instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Roles);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Roles.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(11) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Roles)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")]: 
                            {
                                return 
                                {
                                    Roles instance;
                                    instance = new Roles();
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(11);
                                    instance.<Name>k__BackingField = dataReader.IsDBNull(12) ? default(string) : dataReader.GetString(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Roles)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Users, Users, Roles>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Users.Role (Roles) ToPrincipal Roles Inverse: Users | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users").FindNavigation("Role")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Roles.Users (ICollection<Users>) Collection ToDependent Users Inverse: Role | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindNavigation("Users")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Role>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Roles, ICollection<Users>, Users> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindNavigation("Users").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 00:07:49.438 +05:30 [DBG] Creating DbConnection.
2025-05-09 00:07:49.440 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 00:07:49.442 +05:30 [DBG] Opening connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:07:49.443 +05:30 [DBG] Opened connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:07:49.444 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 00:07:49.445 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 00:07:49.446 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 00:07:49.447 +05:30 [DBG] Executing DbCommand [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 00:07:49.457 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__email_0='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 00:07:49.470 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Users' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:07:49.522 +05:30 [DBG] The navigation 'Users.Role' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:07:49.540 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Roles' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:07:49.556 +05:30 [DBG] Closing data reader to 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:07:49.559 +05:30 [DBG] A data reader for 'InventoryManagement2323' on server 'ATPL-LAP-354' is being disposed after spending 99ms reading results.
2025-05-09 00:07:49.565 +05:30 [DBG] Closing connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:07:49.568 +05:30 [DBG] Closed connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354' (3ms).
2025-05-09 00:07:49.706 +05:30 [INF] User logged in successfully: soni@gmail.com
2025-05-09 00:07:49.712 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 00:07:49.719 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 00:07:49.720 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 00:07:49.721 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 00:07:49.722 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 00:07:49.723 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.UserLoginResponce, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-09 00:07:49.727 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem) in 573.3299ms
2025-05-09 00:07:49.729 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 00:07:49.730 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 00:07:49.731 +05:30 [DBG] Disposing connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:07:49.732 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 00:07:49.734 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/login - 200 null application/json; charset=utf-8 612.313ms
2025-05-09 00:08:14.562 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Category/all - null null
2025-05-09 00:08:14.576 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/all'
2025-05-09 00:08:14.578 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)' with route pattern 'api/Category/all' is valid for the request path '/api/Category/all'
2025-05-09 00:08:14.581 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 00:08:14.583 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 00:08:14.640 +05:30 [DBG] Successfully validated the token.
2025-05-09 00:08:14.651 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 00:08:14.663 +05:30 [DBG] Authorization was successful.
2025-05-09 00:08:14.670 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 00:08:14.676 +05:30 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 00:08:14.680 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 00:08:14.681 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 00:08:14.683 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 00:08:14.685 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 00:08:14.686 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 00:08:14.689 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 00:08:14.692 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 00:08:14.697 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 00:08:14.700 +05:30 [DBG] Compiling query expression: 
'DbSet<Category>()
    .Where(c => !(c.IsDeleted))
    .OrderBy(c => c.Name)'
2025-05-09 00:08:14.710 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Category>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
        SELECT c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
        FROM Category AS c
        WHERE Not(c.IsDeleted)
        ORDER BY c.Name ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
        SELECT c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
        FROM Category AS c
        WHERE Not(c.IsDeleted)
        ORDER BY c.Name ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Category entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Category instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Category);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Category.CategoryId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Category)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]: 
                        {
                            return 
                            {
                                Category instance;
                                instance = new Category();
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(0);
                                instance.<ActiveStatus>k__BackingField = dataReader.GetBoolean(1);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CreatedBy>k__BackingField = dataReader.GetInt64(3);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                instance.<Name>k__BackingField = dataReader.GetString(5);
                                instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(6);
                                instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Category)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 00:08:14.731 +05:30 [DBG] Creating DbConnection.
2025-05-09 00:08:14.732 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 00:08:14.733 +05:30 [DBG] Opening connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:08:14.734 +05:30 [DBG] Opened connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:08:14.735 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 00:08:14.737 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 00:08:14.738 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 00:08:14.740 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 00:08:14.746 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 00:08:14.751 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:08:14.762 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:08:14.764 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:08:14.766 +05:30 [DBG] Closing data reader to 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:08:14.767 +05:30 [DBG] A data reader for 'InventoryManagement2323' on server 'ATPL-LAP-354' is being disposed after spending 18ms reading results.
2025-05-09 00:08:14.770 +05:30 [DBG] Closing connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:08:14.773 +05:30 [DBG] Closed connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354' (2ms).
2025-05-09 00:08:14.775 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 00:08:14.778 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 00:08:14.779 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 00:08:14.780 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 00:08:14.781 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 00:08:14.783 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Entity.Category, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 00:08:14.796 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem) in 107.0964ms
2025-05-09 00:08:14.798 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 00:08:14.799 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 00:08:14.801 +05:30 [DBG] Disposing connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:08:14.802 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 00:08:14.804 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Category/all - 200 null application/json; charset=utf-8 245.0474ms
2025-05-09 00:09:37.845 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Product/add - application/json 133
2025-05-09 00:09:37.864 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/add'
2025-05-09 00:09:37.868 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)' with route pattern 'api/Product/add' is valid for the request path '/api/Product/add'
2025-05-09 00:09:37.879 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 00:09:37.888 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 00:09:37.891 +05:30 [DBG] Successfully validated the token.
2025-05-09 00:09:37.893 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 00:09:37.904 +05:30 [DBG] Authorization was successful.
2025-05-09 00:09:37.910 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 00:09:37.921 +05:30 [INF] Route matched with {action = "AddProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddProduct(InventoryManagementSystem.Models.Request.AddProductRequest) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 00:09:37.931 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 00:09:37.933 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 00:09:37.935 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 00:09:37.938 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 00:09:37.940 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 00:09:37.942 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 00:09:37.946 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 00:09:37.948 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' ...
2025-05-09 00:09:37.950 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' using the name '' in request data ...
2025-05-09 00:09:37.952 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 00:09:37.955 +05:30 [DBG] Connection id "0HNCEBSJEU381", Request id "0HNCEBSJEU381:00000005": started reading request body.
2025-05-09 00:09:37.956 +05:30 [DBG] Connection id "0HNCEBSJEU381", Request id "0HNCEBSJEU381:00000005": done reading request body.
2025-05-09 00:09:37.964 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.AddProductRequest'
2025-05-09 00:09:37.968 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 00:09:37.969 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 00:09:37.971 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' ...
2025-05-09 00:09:37.974 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 00:09:37.983 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 00:09:38.010 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Products.ProductId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:09:38.036 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:09:38.047 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 00:09:38.064 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 00:09:38.085 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 00:09:38.191 +05:30 [DBG] Creating DbConnection.
2025-05-09 00:09:38.195 +05:30 [DBG] Created DbConnection. (3ms).
2025-05-09 00:09:38.199 +05:30 [DBG] Opening connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:09:38.207 +05:30 [DBG] Opened connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:09:38.218 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 00:09:38.223 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-05-09 00:09:38.234 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (16ms).
2025-05-09 00:09:38.245 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 4000), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 255), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([AvailableQuantity], [CategoryId], [CreatedAt], [CreatedBy], [Description], [IsDeleted], [LastRestockAt], [MinimumRequiredQuantity], [Name], [Price], [ProductStatus], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[ProductId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12);
2025-05-09 00:09:38.272 +05:30 [INF] Executed DbCommand (27ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 4000), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 255), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([AvailableQuantity], [CategoryId], [CreatedAt], [CreatedBy], [Description], [IsDeleted], [LastRestockAt], [MinimumRequiredQuantity], [Name], [Price], [ProductStatus], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[ProductId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12);
2025-05-09 00:09:38.295 +05:30 [DBG] The foreign key property 'Products.ProductId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 00:09:38.314 +05:30 [DBG] Closing data reader to 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:09:38.321 +05:30 [DBG] A data reader for 'InventoryManagement2323' on server 'ATPL-LAP-354' is being disposed after spending 38ms reading results.
2025-05-09 00:09:38.327 +05:30 [DBG] Closing connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:09:38.330 +05:30 [DBG] Closed connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354' (2ms).
2025-05-09 00:09:38.341 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:09:38.348 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 00:09:38.352 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .FirstOrDefault(p => p.ProductId == __productId_0)'
2025-05-09 00:09:38.357 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Products>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Products>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(255), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__productId_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(255), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__productId_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Products entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Products instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Products);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Products)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                            {
                                return 
                                {
                                    Products instance;
                                    instance = new Products();
                                    instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                    instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Name>k__BackingField = dataReader.GetString(9);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                    instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Products)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 00:09:38.391 +05:30 [DBG] Opening connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:09:38.398 +05:30 [DBG] Opened connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:09:38.401 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 00:09:38.402 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 00:09:38.403 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 00:09:38.404 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 00:09:38.413 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 00:09:38.415 +05:30 [DBG] Closing data reader to 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:09:38.417 +05:30 [DBG] A data reader for 'InventoryManagement2323' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 00:09:38.418 +05:30 [DBG] Closing connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:09:38.420 +05:30 [DBG] Closed connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354' (1ms).
2025-05-09 00:09:38.426 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:09:38.440 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:09:38.446 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:09:38.449 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 00:09:38.450 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 00:09:38.456 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 00:09:38.463 +05:30 [DBG] Opening connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:09:38.472 +05:30 [DBG] Opened connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:09:38.480 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 00:09:38.482 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-05-09 00:09:38.484 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-09 00:09:38.486 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 00:09:38.502 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 00:09:38.511 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 00:09:38.515 +05:30 [DBG] Closing data reader to 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:09:38.517 +05:30 [DBG] A data reader for 'InventoryManagement2323' on server 'ATPL-LAP-354' is being disposed after spending 9ms reading results.
2025-05-09 00:09:38.521 +05:30 [DBG] Closing connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:09:38.524 +05:30 [DBG] Closed connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354' (3ms).
2025-05-09 00:09:38.532 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:09:38.538 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 00:09:38.542 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 00:09:38.546 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 00:09:38.547 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 00:09:38.547 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 00:09:38.548 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 00:09:38.549 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 00:09:38.552 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem) in 609.8148ms
2025-05-09 00:09:38.559 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 00:09:38.561 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 00:09:38.563 +05:30 [DBG] Disposing connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:09:38.565 +05:30 [DBG] Disposed connection to database '' on server '' (2ms).
2025-05-09 00:09:38.566 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Product/add - 201 null application/json; charset=utf-8 723.6366ms
2025-05-09 00:09:48.037 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Product/get-all-products - null null
2025-05-09 00:09:48.046 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/get-all-products'
2025-05-09 00:09:48.057 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)' with route pattern 'api/Product/get-all-products' is valid for the request path '/api/Product/get-all-products'
2025-05-09 00:09:48.065 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 00:09:48.068 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 00:09:48.070 +05:30 [DBG] Successfully validated the token.
2025-05-09 00:09:48.071 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 00:09:48.072 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 00:09:48.073 +05:30 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 00:09:48.076 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 00:09:48.077 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 00:09:48.080 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 00:09:48.083 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 00:09:48.084 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 00:09:48.086 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 00:09:48.088 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 00:09:48.090 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 00:09:48.093 +05:30 [DBG] Creating DbConnection.
2025-05-09 00:09:48.094 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 00:09:48.096 +05:30 [DBG] Opening connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:09:48.098 +05:30 [DBG] Opened connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:09:48.099 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 00:09:48.100 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 00:09:48.102 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 00:09:48.103 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 00:09:48.108 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 00:09:48.113 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:09:48.114 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:09:48.116 +05:30 [DBG] Closing data reader to 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:09:48.117 +05:30 [DBG] A data reader for 'InventoryManagement2323' on server 'ATPL-LAP-354' is being disposed after spending 4ms reading results.
2025-05-09 00:09:48.119 +05:30 [DBG] Closing connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:09:48.121 +05:30 [DBG] Closed connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354' (1ms).
2025-05-09 00:09:48.122 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 00:09:48.125 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 00:09:48.126 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 00:09:48.128 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 00:09:48.129 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 00:09:48.131 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.ProductResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 00:09:48.134 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem) in 47.9456ms
2025-05-09 00:09:48.136 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 00:09:48.137 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 00:09:48.139 +05:30 [DBG] Disposing connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:09:48.140 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 00:09:48.142 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Product/get-all-products - 200 null application/json; charset=utf-8 104.4027ms
2025-05-09 00:10:05.979 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Product/search?keyword=n - null null
2025-05-09 00:10:05.987 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/search'
2025-05-09 00:10:05.990 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)' with route pattern 'api/Product/search' is valid for the request path '/api/Product/search'
2025-05-09 00:10:05.996 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)'
2025-05-09 00:10:05.999 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 00:10:06.001 +05:30 [DBG] Successfully validated the token.
2025-05-09 00:10:06.004 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 00:10:06.007 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)'
2025-05-09 00:10:06.009 +05:30 [INF] Route matched with {action = "SearchProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SearchProducts(System.String) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 00:10:06.014 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 00:10:06.018 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 00:10:06.020 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 00:10:06.023 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 00:10:06.026 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 00:10:06.028 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 00:10:06.030 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 00:10:06.032 +05:30 [DBG] Attempting to bind parameter 'keyword' of type 'System.String' ...
2025-05-09 00:10:06.034 +05:30 [DBG] Attempting to bind parameter 'keyword' of type 'System.String' using the name 'keyword' in request data ...
2025-05-09 00:10:06.036 +05:30 [DBG] Done attempting to bind parameter 'keyword' of type 'System.String'.
2025-05-09 00:10:06.037 +05:30 [DBG] Done attempting to bind parameter 'keyword' of type 'System.String'.
2025-05-09 00:10:06.039 +05:30 [DBG] Attempting to validate the bound parameter 'keyword' of type 'System.String' ...
2025-05-09 00:10:06.042 +05:30 [DBG] Done attempting to validate the bound parameter 'keyword' of type 'System.String'.
2025-05-09 00:10:06.045 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 00:10:06.049 +05:30 [DBG] Creating DbConnection.
2025-05-09 00:10:06.050 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 00:10:06.051 +05:30 [DBG] Opening connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:10:06.053 +05:30 [DBG] Opened connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:10:06.056 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 00:10:06.057 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 00:10:06.059 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 00:10:06.061 +05:30 [DBG] Executing DbCommand [Parameters=[@__ToLower_0_contains='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND LOWER([p].[Name]) LIKE @__ToLower_0_contains ESCAPE N'\'
2025-05-09 00:10:06.069 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__ToLower_0_contains='?' (Size = 255)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND LOWER([p].[Name]) LIKE @__ToLower_0_contains ESCAPE N'\'
2025-05-09 00:10:06.073 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:10:06.075 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 00:10:06.077 +05:30 [DBG] Closing data reader to 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:10:06.079 +05:30 [DBG] A data reader for 'InventoryManagement2323' on server 'ATPL-LAP-354' is being disposed after spending 6ms reading results.
2025-05-09 00:10:06.082 +05:30 [DBG] Closing connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:10:06.084 +05:30 [DBG] Closed connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354' (2ms).
2025-05-09 00:10:06.086 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 00:10:06.089 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 00:10:06.090 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 00:10:06.092 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 00:10:06.101 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 00:10:06.103 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.ProductResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 00:10:06.106 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem) in 77.7672ms
2025-05-09 00:10:06.108 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)'
2025-05-09 00:10:06.109 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 00:10:06.110 +05:30 [DBG] Disposing connection to database 'InventoryManagement2323' on server 'ATPL-LAP-354'.
2025-05-09 00:10:06.112 +05:30 [DBG] Disposed connection to database '' on server '' (2ms).
2025-05-09 00:10:06.114 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Product/search?keyword=n - 200 null application/json; charset=utf-8 135.8961ms
2025-05-09 00:52:23.540 +05:30 [INF] Starting up the application...
2025-05-09 00:52:23.731 +05:30 [FTL] Application failed to start
Microsoft.Extensions.Hosting.HostAbortedException: The host was aborted.
   at Microsoft.Extensions.Hosting.HostFactoryResolver.HostingListener.ThrowHostAborted()
   at Microsoft.Extensions.Hosting.HostFactoryResolver.HostingListener.OnNext(KeyValuePair`2 value)
   at System.Diagnostics.DiagnosticListener.Write(String name, Object value)
   at System.Diagnostics.DiagnosticSource.Write[T](String name, T value)
   at Microsoft.Extensions.Hosting.HostBuilder.ResolveHost(IServiceProvider serviceProvider, DiagnosticListener diagnosticListener)
   at Microsoft.Extensions.Hosting.HostApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build()
   at Program.<Main>$(String[] args) in C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem\Program.cs:line 98
2025-05-09 00:59:41.356 +05:30 [INF] Starting up the application...
2025-05-09 00:59:41.550 +05:30 [FTL] Application failed to start
Microsoft.Extensions.Hosting.HostAbortedException: The host was aborted.
   at Microsoft.Extensions.Hosting.HostFactoryResolver.HostingListener.ThrowHostAborted()
   at Microsoft.Extensions.Hosting.HostFactoryResolver.HostingListener.OnNext(KeyValuePair`2 value)
   at System.Diagnostics.DiagnosticListener.Write(String name, Object value)
   at System.Diagnostics.DiagnosticSource.Write[T](String name, T value)
   at Microsoft.Extensions.Hosting.HostBuilder.ResolveHost(IServiceProvider serviceProvider, DiagnosticListener diagnosticListener)
   at Microsoft.Extensions.Hosting.HostApplicationBuilder.Build()
   at Microsoft.AspNetCore.Builder.WebApplicationBuilder.Build()
   at Program.<Main>$(String[] args) in C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem\Program.cs:line 98
2025-05-09 01:17:09.099 +05:30 [INF] Starting up the application...
2025-05-09 01:17:10.332 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-09 01:17:10.506 +05:30 [DBG] Hosting starting
2025-05-09 01:17:10.572 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-09 01:17:10.595 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-09 01:17:10.606 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-09 01:17:10.615 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-09 01:17:10.632 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-09 01:17:10.648 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-09 01:17:10.659 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 01:17:10.663 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-09 01:17:10.665 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 01:17:10.676 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-09 01:17:10.681 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-09 01:17:10.685 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-09 01:17:10.691 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-09 01:17:10.700 +05:30 [DBG] Middleware loaded
2025-05-09 01:17:10.708 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-09 01:17:10.712 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-09 01:17:10.848 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-09 01:17:10.991 +05:30 [DBG] Connection id "0HNCED4FQ4AS2" accepted.
2025-05-09 01:17:11.001 +05:30 [DBG] Connection id "0HNCED4FQ4AS2" started.
2025-05-09 01:17:11.005 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-09 01:17:11.006 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-09 01:17:11.008 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-09 01:17:11.009 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-09 01:17:11.017 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-09 01:17:11.019 +05:30 [DBG] Connection id "0HNCED4FQ4AS3" received FIN.
2025-05-09 01:17:11.019 +05:30 [DBG] Connection id "0HNCED4FQ4AS2" received FIN.
2025-05-09 01:17:11.020 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-09 01:17:11.025 +05:30 [DBG] Connection id "0HNCED4FQ4AS3" accepted.
2025-05-09 01:17:11.029 +05:30 [DBG] Connection id "0HNCED4FQ4AS3" started.
2025-05-09 01:17:11.036 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 01:17:11.036 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 01:17:11.100 +05:30 [DBG] Connection id "0HNCED4FQ4AS3" stopped.
2025-05-09 01:17:11.100 +05:30 [DBG] Connection id "0HNCED4FQ4AS2" stopped.
2025-05-09 01:17:11.106 +05:30 [DBG] Connection id "0HNCED4FQ4AS3" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 01:17:11.106 +05:30 [DBG] Connection id "0HNCED4FQ4AS2" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 01:17:11.228 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-09 01:17:11.230 +05:30 [INF] Hosting environment: Development
2025-05-09 01:17:11.231 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-09 01:17:11.234 +05:30 [DBG] Hosting started
2025-05-09 01:17:11.912 +05:30 [DBG] Connection id "0HNCED4FQ4AS4" accepted.
2025-05-09 01:17:11.930 +05:30 [DBG] Connection id "0HNCED4FQ4AS4" started.
2025-05-09 01:17:12.122 +05:30 [DBG] Connection 0HNCED4FQ4AS4 established using the following protocol: "Tls12"
2025-05-09 01:17:12.388 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-09 01:17:12.746 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-09 01:17:12.798 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-09 01:17:12.803 +05:30 [DBG] Request did not match any endpoints
2025-05-09 01:17:12.934 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-09 01:17:12.941 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-09 01:17:12.990 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-09 01:17:12.990 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-09 01:17:12.991 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-09 01:17:13.016 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-09 01:17:13.027 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-09 01:17:13.033 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 41.6454ms
2025-05-09 01:17:13.034 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 667.636ms
2025-05-09 01:17:13.157 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 166.2158ms
2025-05-09 01:17:13.345 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-09 01:17:13.352 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-09 01:17:13.356 +05:30 [DBG] Request did not match any endpoints
2025-05-09 01:17:13.406 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 61.0064ms
2025-05-09 01:18:07.586 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/register - application/json 117
2025-05-09 01:18:07.620 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/register'
2025-05-09 01:18:07.628 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)' with route pattern 'api/Auth/register' is valid for the request path '/api/Auth/register'
2025-05-09 01:18:07.633 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 01:18:07.642 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:18:07.732 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 01:18:07.737 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 01:18:07.773 +05:30 [INF] Route matched with {action = "Register", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(InventoryManagementSystem.Models.Request.UserRegisterRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-09 01:18:07.783 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:18:07.791 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:18:07.800 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:18:07.803 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:18:07.805 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:18:07.811 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 01:18:07.967 +05:30 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-05-09 01:18:07.993 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 01:18:08.006 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' ...
2025-05-09 01:18:08.013 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' using the name '' in request data ...
2025-05-09 01:18:08.018 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 01:18:08.037 +05:30 [DBG] Connection id "0HNCED4FQ4AS4", Request id "0HNCED4FQ4AS4:00000009": started reading request body.
2025-05-09 01:18:08.040 +05:30 [DBG] Connection id "0HNCED4FQ4AS4", Request id "0HNCED4FQ4AS4:00000009": done reading request body.
2025-05-09 01:18:08.071 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'
2025-05-09 01:18:08.077 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 01:18:08.083 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 01:18:08.085 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' ...
2025-05-09 01:18:08.099 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 01:18:09.233 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:18:09.329 +05:30 [DBG] Compiling query expression: 
'DbSet<Users>()
    .Include(u => u.Role)
    .FirstOrDefault(u => u.Email == __email_0 && u.IsDeleted == False)'
2025-05-09 01:18:09.433 +05:30 [DBG] Including navigation: 'Users.Role'.
2025-05-09 01:18:09.727 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Users>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Users>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Users.UserId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Users.CreatedBy (int) Required, 1], [Property: Users.CreatedDate (DateTime) Required, 2], [Property: Users.Email (string) Required MaxLength(100), 3], [Property: Users.IsDeleted (bool) Required, 4], [Property: Users.Name (string) Required MaxLength(100), 5], [Property: Users.Password (string) Required MaxLength(255), 6], [Property: Users.Phone (string) Required MaxLength(15), 7], [Property: Users.RoleId (int) Required FK Index, 8], [Property: Users.UpdatedBy (int) Required, 9], [Property: Users.UpdatedDate (DateTime) Required, 10] }
                1 -> Dictionary<IProperty, int> { [Property: Roles.RoleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Roles.Name (string) Required MaxLength(50), 12] }
            SELECT TOP(1) u.UserId, u.CreatedBy, u.CreatedDate, u.Email, u.IsDeleted, u.Name, u.Password, u.Phone, u.RoleId, u.UpdatedBy, u.UpdatedDate, r.RoleId, r.Name
            FROM Users AS u
            INNER JOIN Roles AS r ON u.RoleId == r.RoleId
            WHERE (u.Email == @__email_0) && (u.IsDeleted == CAST(0 AS bit))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Users.UserId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Users.CreatedBy (int) Required, 1], [Property: Users.CreatedDate (DateTime) Required, 2], [Property: Users.Email (string) Required MaxLength(100), 3], [Property: Users.IsDeleted (bool) Required, 4], [Property: Users.Name (string) Required MaxLength(100), 5], [Property: Users.Password (string) Required MaxLength(255), 6], [Property: Users.Phone (string) Required MaxLength(15), 7], [Property: Users.RoleId (int) Required FK Index, 8], [Property: Users.UpdatedBy (int) Required, 9], [Property: Users.UpdatedDate (DateTime) Required, 10] }
                1 -> Dictionary<IProperty, int> { [Property: Roles.RoleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Roles.Name (string) Required MaxLength(50), 12] }
            SELECT TOP(1) u.UserId, u.CreatedBy, u.CreatedDate, u.Email, u.IsDeleted, u.Name, u.Password, u.Phone, u.RoleId, u.UpdatedBy, u.UpdatedDate, r.RoleId, r.Name
            FROM Users AS u
            INNER JOIN Roles AS r ON u.RoleId == r.RoleId
            WHERE (u.Email == @__email_0) && (u.IsDeleted == CAST(0 AS bit)), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Users entity;
            Roles entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Users instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Users);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Users.UserId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Users)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")]: 
                            {
                                return 
                                {
                                    Users instance;
                                    instance = new Users();
                                    instance.<UserId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CreatedDate>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Email>k__BackingField = dataReader.GetString(3);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    instance.<Password>k__BackingField = dataReader.GetString(6);
                                    instance.<Phone>k__BackingField = dataReader.GetString(7);
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(8);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt32(9);
                                    instance.<UpdatedDate>k__BackingField = dataReader.GetDateTime(10);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Users)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Roles instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Roles);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Roles.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(11) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Roles)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")]: 
                            {
                                return 
                                {
                                    Roles instance;
                                    instance = new Roles();
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(11);
                                    instance.<Name>k__BackingField = dataReader.GetString(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Roles)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Users, Users, Roles>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Users.Role (Roles) ToPrincipal Roles Inverse: Users | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users").FindNavigation("Role")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Roles.Users (ICollection<Users>) Collection ToDependent Users Inverse: Role | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindNavigation("Users")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Role>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Roles, ICollection<Users>, Users> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindNavigation("Users").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 01:18:09.830 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:18:09.857 +05:30 [DBG] Created DbConnection. (24ms).
2025-05-09 01:18:09.868 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:18:10.238 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:18:10.245 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:18:10.254 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-05-09 01:18:10.267 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (21ms).
2025-05-09 01:18:10.282 +05:30 [DBG] Executing DbCommand [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:18:10.390 +05:30 [INF] Executed DbCommand (113ms) [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:18:10.428 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:18:10.439 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 26ms reading results.
2025-05-09 01:18:10.451 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:18:10.460 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (9ms).
2025-05-09 01:18:10.632 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Users.UserId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:18:10.755 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Users' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:18:10.767 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:18:10.773 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:18:10.796 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:18:10.874 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:18:10.879 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:18:10.883 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:18:10.887 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-05-09 01:18:10.889 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-05-09 01:18:10.891 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (Size = 100), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (Size = 255), @p6='?' (Size = 15), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Users] ([CreatedBy], [CreatedDate], [Email], [IsDeleted], [Name], [Password], [Phone], [RoleId], [UpdatedBy], [UpdatedDate])
OUTPUT INSERTED.[UserId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2025-05-09 01:18:10.902 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (Size = 100), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (Size = 255), @p6='?' (Size = 15), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Users] ([CreatedBy], [CreatedDate], [Email], [IsDeleted], [Name], [Password], [Phone], [RoleId], [UpdatedBy], [UpdatedDate])
OUTPUT INSERTED.[UserId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2025-05-09 01:18:10.935 +05:30 [DBG] The foreign key property 'Users.UserId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:18:10.946 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:18:10.950 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 35ms reading results.
2025-05-09 01:18:10.953 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:18:10.954 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:18:10.969 +05:30 [DBG] An entity of type 'Users' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:18:10.977 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:18:10.981 +05:30 [INF] New user registered: System@gmail.com
2025-05-09 01:18:10.988 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:18:10.996 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:18:10.999 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:18:11.001 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:18:11.002 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:18:11.004 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:18:11.029 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem) in 3213.6219ms
2025-05-09 01:18:11.034 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 01:18:11.037 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:18:11.045 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:18:11.051 +05:30 [DBG] Disposed connection to database '' on server '' (6ms).
2025-05-09 01:18:11.053 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/register - 201 null application/json; charset=utf-8 3467.3149ms
2025-05-09 01:21:57.986 +05:30 [INF] Starting up the application...
2025-05-09 01:21:59.106 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-09 01:21:59.251 +05:30 [DBG] Hosting starting
2025-05-09 01:21:59.309 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-09 01:21:59.327 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-09 01:21:59.336 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-09 01:21:59.350 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-09 01:21:59.365 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-09 01:21:59.385 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-09 01:21:59.396 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 01:21:59.416 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-09 01:21:59.424 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 01:21:59.437 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-09 01:21:59.441 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-09 01:21:59.446 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-09 01:21:59.450 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-09 01:21:59.469 +05:30 [DBG] Middleware loaded
2025-05-09 01:21:59.471 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-09 01:21:59.475 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-09 01:21:59.624 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-09 01:21:59.749 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-09 01:21:59.751 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-09 01:21:59.753 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-09 01:21:59.755 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-09 01:21:59.758 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-09 01:21:59.770 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-09 01:21:59.838 +05:30 [DBG] Connection id "0HNCED75SPCGB" accepted.
2025-05-09 01:21:59.842 +05:30 [DBG] Connection id "0HNCED75SPCGB" started.
2025-05-09 01:21:59.854 +05:30 [DBG] Connection id "0HNCED75SPCGC" accepted.
2025-05-09 01:21:59.859 +05:30 [DBG] Connection id "0HNCED75SPCGC" started.
2025-05-09 01:21:59.880 +05:30 [DBG] Connection id "0HNCED75SPCGB" received FIN.
2025-05-09 01:21:59.880 +05:30 [DBG] Connection id "0HNCED75SPCGC" received FIN.
2025-05-09 01:21:59.896 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 01:21:59.896 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 01:21:59.957 +05:30 [DBG] Connection id "0HNCED75SPCGB" stopped.
2025-05-09 01:21:59.957 +05:30 [DBG] Connection id "0HNCED75SPCGC" stopped.
2025-05-09 01:21:59.965 +05:30 [DBG] Connection id "0HNCED75SPCGB" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 01:21:59.968 +05:30 [DBG] Connection id "0HNCED75SPCGC" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 01:21:59.969 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-09 01:21:59.979 +05:30 [INF] Hosting environment: Development
2025-05-09 01:21:59.981 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-09 01:21:59.985 +05:30 [DBG] Hosting started
2025-05-09 01:22:00.167 +05:30 [DBG] Connection id "0HNCED75SPCGD" accepted.
2025-05-09 01:22:00.187 +05:30 [DBG] Connection id "0HNCED75SPCGD" started.
2025-05-09 01:22:00.296 +05:30 [DBG] Connection 0HNCED75SPCGD established using the following protocol: "Tls12"
2025-05-09 01:22:00.438 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-09 01:22:00.601 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-09 01:22:00.631 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-09 01:22:00.637 +05:30 [DBG] Request did not match any endpoints
2025-05-09 01:22:00.747 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-09 01:22:00.750 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-09 01:22:00.787 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-09 01:22:00.791 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-09 01:22:00.801 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-09 01:22:00.801 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-09 01:22:00.813 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 394.3839ms
2025-05-09 01:22:00.837 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-09 01:22:00.847 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 46.2638ms
2025-05-09 01:22:00.913 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 111.7051ms
2025-05-09 01:22:01.069 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-09 01:22:01.072 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-09 01:22:01.079 +05:30 [DBG] Request did not match any endpoints
2025-05-09 01:22:01.118 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 48.9365ms
2025-05-09 01:22:56.693 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/register - application/json 116
2025-05-09 01:22:56.724 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/register'
2025-05-09 01:22:56.745 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)' with route pattern 'api/Auth/register' is valid for the request path '/api/Auth/register'
2025-05-09 01:22:56.750 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 01:22:56.757 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:22:56.854 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 01:22:56.865 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 01:22:56.904 +05:30 [INF] Route matched with {action = "Register", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(InventoryManagementSystem.Models.Request.UserRegisterRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-09 01:22:56.913 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:22:56.917 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:22:56.919 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:22:56.921 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:22:56.923 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:22:56.926 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 01:22:57.072 +05:30 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-05-09 01:22:57.108 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 01:22:57.129 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' ...
2025-05-09 01:22:57.133 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' using the name '' in request data ...
2025-05-09 01:22:57.136 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 01:22:57.151 +05:30 [DBG] Connection id "0HNCED75SPCGD", Request id "0HNCED75SPCGD:00000009": started reading request body.
2025-05-09 01:22:57.152 +05:30 [DBG] Connection id "0HNCED75SPCGD", Request id "0HNCED75SPCGD:00000009": done reading request body.
2025-05-09 01:22:57.168 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'
2025-05-09 01:22:57.172 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 01:22:57.175 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 01:22:57.176 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' ...
2025-05-09 01:22:57.188 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 01:22:58.010 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:22:58.120 +05:30 [DBG] Compiling query expression: 
'DbSet<Users>()
    .Include(u => u.Role)
    .FirstOrDefault(u => u.Email == __email_0 && u.IsDeleted == False)'
2025-05-09 01:22:58.206 +05:30 [DBG] Including navigation: 'Users.Role'.
2025-05-09 01:22:58.496 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Users>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Users>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Users.UserId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Users.CreatedBy (int) Required, 1], [Property: Users.CreatedDate (DateTime) Required, 2], [Property: Users.Email (string) Required MaxLength(100), 3], [Property: Users.IsDeleted (bool) Required, 4], [Property: Users.Name (string) Required MaxLength(100), 5], [Property: Users.Password (string) Required MaxLength(255), 6], [Property: Users.Phone (string) Required MaxLength(15), 7], [Property: Users.RoleId (int) Required FK Index, 8], [Property: Users.UpdatedBy (int) Required, 9], [Property: Users.UpdatedDate (DateTime) Required, 10] }
                1 -> Dictionary<IProperty, int> { [Property: Roles.RoleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Roles.Name (string) Required MaxLength(50), 12] }
            SELECT TOP(1) u.UserId, u.CreatedBy, u.CreatedDate, u.Email, u.IsDeleted, u.Name, u.Password, u.Phone, u.RoleId, u.UpdatedBy, u.UpdatedDate, r.RoleId, r.Name
            FROM Users AS u
            INNER JOIN Roles AS r ON u.RoleId == r.RoleId
            WHERE (u.Email == @__email_0) && (u.IsDeleted == CAST(0 AS bit))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Users.UserId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Users.CreatedBy (int) Required, 1], [Property: Users.CreatedDate (DateTime) Required, 2], [Property: Users.Email (string) Required MaxLength(100), 3], [Property: Users.IsDeleted (bool) Required, 4], [Property: Users.Name (string) Required MaxLength(100), 5], [Property: Users.Password (string) Required MaxLength(255), 6], [Property: Users.Phone (string) Required MaxLength(15), 7], [Property: Users.RoleId (int) Required FK Index, 8], [Property: Users.UpdatedBy (int) Required, 9], [Property: Users.UpdatedDate (DateTime) Required, 10] }
                1 -> Dictionary<IProperty, int> { [Property: Roles.RoleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Roles.Name (string) Required MaxLength(50), 12] }
            SELECT TOP(1) u.UserId, u.CreatedBy, u.CreatedDate, u.Email, u.IsDeleted, u.Name, u.Password, u.Phone, u.RoleId, u.UpdatedBy, u.UpdatedDate, r.RoleId, r.Name
            FROM Users AS u
            INNER JOIN Roles AS r ON u.RoleId == r.RoleId
            WHERE (u.Email == @__email_0) && (u.IsDeleted == CAST(0 AS bit)), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Users entity;
            Roles entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Users instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Users);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Users.UserId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Users)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")]: 
                            {
                                return 
                                {
                                    Users instance;
                                    instance = new Users();
                                    instance.<UserId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CreatedDate>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Email>k__BackingField = dataReader.GetString(3);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    instance.<Password>k__BackingField = dataReader.GetString(6);
                                    instance.<Phone>k__BackingField = dataReader.GetString(7);
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(8);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt32(9);
                                    instance.<UpdatedDate>k__BackingField = dataReader.GetDateTime(10);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Users)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Roles instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Roles);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Roles.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(11) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Roles)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")]: 
                            {
                                return 
                                {
                                    Roles instance;
                                    instance = new Roles();
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(11);
                                    instance.<Name>k__BackingField = dataReader.GetString(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Roles)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Users, Users, Roles>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Users.Role (Roles) ToPrincipal Roles Inverse: Users | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users").FindNavigation("Role")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Roles.Users (ICollection<Users>) Collection ToDependent Users Inverse: Role | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindNavigation("Users")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Role>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Roles, ICollection<Users>, Users> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindNavigation("Users").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 01:22:58.578 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:22:58.602 +05:30 [DBG] Created DbConnection. (22ms).
2025-05-09 01:22:58.617 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:22:58.893 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:22:58.902 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:22:58.910 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-05-09 01:22:58.923 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (21ms).
2025-05-09 01:22:58.937 +05:30 [DBG] Executing DbCommand [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:22:59.026 +05:30 [INF] Executed DbCommand (92ms) [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:22:59.045 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:22:59.057 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 18ms reading results.
2025-05-09 01:22:59.070 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:22:59.081 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (11ms).
2025-05-09 01:22:59.232 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Users.UserId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:22:59.345 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Users' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:22:59.351 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:22:59.355 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:22:59.380 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:22:59.455 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:22:59.463 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:22:59.473 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:22:59.479 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-05-09 01:22:59.482 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-05-09 01:22:59.484 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (Size = 100), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (Size = 255), @p6='?' (Size = 15), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Users] ([CreatedBy], [CreatedDate], [Email], [IsDeleted], [Name], [Password], [Phone], [RoleId], [UpdatedBy], [UpdatedDate])
OUTPUT INSERTED.[UserId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2025-05-09 01:22:59.493 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (Size = 100), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (Size = 255), @p6='?' (Size = 15), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Users] ([CreatedBy], [CreatedDate], [Email], [IsDeleted], [Name], [Password], [Phone], [RoleId], [UpdatedBy], [UpdatedDate])
OUTPUT INSERTED.[UserId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2025-05-09 01:22:59.527 +05:30 [DBG] The foreign key property 'Users.UserId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:22:59.541 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:22:59.545 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 33ms reading results.
2025-05-09 01:22:59.551 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:22:59.553 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:22:59.564 +05:30 [DBG] An entity of type 'Users' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:22:59.571 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:22:59.573 +05:30 [INF] New user registered: harsh@gmail.com
2025-05-09 01:22:59.580 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:22:59.597 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:22:59.599 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:22:59.600 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:22:59.604 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:22:59.606 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:22:59.631 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem) in 2700.9254ms
2025-05-09 01:22:59.637 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 01:22:59.641 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:22:59.647 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:22:59.651 +05:30 [DBG] Disposed connection to database '' on server '' (4ms).
2025-05-09 01:22:59.653 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/register - 201 null application/json; charset=utf-8 2960.2292ms
2025-05-09 01:23:35.392 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/register - application/json 124
2025-05-09 01:23:35.410 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/register'
2025-05-09 01:23:35.423 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)' with route pattern 'api/Auth/register' is valid for the request path '/api/Auth/register'
2025-05-09 01:23:35.429 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 01:23:35.434 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:23:35.438 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 01:23:35.439 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 01:23:35.441 +05:30 [INF] Route matched with {action = "Register", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(InventoryManagementSystem.Models.Request.UserRegisterRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-09 01:23:35.444 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:23:35.446 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:23:35.448 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:23:35.455 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:23:35.457 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:23:35.460 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 01:23:35.464 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 01:23:35.471 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' ...
2025-05-09 01:23:35.473 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' using the name '' in request data ...
2025-05-09 01:23:35.475 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 01:23:35.477 +05:30 [DBG] Connection id "0HNCED75SPCGD", Request id "0HNCED75SPCGD:0000000B": started reading request body.
2025-05-09 01:23:35.478 +05:30 [DBG] Connection id "0HNCED75SPCGD", Request id "0HNCED75SPCGD:0000000B": done reading request body.
2025-05-09 01:23:35.480 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'
2025-05-09 01:23:35.482 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 01:23:35.486 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 01:23:35.488 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' ...
2025-05-09 01:23:35.490 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 01:23:35.509 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:23:35.520 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:23:35.529 +05:30 [DBG] Created DbConnection. (8ms).
2025-05-09 01:23:35.536 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:23:35.543 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:23:35.552 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:23:35.557 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-05-09 01:23:35.560 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-05-09 01:23:35.562 +05:30 [DBG] Executing DbCommand [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:23:35.573 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:23:35.591 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:23:35.602 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 10ms reading results.
2025-05-09 01:23:35.611 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:23:35.614 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 01:23:35.792 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Users.UserId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:23:35.796 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Users' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:23:35.799 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:23:35.807 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:23:35.809 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:23:35.811 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:23:35.813 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:23:35.815 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:23:35.816 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:23:35.823 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (8ms).
2025-05-09 01:23:35.824 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (Size = 100), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (Size = 255), @p6='?' (Size = 15), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Users] ([CreatedBy], [CreatedDate], [Email], [IsDeleted], [Name], [Password], [Phone], [RoleId], [UpdatedBy], [UpdatedDate])
OUTPUT INSERTED.[UserId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2025-05-09 01:23:35.836 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (Size = 100), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (Size = 255), @p6='?' (Size = 15), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Users] ([CreatedBy], [CreatedDate], [Email], [IsDeleted], [Name], [Password], [Phone], [RoleId], [UpdatedBy], [UpdatedDate])
OUTPUT INSERTED.[UserId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2025-05-09 01:23:35.846 +05:30 [DBG] The foreign key property 'Users.UserId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:23:35.849 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:23:35.855 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 8ms reading results.
2025-05-09 01:23:35.858 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:23:35.860 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:23:35.861 +05:30 [DBG] An entity of type 'Users' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:23:35.864 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:23:35.865 +05:30 [INF] New user registered: harshsoni@gmail.com
2025-05-09 01:23:35.872 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:23:35.875 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:23:35.876 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:23:35.877 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:23:35.878 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:23:35.879 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:23:35.882 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem) in 422.3282ms
2025-05-09 01:23:35.885 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 01:23:35.888 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:23:35.893 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:23:35.894 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 01:23:35.896 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/register - 201 null application/json; charset=utf-8 503.7892ms
2025-05-09 01:24:07.059 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/register - application/json 114
2025-05-09 01:24:07.087 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/register'
2025-05-09 01:24:07.090 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)' with route pattern 'api/Auth/register' is valid for the request path '/api/Auth/register'
2025-05-09 01:24:07.094 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 01:24:07.096 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:24:07.103 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 01:24:07.105 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 01:24:07.108 +05:30 [INF] Route matched with {action = "Register", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(InventoryManagementSystem.Models.Request.UserRegisterRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-09 01:24:07.113 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:24:07.122 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:24:07.124 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:24:07.127 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:24:07.129 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:24:07.132 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 01:24:07.141 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 01:24:07.143 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' ...
2025-05-09 01:24:07.145 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' using the name '' in request data ...
2025-05-09 01:24:07.152 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 01:24:07.154 +05:30 [DBG] Connection id "0HNCED75SPCGD", Request id "0HNCED75SPCGD:0000000D": started reading request body.
2025-05-09 01:24:07.157 +05:30 [DBG] Connection id "0HNCED75SPCGD", Request id "0HNCED75SPCGD:0000000D": done reading request body.
2025-05-09 01:24:07.159 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'
2025-05-09 01:24:07.161 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 01:24:07.168 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 01:24:07.171 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' ...
2025-05-09 01:24:07.175 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 01:24:07.276 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:24:07.280 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:24:07.281 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 01:24:07.283 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:24:07.285 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:24:07.292 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:24:07.293 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:24:07.295 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:24:07.296 +05:30 [DBG] Executing DbCommand [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:24:07.307 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:24:07.311 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:24:07.313 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 01:24:07.319 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:24:07.322 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (3ms).
2025-05-09 01:24:07.503 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Users.UserId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:24:07.508 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Users' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:24:07.510 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:24:07.512 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:24:07.514 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:24:07.517 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:24:07.521 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:24:07.523 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:24:07.524 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:24:07.526 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 01:24:07.528 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (Size = 100), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (Size = 255), @p6='?' (Size = 15), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Users] ([CreatedBy], [CreatedDate], [Email], [IsDeleted], [Name], [Password], [Phone], [RoleId], [UpdatedBy], [UpdatedDate])
OUTPUT INSERTED.[UserId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2025-05-09 01:24:07.539 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (Size = 100), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (Size = 255), @p6='?' (Size = 15), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Users] ([CreatedBy], [CreatedDate], [Email], [IsDeleted], [Name], [Password], [Phone], [RoleId], [UpdatedBy], [UpdatedDate])
OUTPUT INSERTED.[UserId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2025-05-09 01:24:07.544 +05:30 [DBG] The foreign key property 'Users.UserId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:24:07.546 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:24:07.548 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 4ms reading results.
2025-05-09 01:24:07.554 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:24:07.557 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 01:24:07.559 +05:30 [DBG] An entity of type 'Users' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:24:07.562 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:24:07.563 +05:30 [INF] New user registered: soni@gmail.com
2025-05-09 01:24:07.565 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:24:07.576 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:24:07.578 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:24:07.579 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:24:07.581 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:24:07.590 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:24:07.593 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem) in 462.0375ms
2025-05-09 01:24:07.597 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 01:24:07.600 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:24:07.619 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:24:07.624 +05:30 [DBG] Disposed connection to database '' on server '' (5ms).
2025-05-09 01:24:07.627 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/register - 201 null application/json; charset=utf-8 568.3438ms
2025-05-09 01:26:09.606 +05:30 [INF] Starting up the application...
2025-05-09 01:26:11.408 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-09 01:26:11.529 +05:30 [DBG] Hosting starting
2025-05-09 01:26:11.582 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-09 01:26:11.611 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-09 01:26:11.622 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-09 01:26:11.635 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-09 01:26:11.640 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-09 01:26:11.653 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-09 01:26:11.660 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 01:26:11.667 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-09 01:26:11.671 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 01:26:11.682 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-09 01:26:11.688 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-09 01:26:11.690 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-09 01:26:11.692 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-09 01:26:11.701 +05:30 [DBG] Middleware loaded
2025-05-09 01:26:11.703 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-09 01:26:11.705 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-09 01:26:11.830 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-09 01:26:12.032 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-09 01:26:12.035 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-09 01:26:12.036 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-09 01:26:12.037 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-09 01:26:12.038 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-09 01:26:12.039 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-09 01:26:12.088 +05:30 [DBG] Connection id "0HNCED9H2E2HM" accepted.
2025-05-09 01:26:12.096 +05:30 [DBG] Connection id "0HNCED9H2E2HM" started.
2025-05-09 01:26:12.131 +05:30 [DBG] Connection id "0HNCED9H2E2HM" received FIN.
2025-05-09 01:26:12.131 +05:30 [DBG] Connection id "0HNCED9H2E2HN" received FIN.
2025-05-09 01:26:12.146 +05:30 [DBG] Connection id "0HNCED9H2E2HN" accepted.
2025-05-09 01:26:12.152 +05:30 [DBG] Connection id "0HNCED9H2E2HN" started.
2025-05-09 01:26:12.159 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 01:26:12.159 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 01:26:12.212 +05:30 [DBG] Connection id "0HNCED9H2E2HN" stopped.
2025-05-09 01:26:12.212 +05:30 [DBG] Connection id "0HNCED9H2E2HM" stopped.
2025-05-09 01:26:12.223 +05:30 [DBG] Connection id "0HNCED9H2E2HN" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 01:26:12.226 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-09 01:26:12.226 +05:30 [DBG] Connection id "0HNCED9H2E2HM" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 01:26:12.237 +05:30 [INF] Hosting environment: Development
2025-05-09 01:26:12.246 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-09 01:26:12.249 +05:30 [DBG] Hosting started
2025-05-09 01:26:12.412 +05:30 [DBG] Connection id "0HNCED9H2E2HO" accepted.
2025-05-09 01:26:12.440 +05:30 [DBG] Connection id "0HNCED9H2E2HO" started.
2025-05-09 01:26:12.562 +05:30 [DBG] Connection 0HNCED9H2E2HO established using the following protocol: "Tls12"
2025-05-09 01:26:12.739 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-09 01:26:12.989 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-09 01:26:13.035 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-09 01:26:13.037 +05:30 [DBG] Request did not match any endpoints
2025-05-09 01:26:13.150 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-09 01:26:13.153 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-09 01:26:13.193 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-09 01:26:13.221 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-09 01:26:13.223 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-09 01:26:13.239 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-09 01:26:13.286 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-09 01:26:13.288 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 570.2533ms
2025-05-09 01:26:13.297 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 75.4786ms
2025-05-09 01:26:13.349 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 128.5385ms
2025-05-09 01:26:13.583 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-09 01:26:13.596 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-09 01:26:13.606 +05:30 [DBG] Request did not match any endpoints
2025-05-09 01:26:13.667 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 83.7608ms
2025-05-09 01:26:57.955 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/register - application/json 114
2025-05-09 01:26:57.984 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/register'
2025-05-09 01:26:57.992 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)' with route pattern 'api/Auth/register' is valid for the request path '/api/Auth/register'
2025-05-09 01:26:57.999 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 01:26:58.004 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:26:58.126 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 01:26:58.133 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 01:26:58.194 +05:30 [INF] Route matched with {action = "Register", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(InventoryManagementSystem.Models.Request.UserRegisterRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-09 01:26:58.203 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:26:58.205 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:26:58.206 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:26:58.210 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:26:58.220 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:26:58.224 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 01:26:58.386 +05:30 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-05-09 01:26:58.417 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 01:26:58.435 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' ...
2025-05-09 01:26:58.439 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' using the name '' in request data ...
2025-05-09 01:26:58.444 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 01:26:58.462 +05:30 [DBG] Connection id "0HNCED9H2E2HO", Request id "0HNCED9H2E2HO:00000009": started reading request body.
2025-05-09 01:26:58.465 +05:30 [DBG] Connection id "0HNCED9H2E2HO", Request id "0HNCED9H2E2HO:00000009": done reading request body.
2025-05-09 01:26:58.484 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'
2025-05-09 01:26:58.488 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 01:26:58.490 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 01:26:58.491 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' ...
2025-05-09 01:26:58.508 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 01:26:59.474 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:26:59.580 +05:30 [DBG] Compiling query expression: 
'DbSet<Users>()
    .Include(u => u.Role)
    .FirstOrDefault(u => u.Email == __email_0 && u.IsDeleted == False)'
2025-05-09 01:26:59.668 +05:30 [DBG] Including navigation: 'Users.Role'.
2025-05-09 01:27:00.008 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Users>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Users>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Users.UserId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Users.CreatedBy (int) Required, 1], [Property: Users.CreatedDate (DateTime) Required, 2], [Property: Users.Email (string) Required MaxLength(100), 3], [Property: Users.IsDeleted (bool) Required, 4], [Property: Users.Name (string) Required MaxLength(100), 5], [Property: Users.Password (string) Required MaxLength(255), 6], [Property: Users.Phone (string) Required MaxLength(15), 7], [Property: Users.RoleId (int) Required FK Index, 8], [Property: Users.UpdatedBy (int) Required, 9], [Property: Users.UpdatedDate (DateTime) Required, 10] }
                1 -> Dictionary<IProperty, int> { [Property: Roles.RoleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Roles.Name (string) Required MaxLength(50), 12] }
            SELECT TOP(1) u.UserId, u.CreatedBy, u.CreatedDate, u.Email, u.IsDeleted, u.Name, u.Password, u.Phone, u.RoleId, u.UpdatedBy, u.UpdatedDate, r.RoleId, r.Name
            FROM Users AS u
            INNER JOIN Roles AS r ON u.RoleId == r.RoleId
            WHERE (u.Email == @__email_0) && (u.IsDeleted == CAST(0 AS bit))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Users.UserId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Users.CreatedBy (int) Required, 1], [Property: Users.CreatedDate (DateTime) Required, 2], [Property: Users.Email (string) Required MaxLength(100), 3], [Property: Users.IsDeleted (bool) Required, 4], [Property: Users.Name (string) Required MaxLength(100), 5], [Property: Users.Password (string) Required MaxLength(255), 6], [Property: Users.Phone (string) Required MaxLength(15), 7], [Property: Users.RoleId (int) Required FK Index, 8], [Property: Users.UpdatedBy (int) Required, 9], [Property: Users.UpdatedDate (DateTime) Required, 10] }
                1 -> Dictionary<IProperty, int> { [Property: Roles.RoleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Roles.Name (string) Required MaxLength(50), 12] }
            SELECT TOP(1) u.UserId, u.CreatedBy, u.CreatedDate, u.Email, u.IsDeleted, u.Name, u.Password, u.Phone, u.RoleId, u.UpdatedBy, u.UpdatedDate, r.RoleId, r.Name
            FROM Users AS u
            INNER JOIN Roles AS r ON u.RoleId == r.RoleId
            WHERE (u.Email == @__email_0) && (u.IsDeleted == CAST(0 AS bit)), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Users entity;
            Roles entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Users instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Users);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Users.UserId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Users)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")]: 
                            {
                                return 
                                {
                                    Users instance;
                                    instance = new Users();
                                    instance.<UserId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CreatedDate>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Email>k__BackingField = dataReader.GetString(3);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    instance.<Password>k__BackingField = dataReader.GetString(6);
                                    instance.<Phone>k__BackingField = dataReader.GetString(7);
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(8);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt32(9);
                                    instance.<UpdatedDate>k__BackingField = dataReader.GetDateTime(10);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Users)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Roles instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Roles);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Roles.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(11) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Roles)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")]: 
                            {
                                return 
                                {
                                    Roles instance;
                                    instance = new Roles();
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(11);
                                    instance.<Name>k__BackingField = dataReader.GetString(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Roles)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Users, Users, Roles>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Users.Role (Roles) ToPrincipal Roles Inverse: Users | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users").FindNavigation("Role")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Roles.Users (ICollection<Users>) Collection ToDependent Users Inverse: Role | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindNavigation("Users")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Role>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Roles, ICollection<Users>, Users> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindNavigation("Users").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 01:27:00.121 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:27:00.145 +05:30 [DBG] Created DbConnection. (22ms).
2025-05-09 01:27:00.152 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:27:00.450 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:27:00.457 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:27:00.468 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2025-05-09 01:27:00.480 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (22ms).
2025-05-09 01:27:00.494 +05:30 [DBG] Executing DbCommand [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:27:00.601 +05:30 [INF] Executed DbCommand (108ms) [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:27:00.625 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:27:00.649 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 35ms reading results.
2025-05-09 01:27:00.656 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:27:00.667 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (11ms).
2025-05-09 01:27:00.898 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Users.UserId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:27:00.994 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Users' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:27:01.002 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:27:01.008 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:27:01.027 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:27:01.104 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:27:01.109 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:27:01.115 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:27:01.116 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:27:01.118 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 01:27:01.121 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (Size = 100), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (Size = 255), @p6='?' (Size = 15), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Users] ([CreatedBy], [CreatedDate], [Email], [IsDeleted], [Name], [Password], [Phone], [RoleId], [UpdatedBy], [UpdatedDate])
OUTPUT INSERTED.[UserId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2025-05-09 01:27:01.136 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (Size = 100), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (Size = 255), @p6='?' (Size = 15), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Users] ([CreatedBy], [CreatedDate], [Email], [IsDeleted], [Name], [Password], [Phone], [RoleId], [UpdatedBy], [UpdatedDate])
OUTPUT INSERTED.[UserId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2025-05-09 01:27:01.171 +05:30 [DBG] The foreign key property 'Users.UserId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:27:01.185 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:27:01.189 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 37ms reading results.
2025-05-09 01:27:01.193 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:27:01.202 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (8ms).
2025-05-09 01:27:01.219 +05:30 [DBG] An entity of type 'Users' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:27:01.227 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:27:01.238 +05:30 [INF] New user registered: dev@example.com
2025-05-09 01:27:01.250 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:27:01.266 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:27:01.269 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:27:01.270 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:27:01.272 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:27:01.274 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:27:01.294 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem) in 3068.7957ms
2025-05-09 01:27:01.301 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 01:27:01.307 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:27:01.339 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:27:01.346 +05:30 [DBG] Disposed connection to database '' on server '' (6ms).
2025-05-09 01:27:01.353 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/register - 201 null application/json; charset=utf-8 3397.7541ms
2025-05-09 01:28:47.512 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/login - application/json 57
2025-05-09 01:28:47.533 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/login'
2025-05-09 01:28:47.535 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-05-09 01:28:47.540 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 01:28:47.541 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:28:47.543 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 01:28:47.548 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 01:28:47.559 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(InventoryManagementSystem.Models.Request.UserLoginRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-09 01:28:47.562 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:28:47.564 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:28:47.565 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:28:47.567 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:28:47.569 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:28:47.572 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 01:28:47.575 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 01:28:47.578 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-09 01:28:47.580 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' using the name '' in request data ...
2025-05-09 01:28:47.581 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 01:28:47.584 +05:30 [DBG] Connection id "0HNCED9H2E2HO", Request id "0HNCED9H2E2HO:0000000B": started reading request body.
2025-05-09 01:28:47.586 +05:30 [DBG] Connection id "0HNCED9H2E2HO", Request id "0HNCED9H2E2HO:0000000B": done reading request body.
2025-05-09 01:28:47.589 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserLoginRequest'
2025-05-09 01:28:47.591 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 01:28:47.593 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 01:28:47.595 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-09 01:28:47.598 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 01:28:47.626 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:28:47.633 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:28:47.638 +05:30 [DBG] Created DbConnection. (4ms).
2025-05-09 01:28:47.640 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:28:47.649 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:28:47.655 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:28:47.656 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:28:47.657 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:28:47.658 +05:30 [DBG] Executing DbCommand [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:28:47.674 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:28:47.683 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Users' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:28:47.713 +05:30 [DBG] The navigation 'Users.Role' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:28:47.724 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Roles' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:28:47.732 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:28:47.734 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 55ms reading results.
2025-05-09 01:28:47.741 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:28:47.743 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 01:28:47.889 +05:30 [INF] User logged in successfully: harsh@gmail.com
2025-05-09 01:28:47.896 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:28:47.907 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:28:47.908 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:28:47.909 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:28:47.910 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:28:47.913 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.UserLoginResponce, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-09 01:28:47.926 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem) in 354.0829ms
2025-05-09 01:28:47.928 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 01:28:47.931 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:28:47.933 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:28:47.934 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 01:28:47.936 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/login - 200 null application/json; charset=utf-8 424.8693ms
2025-05-09 01:30:56.495 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Category/add-category - application/json 22
2025-05-09 01:30:56.509 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/add-category'
2025-05-09 01:30:56.511 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)' with route pattern 'api/Category/add-category' is valid for the request path '/api/Category/add-category'
2025-05-09 01:30:56.515 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 01:30:56.521 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:30:56.593 +05:30 [DBG] Successfully validated the token.
2025-05-09 01:30:56.600 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 01:30:56.608 +05:30 [DBG] Authorization was successful.
2025-05-09 01:30:56.610 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 01:30:56.619 +05:30 [INF] Route matched with {action = "AddCategory", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategory(InventoryManagementSystem.Models.Request.AddCategoryRequest) on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 01:30:56.624 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:30:56.626 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:30:56.633 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:30:56.635 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:30:56.636 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:30:56.637 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 01:30:56.641 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 01:30:56.645 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' ...
2025-05-09 01:30:56.649 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' using the name '' in request data ...
2025-05-09 01:30:56.651 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 01:30:56.653 +05:30 [DBG] Connection id "0HNCED9H2E2HO", Request id "0HNCED9H2E2HO:0000000D": started reading request body.
2025-05-09 01:30:56.654 +05:30 [DBG] Connection id "0HNCED9H2E2HO", Request id "0HNCED9H2E2HO:0000000D": done reading request body.
2025-05-09 01:30:56.657 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'
2025-05-09 01:30:56.658 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 01:30:56.660 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 01:30:56.661 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' ...
2025-05-09 01:30:56.667 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 01:30:56.761 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:30:56.766 +05:30 [DBG] Compiling query expression: 
'DbSet<Category>()
    .FirstOrDefault(c => c.Name == __name_0 && !(c.IsDeleted))'
2025-05-09 01:30:56.778 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Category>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Category>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
            SELECT TOP(1) c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
            FROM Category AS c
            WHERE (c.Name == @__name_0) && Not(c.IsDeleted)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
            SELECT TOP(1) c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
            FROM Category AS c
            WHERE (c.Name == @__name_0) && Not(c.IsDeleted), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Category instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Category);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.CategoryId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Category)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(0);
                                    instance.<ActiveStatus>k__BackingField = dataReader.GetBoolean(1);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(3);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(6);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 01:30:56.805 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:30:56.806 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 01:30:56.807 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:30:56.808 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:30:56.810 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:30:56.811 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:30:56.819 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-05-09 01:30:56.821 +05:30 [DBG] Executing DbCommand [Parameters=[@__name_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[Name] = @__name_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:30:56.836 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__name_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[Name] = @__name_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:30:56.839 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:30:56.841 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 01:30:56.842 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:30:56.844 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:30:56.856 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Category.CategoryId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:30:56.876 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:30:56.878 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:30:56.881 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:30:56.890 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:30:56.897 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:30:56.900 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:30:56.902 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:30:56.903 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 01:30:56.905 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:30:56.906 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Category] ([ActiveStatus], [CreatedAt], [CreatedBy], [IsDeleted], [Name], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[CategoryId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-05-09 01:30:56.916 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Category] ([ActiveStatus], [CreatedAt], [CreatedBy], [IsDeleted], [Name], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[CategoryId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-05-09 01:30:56.922 +05:30 [DBG] The foreign key property 'Category.CategoryId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:30:56.925 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:30:56.927 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 5ms reading results.
2025-05-09 01:30:56.930 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:30:56.936 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (6ms).
2025-05-09 01:30:56.940 +05:30 [DBG] An entity of type 'Category' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:30:56.941 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:30:56.943 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:30:56.948 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:30:56.951 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:30:56.954 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:30:56.955 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:30:56.958 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:30:56.960 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem) in 323.0195ms
2025-05-09 01:30:56.973 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 01:30:56.974 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:30:56.975 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:30:56.977 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 01:30:56.980 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Category/add-category - 201 null application/json; charset=utf-8 491.2532ms
2025-05-09 01:31:32.611 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Category/add-category - application/json 27
2025-05-09 01:31:32.647 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/add-category'
2025-05-09 01:31:32.657 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)' with route pattern 'api/Category/add-category' is valid for the request path '/api/Category/add-category'
2025-05-09 01:31:32.661 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 01:31:32.662 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:31:32.664 +05:30 [DBG] Successfully validated the token.
2025-05-09 01:31:32.665 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 01:31:32.671 +05:30 [DBG] Authorization was successful.
2025-05-09 01:31:32.673 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 01:31:32.676 +05:30 [INF] Route matched with {action = "AddCategory", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategory(InventoryManagementSystem.Models.Request.AddCategoryRequest) on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 01:31:32.679 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:31:32.681 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:31:32.686 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:31:32.688 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:31:32.690 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:31:32.691 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 01:31:32.696 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 01:31:32.699 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' ...
2025-05-09 01:31:32.702 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' using the name '' in request data ...
2025-05-09 01:31:32.704 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 01:31:32.705 +05:30 [DBG] Connection id "0HNCED9H2E2HO", Request id "0HNCED9H2E2HO:0000000F": started reading request body.
2025-05-09 01:31:32.706 +05:30 [DBG] Connection id "0HNCED9H2E2HO", Request id "0HNCED9H2E2HO:0000000F": done reading request body.
2025-05-09 01:31:32.708 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'
2025-05-09 01:31:32.711 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 01:31:32.714 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 01:31:32.718 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' ...
2025-05-09 01:31:32.720 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 01:31:32.722 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:31:32.725 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:31:32.726 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 01:31:32.727 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:31:32.729 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:31:32.731 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:31:32.732 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:31:32.735 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-09 01:31:32.736 +05:30 [DBG] Executing DbCommand [Parameters=[@__name_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[Name] = @__name_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:31:32.753 +05:30 [INF] Executed DbCommand (17ms) [Parameters=[@__name_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[Name] = @__name_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:31:32.759 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:31:32.762 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 01:31:32.763 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:31:32.764 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 01:31:32.767 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Category.CategoryId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:31:32.768 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:31:32.770 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:31:32.771 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:31:32.773 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:31:32.775 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:31:32.776 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:31:32.778 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:31:32.779 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 01:31:32.780 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:31:32.781 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Category] ([ActiveStatus], [CreatedAt], [CreatedBy], [IsDeleted], [Name], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[CategoryId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-05-09 01:31:32.789 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Category] ([ActiveStatus], [CreatedAt], [CreatedBy], [IsDeleted], [Name], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[CategoryId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-05-09 01:31:32.793 +05:30 [DBG] The foreign key property 'Category.CategoryId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:31:32.795 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:31:32.796 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 01:31:32.798 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:31:32.799 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:31:32.802 +05:30 [DBG] An entity of type 'Category' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:31:32.809 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:31:32.811 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:31:32.814 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:31:32.815 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:31:32.817 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:31:32.824 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:31:32.825 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:31:32.828 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem) in 137.1657ms
2025-05-09 01:31:32.839 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 01:31:32.843 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:31:32.844 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:31:32.845 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 01:31:32.847 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Category/add-category - 201 null application/json; charset=utf-8 236.1406ms
2025-05-09 01:32:02.251 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Category/add-category - application/json 27
2025-05-09 01:32:02.279 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/add-category'
2025-05-09 01:32:02.286 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)' with route pattern 'api/Category/add-category' is valid for the request path '/api/Category/add-category'
2025-05-09 01:32:02.292 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 01:32:02.293 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:32:02.297 +05:30 [DBG] Successfully validated the token.
2025-05-09 01:32:02.298 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 01:32:02.303 +05:30 [DBG] Authorization was successful.
2025-05-09 01:32:02.307 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 01:32:02.309 +05:30 [INF] Route matched with {action = "AddCategory", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategory(InventoryManagementSystem.Models.Request.AddCategoryRequest) on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 01:32:02.313 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:32:02.320 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:32:02.326 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:32:02.330 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:32:02.334 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:32:02.338 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 01:32:02.344 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 01:32:02.347 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' ...
2025-05-09 01:32:02.349 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' using the name '' in request data ...
2025-05-09 01:32:02.351 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 01:32:02.355 +05:30 [DBG] Connection id "0HNCED9H2E2HO", Request id "0HNCED9H2E2HO:00000011": started reading request body.
2025-05-09 01:32:02.356 +05:30 [DBG] Connection id "0HNCED9H2E2HO", Request id "0HNCED9H2E2HO:00000011": done reading request body.
2025-05-09 01:32:02.358 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'
2025-05-09 01:32:02.359 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 01:32:02.361 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 01:32:02.363 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' ...
2025-05-09 01:32:02.365 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 01:32:02.368 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:32:02.376 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:32:02.377 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 01:32:02.379 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:32:02.381 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:32:02.382 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:32:02.383 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:32:02.386 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-09 01:32:02.391 +05:30 [DBG] Executing DbCommand [Parameters=[@__name_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[Name] = @__name_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:32:02.395 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[Name] = @__name_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:32:02.398 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:32:02.402 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:32:02.406 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 7ms reading results.
2025-05-09 01:32:02.407 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:32:02.408 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:32:02.410 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:32:02.412 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:32:02.413 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:32:02.414 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:32:02.415 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:32:02.420 +05:30 [INF] Executing ConflictObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:32:02.422 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem) in 84.5053ms
2025-05-09 01:32:02.424 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 01:32:02.426 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:32:02.427 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:32:02.428 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 01:32:02.430 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Category/add-category - 409 null application/json; charset=utf-8 178.3223ms
2025-05-09 01:32:18.604 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Category/add-category - application/json 27
2025-05-09 01:32:18.608 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/add-category'
2025-05-09 01:32:18.611 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)' with route pattern 'api/Category/add-category' is valid for the request path '/api/Category/add-category'
2025-05-09 01:32:18.627 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 01:32:18.632 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:32:18.634 +05:30 [DBG] Successfully validated the token.
2025-05-09 01:32:18.636 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 01:32:18.640 +05:30 [DBG] Authorization was successful.
2025-05-09 01:32:18.642 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 01:32:18.646 +05:30 [INF] Route matched with {action = "AddCategory", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategory(InventoryManagementSystem.Models.Request.AddCategoryRequest) on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 01:32:18.655 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:32:18.658 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:32:18.666 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:32:18.672 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:32:18.678 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:32:18.681 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 01:32:18.683 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 01:32:18.685 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' ...
2025-05-09 01:32:18.688 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' using the name '' in request data ...
2025-05-09 01:32:18.696 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 01:32:18.697 +05:30 [DBG] Connection id "0HNCED9H2E2HO", Request id "0HNCED9H2E2HO:00000013": started reading request body.
2025-05-09 01:32:18.699 +05:30 [DBG] Connection id "0HNCED9H2E2HO", Request id "0HNCED9H2E2HO:00000013": done reading request body.
2025-05-09 01:32:18.701 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'
2025-05-09 01:32:18.708 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 01:32:18.711 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 01:32:18.713 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' ...
2025-05-09 01:32:18.716 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 01:32:18.719 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:32:18.725 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:32:18.726 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 01:32:18.727 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:32:18.729 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:32:18.730 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:32:18.732 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:32:18.733 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:32:18.739 +05:30 [DBG] Executing DbCommand [Parameters=[@__name_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[Name] = @__name_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:32:18.746 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__name_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[Name] = @__name_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:32:18.754 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:32:18.756 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 01:32:18.758 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:32:18.761 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 01:32:18.763 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Category.CategoryId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:32:18.771 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:32:18.773 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:32:18.774 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:32:18.775 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:32:18.776 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:32:18.778 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:32:18.780 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:32:18.788 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (7ms).
2025-05-09 01:32:18.790 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-05-09 01:32:18.791 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Category] ([ActiveStatus], [CreatedAt], [CreatedBy], [IsDeleted], [Name], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[CategoryId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-05-09 01:32:18.807 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Category] ([ActiveStatus], [CreatedAt], [CreatedBy], [IsDeleted], [Name], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[CategoryId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-05-09 01:32:18.813 +05:30 [DBG] The foreign key property 'Category.CategoryId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:32:18.817 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:32:18.822 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 8ms reading results.
2025-05-09 01:32:18.825 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:32:18.828 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 01:32:18.831 +05:30 [DBG] An entity of type 'Category' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:32:18.833 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:32:18.840 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:32:18.850 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:32:18.852 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:32:18.856 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:32:18.858 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:32:18.860 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:32:18.863 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem) in 181.6149ms
2025-05-09 01:32:18.865 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 01:32:18.866 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:32:18.869 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:32:18.872 +05:30 [DBG] Disposed connection to database '' on server '' (2ms).
2025-05-09 01:32:18.874 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Category/add-category - 201 null application/json; charset=utf-8 270.0984ms
2025-05-09 01:32:27.076 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Category/all - null null
2025-05-09 01:32:27.082 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/all'
2025-05-09 01:32:27.084 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)' with route pattern 'api/Category/all' is valid for the request path '/api/Category/all'
2025-05-09 01:32:27.094 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 01:32:27.098 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:32:27.098 +05:30 [DBG] Successfully validated the token.
2025-05-09 01:32:27.099 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 01:32:27.100 +05:30 [DBG] Authorization was successful.
2025-05-09 01:32:27.101 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 01:32:27.113 +05:30 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 01:32:27.116 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:32:27.118 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:32:27.121 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:32:27.132 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:32:27.136 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:32:27.140 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 01:32:27.142 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 01:32:27.148 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:32:27.161 +05:30 [DBG] Compiling query expression: 
'DbSet<Category>()
    .Where(c => !(c.IsDeleted))
    .OrderBy(c => c.Name)'
2025-05-09 01:32:27.183 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Category>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
        SELECT c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
        FROM Category AS c
        WHERE Not(c.IsDeleted)
        ORDER BY c.Name ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
        SELECT c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
        FROM Category AS c
        WHERE Not(c.IsDeleted)
        ORDER BY c.Name ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Category entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Category instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Category);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Category.CategoryId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Category)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]: 
                        {
                            return 
                            {
                                Category instance;
                                instance = new Category();
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(0);
                                instance.<ActiveStatus>k__BackingField = dataReader.GetBoolean(1);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CreatedBy>k__BackingField = dataReader.GetInt64(3);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                instance.<Name>k__BackingField = dataReader.GetString(5);
                                instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(6);
                                instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Category)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 01:32:27.227 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:32:27.228 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 01:32:27.229 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:32:27.231 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:32:27.232 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:32:27.233 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:32:27.235 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 01:32:27.244 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 01:32:27.252 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 01:32:27.260 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:32:27.263 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:32:27.265 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:32:27.266 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:32:27.267 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 7ms reading results.
2025-05-09 01:32:27.275 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:32:27.276 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:32:27.278 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:32:27.282 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:32:27.283 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:32:27.284 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:32:27.285 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:32:27.293 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Entity.Category, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:32:27.312 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem) in 171.9325ms
2025-05-09 01:32:27.314 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 01:32:27.315 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:32:27.316 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:32:27.318 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 01:32:27.321 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Category/all - 200 null application/json; charset=utf-8 245.7284ms
2025-05-09 01:35:55.574 +05:30 [INF] Starting up the application...
2025-05-09 01:35:56.676 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-09 01:35:56.760 +05:30 [DBG] Hosting starting
2025-05-09 01:35:56.801 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-09 01:35:56.818 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-09 01:35:56.829 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-09 01:35:56.834 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-09 01:35:56.839 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-09 01:35:56.848 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-09 01:35:56.853 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 01:35:56.863 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-09 01:35:56.867 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 01:35:56.878 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-09 01:35:56.882 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-09 01:35:56.885 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-09 01:35:56.890 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-09 01:35:56.896 +05:30 [DBG] Middleware loaded
2025-05-09 01:35:56.898 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-09 01:35:56.899 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-09 01:35:56.988 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-09 01:35:57.183 +05:30 [DBG] Connection id "0HNCEDEVEATVT" accepted.
2025-05-09 01:35:57.184 +05:30 [DBG] Connection id "0HNCEDEVEATVS" accepted.
2025-05-09 01:35:57.187 +05:30 [DBG] Connection id "0HNCEDEVEATVT" started.
2025-05-09 01:35:57.187 +05:30 [DBG] Connection id "0HNCEDEVEATVS" started.
2025-05-09 01:35:57.188 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-09 01:35:57.191 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-09 01:35:57.192 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-09 01:35:57.194 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-09 01:35:57.202 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-09 01:35:57.203 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-09 01:35:57.213 +05:30 [DBG] Connection id "0HNCEDEVEATVS" received FIN.
2025-05-09 01:35:57.213 +05:30 [DBG] Connection id "0HNCEDEVEATVT" received FIN.
2025-05-09 01:35:57.241 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 01:35:57.258 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 01:35:57.312 +05:30 [DBG] Connection id "0HNCEDEVEATVS" stopped.
2025-05-09 01:35:57.312 +05:30 [DBG] Connection id "0HNCEDEVEATVT" stopped.
2025-05-09 01:35:57.320 +05:30 [DBG] Connection id "0HNCEDEVEATVS" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 01:35:57.320 +05:30 [DBG] Connection id "0HNCEDEVEATVT" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 01:35:57.418 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-09 01:35:57.423 +05:30 [INF] Hosting environment: Development
2025-05-09 01:35:57.424 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-09 01:35:57.427 +05:30 [DBG] Hosting started
2025-05-09 01:35:57.473 +05:30 [DBG] Connection id "0HNCEDEVEATVU" accepted.
2025-05-09 01:35:57.481 +05:30 [DBG] Connection id "0HNCEDEVEATVU" started.
2025-05-09 01:35:57.563 +05:30 [DBG] Connection 0HNCEDEVEATVU established using the following protocol: "Tls12"
2025-05-09 01:35:57.701 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-09 01:35:57.844 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-09 01:35:57.870 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-09 01:35:57.872 +05:30 [DBG] Request did not match any endpoints
2025-05-09 01:35:57.959 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-09 01:35:57.962 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-09 01:35:58.024 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-09 01:35:58.027 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-09 01:35:58.027 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-09 01:35:58.029 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-09 01:35:58.057 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-09 01:35:58.057 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 373.6965ms
2025-05-09 01:35:58.062 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 34.8892ms
2025-05-09 01:35:58.110 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 82.6479ms
2025-05-09 01:35:58.255 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-09 01:35:58.257 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-09 01:35:58.258 +05:30 [DBG] Request did not match any endpoints
2025-05-09 01:35:58.279 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 23.575ms
2025-05-09 01:36:12.309 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Category/all - null null
2025-05-09 01:36:12.340 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/all'
2025-05-09 01:36:12.348 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)' with route pattern 'api/Category/all' is valid for the request path '/api/Category/all'
2025-05-09 01:36:12.360 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 01:36:12.365 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:36:12.527 +05:30 [DBG] Successfully validated the token.
2025-05-09 01:36:12.533 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 01:36:12.544 +05:30 [DBG] Authorization was successful.
2025-05-09 01:36:12.546 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 01:36:12.582 +05:30 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 01:36:12.593 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:36:12.596 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:36:12.598 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:36:12.600 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:36:12.602 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:36:12.611 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 01:36:12.758 +05:30 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-05-09 01:36:12.788 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 01:36:13.649 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:36:13.722 +05:30 [DBG] Compiling query expression: 
'DbSet<Category>()
    .Where(c => !(c.IsDeleted))
    .OrderBy(c => c.Name)'
2025-05-09 01:36:14.029 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Category>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
        SELECT c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
        FROM Category AS c
        WHERE Not(c.IsDeleted)
        ORDER BY c.Name ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
        SELECT c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
        FROM Category AS c
        WHERE Not(c.IsDeleted)
        ORDER BY c.Name ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Category entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Category instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Category);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Category.CategoryId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Category)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]: 
                        {
                            return 
                            {
                                Category instance;
                                instance = new Category();
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(0);
                                instance.<ActiveStatus>k__BackingField = dataReader.GetBoolean(1);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CreatedBy>k__BackingField = dataReader.GetInt64(3);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                instance.<Name>k__BackingField = dataReader.GetString(5);
                                instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(6);
                                instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Category)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 01:36:14.101 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:36:14.138 +05:30 [DBG] Created DbConnection. (32ms).
2025-05-09 01:36:14.148 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:36:14.446 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:36:14.451 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:36:14.463 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (9ms).
2025-05-09 01:36:14.472 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (21ms).
2025-05-09 01:36:14.480 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 01:36:14.530 +05:30 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 01:36:14.590 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:36:14.616 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:36:14.622 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:36:14.629 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:36:14.644 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 96ms reading results.
2025-05-09 01:36:14.648 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:36:14.661 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (12ms).
2025-05-09 01:36:14.677 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:36:14.696 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:36:14.698 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:36:14.700 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:36:14.703 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:36:14.706 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Entity.Category, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:36:14.744 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem) in 2128.9026ms
2025-05-09 01:36:14.747 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 01:36:14.754 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:36:14.763 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:36:14.772 +05:30 [DBG] Disposed connection to database '' on server '' (6ms).
2025-05-09 01:36:14.789 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Category/all - 200 null application/json; charset=utf-8 2479.7285ms
2025-05-09 01:37:31.675 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Product/add - application/json 144
2025-05-09 01:37:31.708 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/add'
2025-05-09 01:37:31.713 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)' with route pattern 'api/Product/add' is valid for the request path '/api/Product/add'
2025-05-09 01:37:31.716 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 01:37:31.717 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:37:31.720 +05:30 [DBG] Successfully validated the token.
2025-05-09 01:37:31.722 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 01:37:31.727 +05:30 [DBG] Authorization was successful.
2025-05-09 01:37:31.730 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 01:37:31.747 +05:30 [INF] Route matched with {action = "AddProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddProduct(InventoryManagementSystem.Models.Request.AddProductRequest) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 01:37:31.751 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:37:31.753 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:37:31.754 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:37:31.756 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:37:31.758 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:37:31.766 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 01:37:31.769 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 01:37:31.787 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' ...
2025-05-09 01:37:31.799 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' using the name '' in request data ...
2025-05-09 01:37:31.806 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 01:37:31.827 +05:30 [DBG] Connection id "0HNCEDEVEATVU", Request id "0HNCEDEVEATVU:0000000B": started reading request body.
2025-05-09 01:37:31.830 +05:30 [DBG] Connection id "0HNCEDEVEATVU", Request id "0HNCEDEVEATVU:0000000B": done reading request body.
2025-05-09 01:37:31.850 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.AddProductRequest'
2025-05-09 01:37:31.855 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 01:37:31.860 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 01:37:31.862 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' ...
2025-05-09 01:37:31.877 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 01:37:31.918 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:37:31.947 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Products.ProductId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:37:32.019 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:37:32.029 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:37:32.035 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:37:32.066 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:37:32.140 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:37:32.143 +05:30 [DBG] Created DbConnection. (3ms).
2025-05-09 01:37:32.144 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:37:32.148 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:37:32.154 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:37:32.156 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:37:32.164 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-05-09 01:37:32.169 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([AvailableQuantity], [CategoryId], [CreatedAt], [CreatedBy], [Description], [IsDeleted], [LastRestockAt], [MinimumRequiredQuantity], [Name], [Price], [ProductStatus], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[ProductId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12);
2025-05-09 01:37:32.228 +05:30 [INF] Executed DbCommand (61ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([AvailableQuantity], [CategoryId], [CreatedAt], [CreatedBy], [Description], [IsDeleted], [LastRestockAt], [MinimumRequiredQuantity], [Name], [Price], [ProductStatus], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[ProductId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12);
2025-05-09 01:37:32.244 +05:30 [DBG] The foreign key property 'Products.ProductId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:37:32.268 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:37:32.273 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 40ms reading results.
2025-05-09 01:37:32.280 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:37:32.288 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (7ms).
2025-05-09 01:37:32.303 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:37:32.313 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:37:32.321 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .FirstOrDefault(p => p.ProductId == __productId_0)'
2025-05-09 01:37:32.349 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Products>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Products>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__productId_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__productId_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Products entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Products instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Products);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Products)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                            {
                                return 
                                {
                                    Products instance;
                                    instance = new Products();
                                    instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                    instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Name>k__BackingField = dataReader.GetString(9);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                    instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Products)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 01:37:32.390 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:37:32.397 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:37:32.401 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:37:32.402 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:37:32.404 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:37:32.404 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 01:37:32.415 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 01:37:32.421 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:37:32.422 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 01:37:32.423 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:37:32.429 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (6ms).
2025-05-09 01:37:32.434 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:37:32.451 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:37:32.467 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:37:32.475 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:37:32.483 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:37:32.493 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:37:32.496 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:37:32.508 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:37:32.511 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:37:32.514 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:37:32.524 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (12ms).
2025-05-09 01:37:32.528 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 01:37:32.550 +05:30 [INF] Executed DbCommand (22ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 01:37:32.563 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:37:32.567 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:37:32.575 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 13ms reading results.
2025-05-09 01:37:32.580 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:37:32.585 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (5ms).
2025-05-09 01:37:32.597 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:37:32.606 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:37:32.612 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:37:32.628 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:37:32.634 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:37:32.641 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:37:32.646 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:37:32.656 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:37:32.663 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem) in 897.65ms
2025-05-09 01:37:32.670 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 01:37:32.680 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:37:32.684 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:37:32.687 +05:30 [DBG] Disposed connection to database '' on server '' (3ms).
2025-05-09 01:37:32.690 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Product/add - 201 null application/json; charset=utf-8 1014.876ms
2025-05-09 01:37:44.744 +05:30 [DBG] Connection id "0HNCEDEVEATVU" received FIN.
2025-05-09 01:37:44.748 +05:30 [DBG] Connection id "0HNCEDEVEATVU" is closed. The last processed stream ID was 11.
2025-05-09 01:37:44.749 +05:30 [DBG] The connection queue processing loop for 0HNCEDEVEATVU completed.
2025-05-09 01:37:44.752 +05:30 [DBG] Connection id "0HNCEDEVEATVU" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 01:37:44.771 +05:30 [DBG] Connection id "0HNCEDEVEATVU" stopped.
2025-05-09 01:39:24.114 +05:30 [DBG] Connection id "0HNCEDEVEATVV" accepted.
2025-05-09 01:39:24.131 +05:30 [DBG] Connection id "0HNCEDEVEATVV" started.
2025-05-09 01:39:24.194 +05:30 [DBG] Connection 0HNCEDEVEATVV established using the following protocol: "Tls12"
2025-05-09 01:39:24.204 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Product/add - application/json 135
2025-05-09 01:39:24.208 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/add'
2025-05-09 01:39:24.209 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)' with route pattern 'api/Product/add' is valid for the request path '/api/Product/add'
2025-05-09 01:39:24.212 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 01:39:24.215 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:39:24.220 +05:30 [DBG] Successfully validated the token.
2025-05-09 01:39:24.221 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 01:39:24.224 +05:30 [DBG] Authorization was successful.
2025-05-09 01:39:24.226 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 01:39:24.228 +05:30 [INF] Route matched with {action = "AddProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddProduct(InventoryManagementSystem.Models.Request.AddProductRequest) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 01:39:24.231 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:39:24.234 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:39:24.240 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:39:24.243 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:39:24.245 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:39:24.247 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 01:39:24.252 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 01:39:24.258 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' ...
2025-05-09 01:39:24.259 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' using the name '' in request data ...
2025-05-09 01:39:24.261 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 01:39:24.262 +05:30 [DBG] Connection id "0HNCEDEVEATVV", Request id "0HNCEDEVEATVV:00000001": started reading request body.
2025-05-09 01:39:24.263 +05:30 [DBG] Connection id "0HNCEDEVEATVV", Request id "0HNCEDEVEATVV:00000001": done reading request body.
2025-05-09 01:39:24.264 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.AddProductRequest'
2025-05-09 01:39:24.268 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 01:39:24.269 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 01:39:24.272 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' ...
2025-05-09 01:39:24.274 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 01:39:24.331 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:39:24.338 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Products.ProductId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:39:24.344 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:39:24.347 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:39:24.352 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:39:24.355 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:39:24.356 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:39:24.357 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 01:39:24.357 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:39:24.359 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:39:24.360 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:39:24.360 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 01:39:24.362 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:39:24.363 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([AvailableQuantity], [CategoryId], [CreatedAt], [CreatedBy], [Description], [IsDeleted], [LastRestockAt], [MinimumRequiredQuantity], [Name], [Price], [ProductStatus], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[ProductId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12);
2025-05-09 01:39:24.380 +05:30 [INF] Executed DbCommand (17ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([AvailableQuantity], [CategoryId], [CreatedAt], [CreatedBy], [Description], [IsDeleted], [LastRestockAt], [MinimumRequiredQuantity], [Name], [Price], [ProductStatus], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[ProductId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12);
2025-05-09 01:39:24.385 +05:30 [DBG] The foreign key property 'Products.ProductId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:39:24.397 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:39:24.399 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 14ms reading results.
2025-05-09 01:39:24.406 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:39:24.408 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:39:24.411 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:39:24.412 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:39:24.419 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:39:24.424 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:39:24.425 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:39:24.426 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 01:39:24.427 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:39:24.428 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 01:39:24.431 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 01:39:24.436 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:39:24.437 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 01:39:24.439 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:39:24.441 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:39:24.442 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:39:24.444 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:39:24.445 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:39:24.446 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:39:24.446 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:39:24.447 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:39:24.448 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:39:24.454 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:39:24.456 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:39:24.457 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:39:24.458 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:39:24.459 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 01:39:24.467 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 01:39:24.471 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:39:24.473 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:39:24.474 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 01:39:24.475 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:39:24.476 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 01:39:24.477 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:39:24.479 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:39:24.480 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:39:24.483 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:39:24.485 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:39:24.486 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:39:24.487 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:39:24.489 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:39:24.491 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem) in 244.2642ms
2025-05-09 01:39:24.493 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 01:39:24.494 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:39:24.495 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:39:24.496 +05:30 [DBG] Disposed connection to database '' on server '' (0ms).
2025-05-09 01:39:24.497 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Product/add - 201 null application/json; charset=utf-8 293.7342ms
2025-05-09 01:42:44.041 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Product/get-all-products - null null
2025-05-09 01:42:44.060 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/get-all-products'
2025-05-09 01:42:44.061 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)' with route pattern 'api/Product/get-all-products' is valid for the request path '/api/Product/get-all-products'
2025-05-09 01:42:44.062 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 01:42:44.066 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:42:44.067 +05:30 [DBG] Successfully validated the token.
2025-05-09 01:42:44.068 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 01:42:44.069 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 01:42:44.073 +05:30 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 01:42:44.076 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:42:44.077 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:42:44.079 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:42:44.084 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:42:44.085 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:42:44.088 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 01:42:44.095 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 01:42:44.103 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:42:44.108 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .Where(p => !(p.IsDeleted))'
2025-05-09 01:42:44.118 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Products>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
        SELECT p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
        FROM Products AS p
        WHERE Not(p.IsDeleted)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
        SELECT p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
        FROM Products AS p
        WHERE Not(p.IsDeleted), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Products entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Products instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Products);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Products)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                        {
                            return 
                            {
                                Products instance;
                                instance = new Products();
                                instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                instance.<Name>k__BackingField = dataReader.GetString(9);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Products)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 01:42:44.152 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:42:44.154 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 01:42:44.155 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:42:44.157 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:42:44.159 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:42:44.162 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:42:44.166 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-05-09 01:42:44.170 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:42:44.206 +05:30 [INF] Executed DbCommand (36ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:42:44.212 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:42:44.219 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:42:44.222 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:42:44.223 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 12ms reading results.
2025-05-09 01:42:44.225 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:42:44.226 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:42:44.234 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:42:44.239 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:42:44.240 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:42:44.241 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:42:44.241 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:42:44.244 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.ProductResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:42:44.257 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem) in 169.528ms
2025-05-09 01:42:44.259 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 01:42:44.261 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:42:44.262 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:42:44.269 +05:30 [DBG] Disposed connection to database '' on server '' (6ms).
2025-05-09 01:42:44.272 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Product/get-all-products - 200 null application/json; charset=utf-8 231.3108ms
2025-05-09 01:44:49.019 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Vendor/add - application/json 220
2025-05-09 01:44:49.032 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Vendor/add'
2025-05-09 01:44:49.034 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem)' with route pattern 'api/Vendor/add' is valid for the request path '/api/Vendor/add'
2025-05-09 01:44:49.060 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem)'
2025-05-09 01:44:49.062 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:44:49.064 +05:30 [DBG] Successfully validated the token.
2025-05-09 01:44:49.066 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 01:44:49.077 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem)'
2025-05-09 01:44:49.085 +05:30 [INF] Route matched with {action = "AddVendor", controller = "Vendor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddVendor(InventoryManagementSystem.Models.Request.VendorRequest) on controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem).
2025-05-09 01:44:49.094 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:44:49.097 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:44:49.100 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:44:49.102 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:44:49.103 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:44:49.105 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 01:44:49.110 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 01:44:49.112 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest' ...
2025-05-09 01:44:49.114 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest' using the name '' in request data ...
2025-05-09 01:44:49.120 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 01:44:49.130 +05:30 [DBG] Connection id "0HNCEDEVEATVV", Request id "0HNCEDEVEATVV:00000005": started reading request body.
2025-05-09 01:44:49.137 +05:30 [DBG] Connection id "0HNCEDEVEATVV", Request id "0HNCEDEVEATVV:00000005": done reading request body.
2025-05-09 01:44:49.142 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.VendorRequest'
2025-05-09 01:44:49.153 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest'.
2025-05-09 01:44:49.158 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest'.
2025-05-09 01:44:49.159 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest' ...
2025-05-09 01:44:49.165 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest'.
2025-05-09 01:44:49.171 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:44:49.181 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'VendorDetails.VendorId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:44:49.236 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'VendorDetails' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:44:49.242 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:44:49.243 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:44:49.251 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:44:49.255 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:44:49.260 +05:30 [DBG] Created DbConnection. (5ms).
2025-05-09 01:44:49.261 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:44:49.263 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:44:49.264 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:44:49.264 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 01:44:49.266 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:44:49.267 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 500), @p1='?' (Size = 50), @p2='?' (Size = 50), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int64), @p5='?' (Size = 100), @p6='?' (DbType = Boolean), @p7='?' (Size = 50), @p8='?' (Size = 15), @p9='?' (Size = 10), @p10='?' (Size = 50), @p11='?' (Size = 100), @p12='?' (DbType = DateTime2), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [VendorDetails] ([Address], [City], [Country], [CreatedAt], [CreatedBy], [Email], [IsDeleted], [Name], [Phone], [Pincode], [State], [StoreName], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[VendorId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13);
2025-05-09 01:44:49.304 +05:30 [INF] Executed DbCommand (37ms) [Parameters=[@p0='?' (Size = 500), @p1='?' (Size = 50), @p2='?' (Size = 50), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int64), @p5='?' (Size = 100), @p6='?' (DbType = Boolean), @p7='?' (Size = 50), @p8='?' (Size = 15), @p9='?' (Size = 10), @p10='?' (Size = 50), @p11='?' (Size = 100), @p12='?' (DbType = DateTime2), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [VendorDetails] ([Address], [City], [Country], [CreatedAt], [CreatedBy], [Email], [IsDeleted], [Name], [Phone], [Pincode], [State], [StoreName], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[VendorId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13);
2025-05-09 01:44:49.320 +05:30 [DBG] The foreign key property 'VendorDetails.VendorId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:44:49.326 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:44:49.327 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 8ms reading results.
2025-05-09 01:44:49.329 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:44:49.330 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:44:49.332 +05:30 [DBG] An entity of type 'VendorDetails' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:44:49.334 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:44:49.335 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:44:49.338 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:44:49.340 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:44:49.344 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:44:49.347 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:44:49.351 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:44:49.353 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem) in 248.3132ms
2025-05-09 01:44:49.361 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem)'
2025-05-09 01:44:49.363 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:44:49.368 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:44:49.369 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 01:44:49.371 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Vendor/add - 201 null application/json; charset=utf-8 352.4913ms
2025-05-09 01:47:12.509 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/StockPurchaseOrder/PurchaseOrder - application/json 246
2025-05-09 01:47:12.524 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/PurchaseOrder'
2025-05-09 01:47:12.526 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/PurchaseOrder' is valid for the request path '/api/StockPurchaseOrder/PurchaseOrder'
2025-05-09 01:47:12.534 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 01:47:12.539 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:47:12.541 +05:30 [DBG] Successfully validated the token.
2025-05-09 01:47:12.544 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 01:47:12.546 +05:30 [DBG] Authorization was successful.
2025-05-09 01:47:12.547 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 01:47:12.558 +05:30 [INF] Route matched with {action = "CreateStockPurchaseOrder", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateStockPurchaseOrder(InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 01:47:12.571 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:47:12.578 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:47:12.583 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:47:12.599 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:47:12.611 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:47:12.614 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 01:47:12.624 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 01:47:12.628 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' ...
2025-05-09 01:47:12.631 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' using the name '' in request data ...
2025-05-09 01:47:12.642 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 01:47:12.646 +05:30 [DBG] Connection id "0HNCEDEVEATVV", Request id "0HNCEDEVEATVV:00000007": started reading request body.
2025-05-09 01:47:12.648 +05:30 [DBG] Connection id "0HNCEDEVEATVV", Request id "0HNCEDEVEATVV:00000007": done reading request body.
2025-05-09 01:47:12.658 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'
2025-05-09 01:47:12.663 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 01:47:12.668 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 01:47:12.670 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' ...
2025-05-09 01:47:12.674 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 01:47:12.687 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:47:12.698 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StockPurchaseOrders.StockPurchaseOrderId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:47:12.742 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:47:12.758 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StockPurchaseOrderItems.StockPurchaseOrderItemId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:47:12.782 +05:30 [DBG] The navigation 'StockPurchaseOrderItems.StockPurchaseOrder' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:47:12.807 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:47:12.810 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StockPurchaseOrderItems.StockPurchaseOrderItemId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:47:12.812 +05:30 [DBG] The navigation 'StockPurchaseOrderItems.StockPurchaseOrder' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:47:12.813 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:47:12.815 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:47:12.816 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:47:12.831 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:47:12.857 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:47:12.861 +05:30 [DBG] Created DbConnection. (3ms).
2025-05-09 01:47:12.862 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:47:12.863 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:47:12.867 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-09 01:47:12.887 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-09 01:47:12.890 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:47:12.892 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:47:12.895 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-09 01:47:12.897 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int64), @p8='?' (DbType = DateTime2), @p9='?' (DbType = Int32), @p10='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StockPurchaseOrders] ([NumberOfItem], [OrderRecivedDate], [OrderStatusId], [PaymentDate], [PaymentMethodId], [PaymentStatusId], [PaymentTypeId], [PurchaseBy], [PurchaseDate], [TotalNumberOfQuantity], [TotalPrice], [UpdatedAt], [UpdatedBy], [VendorId])
OUTPUT INSERTED.[StockPurchaseOrderId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13);
2025-05-09 01:47:12.925 +05:30 [INF] Executed DbCommand (28ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int64), @p8='?' (DbType = DateTime2), @p9='?' (DbType = Int32), @p10='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StockPurchaseOrders] ([NumberOfItem], [OrderRecivedDate], [OrderStatusId], [PaymentDate], [PaymentMethodId], [PaymentStatusId], [PaymentTypeId], [PurchaseBy], [PurchaseDate], [TotalNumberOfQuantity], [TotalPrice], [UpdatedAt], [UpdatedBy], [VendorId])
OUTPUT INSERTED.[StockPurchaseOrderId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13);
2025-05-09 01:47:12.931 +05:30 [DBG] The foreign key property 'StockPurchaseOrders.StockPurchaseOrderId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:47:12.940 +05:30 [DBG] The foreign key property 'StockPurchaseOrderItems.StockPurchaseOrderId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:47:12.944 +05:30 [DBG] The foreign key property 'StockPurchaseOrderItems.StockPurchaseOrderId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:47:12.946 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:47:12.947 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 18ms reading results.
2025-05-09 01:47:12.953 +05:30 [DBG] Executing 2 update commands as a batch.
2025-05-09 01:47:12.958 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:47:12.959 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:47:12.960 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:47:12.961 +05:30 [DBG] Executing DbCommand [Parameters=[@p14='?' (DbType = Int32), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Int64), @p17='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p18='?' (DbType = Int32), @p19='?' (DbType = Int64), @p20='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p21='?' (DbType = Int32), @p22='?' (DbType = DateTime2), @p23='?' (DbType = Int64), @p24='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p25='?' (DbType = Int32), @p26='?' (DbType = Int64), @p27='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [StockPurchaseOrderItems] USING (
VALUES (@p14, @p15, @p16, @p17, @p18, @p19, @p20, 0),
(@p21, @p22, @p23, @p24, @p25, @p26, @p27, 1)) AS i ([OrderItemStatus], [OrderRecivedDate], [ProductId], [ProductPrice], [Quantity], [StockPurchaseOrderId], [TotalPrice], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([OrderItemStatus], [OrderRecivedDate], [ProductId], [ProductPrice], [Quantity], [StockPurchaseOrderId], [TotalPrice])
VALUES (i.[OrderItemStatus], i.[OrderRecivedDate], i.[ProductId], i.[ProductPrice], i.[Quantity], i.[StockPurchaseOrderId], i.[TotalPrice])
OUTPUT INSERTED.[StockPurchaseOrderItemId], i._Position;
2025-05-09 01:47:12.981 +05:30 [INF] Executed DbCommand (20ms) [Parameters=[@p14='?' (DbType = Int32), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Int64), @p17='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p18='?' (DbType = Int32), @p19='?' (DbType = Int64), @p20='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p21='?' (DbType = Int32), @p22='?' (DbType = DateTime2), @p23='?' (DbType = Int64), @p24='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p25='?' (DbType = Int32), @p26='?' (DbType = Int64), @p27='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [StockPurchaseOrderItems] USING (
VALUES (@p14, @p15, @p16, @p17, @p18, @p19, @p20, 0),
(@p21, @p22, @p23, @p24, @p25, @p26, @p27, 1)) AS i ([OrderItemStatus], [OrderRecivedDate], [ProductId], [ProductPrice], [Quantity], [StockPurchaseOrderId], [TotalPrice], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([OrderItemStatus], [OrderRecivedDate], [ProductId], [ProductPrice], [Quantity], [StockPurchaseOrderId], [TotalPrice])
VALUES (i.[OrderItemStatus], i.[OrderRecivedDate], i.[ProductId], i.[ProductPrice], i.[Quantity], i.[StockPurchaseOrderId], i.[TotalPrice])
OUTPUT INSERTED.[StockPurchaseOrderItemId], i._Position;
2025-05-09 01:47:13.007 +05:30 [DBG] The foreign key property 'StockPurchaseOrderItems.StockPurchaseOrderItemId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:47:13.011 +05:30 [DBG] The foreign key property 'StockPurchaseOrderItems.StockPurchaseOrderItemId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:47:13.013 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:47:13.015 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 9ms reading results.
2025-05-09 01:47:13.021 +05:30 [DBG] Committing transaction.
2025-05-09 01:47:13.026 +05:30 [DBG] Committed transaction.
2025-05-09 01:47:13.030 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:47:13.032 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:47:13.037 +05:30 [DBG] Disposing transaction.
2025-05-09 01:47:13.040 +05:30 [DBG] An entity of type 'StockPurchaseOrders' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:47:13.045 +05:30 [DBG] An entity of type 'StockPurchaseOrderItems' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:47:13.048 +05:30 [DBG] An entity of type 'StockPurchaseOrderItems' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:47:13.051 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 3 entities written to the database.
2025-05-09 01:47:13.054 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:47:13.059 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:47:13.060 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:47:13.063 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:47:13.064 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:47:13.066 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:47:13.069 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem) in 454.3222ms
2025-05-09 01:47:13.072 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 01:47:13.076 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:47:13.079 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:47:13.080 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 01:47:13.082 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/StockPurchaseOrder/PurchaseOrder - 201 null application/json; charset=utf-8 572.3421ms
2025-05-09 01:49:02.578 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order - application/json 62
2025-05-09 01:49:02.619 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/update-stock-order'
2025-05-09 01:49:02.621 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/update-stock-order' is valid for the request path '/api/StockPurchaseOrder/update-stock-order'
2025-05-09 01:49:02.628 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 01:49:02.633 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:49:02.635 +05:30 [DBG] Successfully validated the token.
2025-05-09 01:49:02.635 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 01:49:02.637 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 01:49:02.644 +05:30 [INF] Route matched with {action = "UpdateStockPurchaseOrderStatus", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateStockPurchaseOrderStatus(InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 01:49:02.651 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:49:02.654 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:49:02.656 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:49:02.659 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:49:02.660 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:49:02.664 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 01:49:02.666 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 01:49:02.669 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 01:49:02.671 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' using the name '' in request data ...
2025-05-09 01:49:02.672 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 01:49:02.676 +05:30 [DBG] Connection id "0HNCEDEVEATVV", Request id "0HNCEDEVEATVV:00000009": started reading request body.
2025-05-09 01:49:02.677 +05:30 [DBG] Connection id "0HNCEDEVEATVV", Request id "0HNCEDEVEATVV:00000009": done reading request body.
2025-05-09 01:49:02.682 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'
2025-05-09 01:49:02.684 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 01:49:02.685 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 01:49:02.687 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 01:49:02.692 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 01:49:11.962 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:49:11.970 +05:30 [DBG] Compiling query expression: 
'DbSet<StockPurchaseOrders>()
    .Include(o => o.StockPurchaseOrderItems)
    .FirstOrDefault(o => o.StockPurchaseOrderId == __orderId_0)'
2025-05-09 01:49:11.982 +05:30 [DBG] Including navigation: 'StockPurchaseOrders.StockPurchaseOrderItems'.
2025-05-09 01:49:12.087 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<StockPurchaseOrders>(
    asyncEnumerable: SingleQueryingEnumerable.Create<StockPurchaseOrders>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrders.StockPurchaseOrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: StockPurchaseOrders.NumberOfItem (int) Required, 1], [Property: StockPurchaseOrders.OrderRecivedDate (DateTime) Required, 2], [Property: StockPurchaseOrders.OrderStatusId (int) Required FK Index, 3], [Property: StockPurchaseOrders.PaymentDate (DateTime) Required, 4], [Property: StockPurchaseOrders.PaymentMethodId (int) Required FK Index, 5], [Property: StockPurchaseOrders.PaymentStatusId (int) Required FK Index, 6], [Property: StockPurchaseOrders.PaymentTypeId (int) Required FK Index, 7], [Property: StockPurchaseOrders.PurchaseBy (long) Required, 8], [Property: StockPurchaseOrders.PurchaseDate (DateTime) Required, 9], [Property: StockPurchaseOrders.TotalNumberOfQuantity (int) Required, 10], [Property: StockPurchaseOrders.TotalPrice (decimal) Required, 11], [Property: StockPurchaseOrders.UpdatedAt (DateTime) Required, 12], [Property: StockPurchaseOrders.UpdatedBy (long) Required FK Index, 13], [Property: StockPurchaseOrders.VendorId (long) Required FK Index, 14] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrderItems.StockPurchaseOrderItemId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: StockPurchaseOrderItems.OrderItemStatus (int) Required FK Index, 16], [Property: StockPurchaseOrderItems.OrderRecivedDate (DateTime) Required, 17], [Property: StockPurchaseOrderItems.ProductId (long) Required FK Index, 18], [Property: StockPurchaseOrderItems.ProductPrice (decimal) Required, 19], [Property: StockPurchaseOrderItems.Quantity (int) Required, 20], [Property: StockPurchaseOrderItems.StockPurchaseOrderId (long) Required FK Index, 21], [Property: StockPurchaseOrderItems.TotalPrice (decimal) Required, 22] }
                3 -> 15
            SELECT s1.StockPurchaseOrderId, s1.NumberOfItem, s1.OrderRecivedDate, s1.OrderStatusId, s1.PaymentDate, s1.PaymentMethodId, s1.PaymentStatusId, s1.PaymentTypeId, s1.PurchaseBy, s1.PurchaseDate, s1.TotalNumberOfQuantity, s1.TotalPrice, s1.UpdatedAt, s1.UpdatedBy, s1.VendorId, s0.StockPurchaseOrderItemId, s0.OrderItemStatus, s0.OrderRecivedDate, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.StockPurchaseOrderId, s0.TotalPrice
            FROM 
            (
                SELECT TOP(1) s.StockPurchaseOrderId, s.NumberOfItem, s.OrderRecivedDate, s.OrderStatusId, s.PaymentDate, s.PaymentMethodId, s.PaymentStatusId, s.PaymentTypeId, s.PurchaseBy, s.PurchaseDate, s.TotalNumberOfQuantity, s.TotalPrice, s.UpdatedAt, s.UpdatedBy, s.VendorId
                FROM StockPurchaseOrders AS s
                WHERE s.StockPurchaseOrderId == @__orderId_0
            ) AS s1
            LEFT JOIN StockPurchaseOrderItems AS s0 ON s1.StockPurchaseOrderId == s0.StockPurchaseOrderId
            ORDER BY s1.StockPurchaseOrderId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrders.StockPurchaseOrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: StockPurchaseOrders.NumberOfItem (int) Required, 1], [Property: StockPurchaseOrders.OrderRecivedDate (DateTime) Required, 2], [Property: StockPurchaseOrders.OrderStatusId (int) Required FK Index, 3], [Property: StockPurchaseOrders.PaymentDate (DateTime) Required, 4], [Property: StockPurchaseOrders.PaymentMethodId (int) Required FK Index, 5], [Property: StockPurchaseOrders.PaymentStatusId (int) Required FK Index, 6], [Property: StockPurchaseOrders.PaymentTypeId (int) Required FK Index, 7], [Property: StockPurchaseOrders.PurchaseBy (long) Required, 8], [Property: StockPurchaseOrders.PurchaseDate (DateTime) Required, 9], [Property: StockPurchaseOrders.TotalNumberOfQuantity (int) Required, 10], [Property: StockPurchaseOrders.TotalPrice (decimal) Required, 11], [Property: StockPurchaseOrders.UpdatedAt (DateTime) Required, 12], [Property: StockPurchaseOrders.UpdatedBy (long) Required FK Index, 13], [Property: StockPurchaseOrders.VendorId (long) Required FK Index, 14] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrderItems.StockPurchaseOrderItemId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: StockPurchaseOrderItems.OrderItemStatus (int) Required FK Index, 16], [Property: StockPurchaseOrderItems.OrderRecivedDate (DateTime) Required, 17], [Property: StockPurchaseOrderItems.ProductId (long) Required FK Index, 18], [Property: StockPurchaseOrderItems.ProductPrice (decimal) Required, 19], [Property: StockPurchaseOrderItems.Quantity (int) Required, 20], [Property: StockPurchaseOrderItems.StockPurchaseOrderId (long) Required FK Index, 21], [Property: StockPurchaseOrderItems.TotalPrice (decimal) Required, 22] }
                3 -> 15
            SELECT s1.StockPurchaseOrderId, s1.NumberOfItem, s1.OrderRecivedDate, s1.OrderStatusId, s1.PaymentDate, s1.PaymentMethodId, s1.PaymentStatusId, s1.PaymentTypeId, s1.PurchaseBy, s1.PurchaseDate, s1.TotalNumberOfQuantity, s1.TotalPrice, s1.UpdatedAt, s1.UpdatedBy, s1.VendorId, s0.StockPurchaseOrderItemId, s0.OrderItemStatus, s0.OrderRecivedDate, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.StockPurchaseOrderId, s0.TotalPrice
            FROM 
            (
                SELECT TOP(1) s.StockPurchaseOrderId, s.NumberOfItem, s.OrderRecivedDate, s.OrderStatusId, s.PaymentDate, s.PaymentMethodId, s.PaymentStatusId, s.PaymentTypeId, s.PurchaseBy, s.PurchaseDate, s.TotalNumberOfQuantity, s.TotalPrice, s.UpdatedAt, s.UpdatedBy, s.VendorId
                FROM StockPurchaseOrders AS s
                WHERE s.StockPurchaseOrderId == @__orderId_0
            ) AS s1
            LEFT JOIN StockPurchaseOrderItems AS s0 ON s1.StockPurchaseOrderId == s0.StockPurchaseOrderId
            ORDER BY s1.StockPurchaseOrderId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                StockPurchaseOrders entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    StockPurchaseOrders instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(StockPurchaseOrders);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: StockPurchaseOrders.StockPurchaseOrderId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (StockPurchaseOrders)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")]: 
                                {
                                    return 
                                    {
                                        StockPurchaseOrders instance;
                                        instance = new StockPurchaseOrders();
                                        instance.<StockPurchaseOrderId>k__BackingField = dataReader.GetInt64(0);
                                        instance.<NumberOfItem>k__BackingField = dataReader.GetInt32(1);
                                        instance.<OrderRecivedDate>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<OrderStatusId>k__BackingField = dataReader.GetInt32(3);
                                        instance.<PaymentDate>k__BackingField = dataReader.GetDateTime(4);
                                        instance.<PaymentMethodId>k__BackingField = dataReader.GetInt32(5);
                                        instance.<PaymentStatusId>k__BackingField = dataReader.GetInt32(6);
                                        instance.<PaymentTypeId>k__BackingField = dataReader.GetInt32(7);
                                        instance.<PurchaseBy>k__BackingField = dataReader.GetInt64(8);
                                        instance.<PurchaseDate>k__BackingField = dataReader.GetDateTime(9);
                                        instance.<TotalNumberOfQuantity>k__BackingField = dataReader.GetInt32(10);
                                        instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(11);
                                        instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                        instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                        instance.<VendorId>k__BackingField = dataReader.GetInt64(14);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(StockPurchaseOrders)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<StockPurchaseOrders, StockPurchaseOrders>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (StockPurchaseOrders)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(long?)dataReader.GetInt64(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(long?)dataReader.GetInt64(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: StockPurchaseOrders.StockPurchaseOrderItems (ICollection<StockPurchaseOrderItems>) Collection ToDependent StockPurchaseOrderItems Inverse: StockPurchaseOrder | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<StockPurchaseOrders, ICollection<StockPurchaseOrderItems>, StockPurchaseOrderItems> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<StockPurchaseOrders, StockPurchaseOrderItems>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(long?)dataReader.GetInt64(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(long?)dataReader.GetInt64(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(15) ? default(int?) : (int?)dataReader.GetInt32(15) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (long)left == (long)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (long)left == (long)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    StockPurchaseOrderItems entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        StockPurchaseOrderItems instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(StockPurchaseOrderItems);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: StockPurchaseOrderItems.StockPurchaseOrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(15) ? default(object) : (object)dataReader.GetInt32(15) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (StockPurchaseOrderItems)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")]: 
                                    {
                                        return 
                                        {
                                            StockPurchaseOrderItems instance;
                                            instance = new StockPurchaseOrderItems();
                                            instance.<StockPurchaseOrderItemId>k__BackingField = dataReader.IsDBNull(15) ? default(int) : dataReader.GetInt32(15);
                                            instance.<OrderItemStatus>k__BackingField = dataReader.IsDBNull(16) ? default(int) : dataReader.GetInt32(16);
                                            instance.<OrderRecivedDate>k__BackingField = dataReader.IsDBNull(17) ? default(DateTime) : dataReader.GetDateTime(17);
                                            instance.<ProductId>k__BackingField = dataReader.IsDBNull(18) ? default(long) : dataReader.GetInt64(18);
                                            instance.<ProductPrice>k__BackingField = dataReader.IsDBNull(19) ? default(decimal) : dataReader.GetDecimal(19);
                                            instance.<Quantity>k__BackingField = dataReader.IsDBNull(20) ? default(int) : dataReader.GetInt32(20);
                                            instance.<StockPurchaseOrderId>k__BackingField = dataReader.IsDBNull(21) ? default(long) : dataReader.GetInt64(21);
                                            instance.<TotalPrice>k__BackingField = dataReader.IsDBNull(22) ? default(decimal) : dataReader.GetDecimal(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(StockPurchaseOrderItems)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: StockPurchaseOrderItems.StockPurchaseOrder (StockPurchaseOrders) ToPrincipal StockPurchaseOrders Inverse: StockPurchaseOrderItems | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems").FindNavigation("StockPurchaseOrder")], 
                fixup: (namelessParameter{9}, namelessParameter{10}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<StockPurchaseOrders, ICollection<StockPurchaseOrderItems>, StockPurchaseOrderItems> | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{10}, 
                        forMaterialization: True);
                    return namelessParameter{10}.<StockPurchaseOrder>k__BackingField = namelessParameter{9};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (StockPurchaseOrders)(resultContext.Values[0]) : default(StockPurchaseOrders);
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 01:49:12.155 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:49:12.161 +05:30 [DBG] Created DbConnection. (5ms).
2025-05-09 01:49:12.169 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.172 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.174 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:49:12.175 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:49:12.183 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-05-09 01:49:12.191 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId]
    FROM [StockPurchaseOrders] AS [s]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN [StockPurchaseOrderItems] AS [s0] ON [s1].[StockPurchaseOrderId] = [s0].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId]
2025-05-09 01:49:12.214 +05:30 [INF] Executed DbCommand (23ms) [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId]
    FROM [StockPurchaseOrders] AS [s]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN [StockPurchaseOrderItems] AS [s0] ON [s1].[StockPurchaseOrderId] = [s0].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId]
2025-05-09 01:49:12.219 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.226 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.227 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.229 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.230 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 10ms reading results.
2025-05-09 01:49:12.231 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.232 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 01:49:12.234 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.235 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.236 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:49:12.237 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 01:49:12.240 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 01:49:12.243 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 01:49:12.249 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 01:49:12.253 +05:30 [DBG] The navigation 'StockPurchaseOrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.260 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.263 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.270 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 17ms reading results.
2025-05-09 01:49:12.273 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.275 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 01:49:12.280 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.290 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:49:12.298 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:49:12.303 +05:30 [DBG] The foreign key property 'Products.UpdatedBy' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:49:12.307 +05:30 [DBG] The unchanged property 'StockPurchaseOrders.OrderRecivedDate' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:49:12.318 +05:30 [DBG] An entity of type 'StockPurchaseOrders' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.322 +05:30 [DBG] The unchanged property 'StockPurchaseOrders.OrderStatusId' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:49:12.325 +05:30 [DBG] The foreign key property 'StockPurchaseOrders.OrderStatusId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:49:12.327 +05:30 [DBG] The unchanged property 'StockPurchaseOrders.PaymentDate' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:49:12.328 +05:30 [DBG] The unchanged property 'StockPurchaseOrders.UpdatedAt' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:49:12.329 +05:30 [DBG] The unchanged property 'StockPurchaseOrderItems.OrderItemStatus' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:49:12.330 +05:30 [DBG] An entity of type 'StockPurchaseOrderItems' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.332 +05:30 [DBG] The foreign key property 'StockPurchaseOrderItems.OrderItemStatus' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:49:12.337 +05:30 [DBG] The unchanged property 'StockPurchaseOrderItems.OrderRecivedDate' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:49:12.338 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:49:12.342 +05:30 [DBG] Executing 3 update commands as a batch.
2025-05-09 01:49:12.343 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.344 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.345 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-09 01:49:12.346 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-09 01:49:12.347 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:49:12.348 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 01:49:12.349 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:49:12.351 +05:30 [DBG] Executing DbCommand [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p16='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (DbType = DateTime2), @p21='?' (DbType = Int64), @p17='?' (DbType = DateTime2), @p18='?' (DbType = Int32), @p19='?' (DbType = DateTime2), @p20='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
UPDATE [StockPurchaseOrderItems] SET [OrderItemStatus] = @p14, [OrderRecivedDate] = @p15
OUTPUT 1
WHERE [StockPurchaseOrderItemId] = @p16;
UPDATE [StockPurchaseOrders] SET [OrderRecivedDate] = @p17, [OrderStatusId] = @p18, [PaymentDate] = @p19, [UpdatedAt] = @p20
OUTPUT 1
WHERE [StockPurchaseOrderId] = @p21;
2025-05-09 01:49:12.370 +05:30 [INF] Executed DbCommand (19ms) [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p16='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (DbType = DateTime2), @p21='?' (DbType = Int64), @p17='?' (DbType = DateTime2), @p18='?' (DbType = Int32), @p19='?' (DbType = DateTime2), @p20='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
UPDATE [StockPurchaseOrderItems] SET [OrderItemStatus] = @p14, [OrderRecivedDate] = @p15
OUTPUT 1
WHERE [StockPurchaseOrderItemId] = @p16;
UPDATE [StockPurchaseOrders] SET [OrderRecivedDate] = @p17, [OrderStatusId] = @p18, [PaymentDate] = @p19, [UpdatedAt] = @p20
OUTPUT 1
WHERE [StockPurchaseOrderId] = @p21;
2025-05-09 01:49:12.380 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.381 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 01:49:12.382 +05:30 [DBG] Committing transaction.
2025-05-09 01:49:12.387 +05:30 [DBG] Committed transaction.
2025-05-09 01:49:12.392 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.396 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (3ms).
2025-05-09 01:49:12.401 +05:30 [DBG] Disposing transaction.
2025-05-09 01:49:12.403 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.404 +05:30 [DBG] An entity of type 'StockPurchaseOrders' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.406 +05:30 [DBG] An entity of type 'StockPurchaseOrderItems' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.410 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 3 entities written to the database.
2025-05-09 01:49:12.412 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.414 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.416 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:49:12.422 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-05-09 01:49:12.427 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-05-09 01:49:12.429 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 01:49:12.432 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 01:49:12.443 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.446 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 01:49:12.452 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.459 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (7ms).
2025-05-09 01:49:12.471 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.480 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.481 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.484 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:49:12.492 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:49:12.497 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:49:12.500 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.501 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.503 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:49:12.504 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:49:12.506 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:49:12.507 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 01:49:12.522 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 01:49:12.526 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:49:12.530 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.536 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 10ms reading results.
2025-05-09 01:49:12.539 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.545 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (6ms).
2025-05-09 01:49:12.557 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.564 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:49:12.566 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.568 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.571 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:49:12.574 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-05-09 01:49:12.576 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-05-09 01:49:12.578 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 01:49:12.585 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 01:49:12.594 +05:30 [DBG] The navigation 'StockPurchaseOrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.597 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.599 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.600 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 6ms reading results.
2025-05-09 01:49:12.601 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.602 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 01:49:12.603 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.604 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:49:12.605 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:49:12.606 +05:30 [DBG] The foreign key property 'Products.UpdatedBy' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:49:12.607 +05:30 [DBG] The unchanged property 'StockPurchaseOrderItems.OrderItemStatus' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:49:12.608 +05:30 [DBG] An entity of type 'StockPurchaseOrderItems' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.610 +05:30 [DBG] The foreign key property 'StockPurchaseOrderItems.OrderItemStatus' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:49:12.611 +05:30 [DBG] The unchanged property 'StockPurchaseOrderItems.OrderRecivedDate' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:49:12.613 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:49:12.614 +05:30 [DBG] Executing 2 update commands as a batch.
2025-05-09 01:49:12.615 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.617 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.618 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-09 01:49:12.620 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-09 01:49:12.620 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:49:12.622 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:49:12.623 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:49:12.624 +05:30 [DBG] Executing DbCommand [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p16='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
UPDATE [StockPurchaseOrderItems] SET [OrderItemStatus] = @p14, [OrderRecivedDate] = @p15
OUTPUT 1
WHERE [StockPurchaseOrderItemId] = @p16;
2025-05-09 01:49:12.633 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p16='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
UPDATE [StockPurchaseOrderItems] SET [OrderItemStatus] = @p14, [OrderRecivedDate] = @p15
OUTPUT 1
WHERE [StockPurchaseOrderItemId] = @p16;
2025-05-09 01:49:12.648 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.649 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 01:49:12.654 +05:30 [DBG] Committing transaction.
2025-05-09 01:49:12.656 +05:30 [DBG] Committed transaction.
2025-05-09 01:49:12.656 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.657 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 01:49:12.664 +05:30 [DBG] Disposing transaction.
2025-05-09 01:49:12.670 +05:30 [DBG] An entity of type 'StockPurchaseOrderItems' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.677 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.680 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 2 entities written to the database.
2025-05-09 01:49:12.681 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.682 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.683 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:49:12.684 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 01:49:12.685 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:49:12.689 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 01:49:12.696 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 01:49:12.700 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.704 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 4ms reading results.
2025-05-09 01:49:12.705 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.706 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:49:12.708 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.709 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.710 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.711 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:49:12.712 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:49:12.713 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:49:12.715 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.722 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.722 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:49:12.723 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 01:49:12.724 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:49:12.725 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 01:49:12.728 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 01:49:12.738 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:49:12.739 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.740 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 01:49:12.742 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.742 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 01:49:12.744 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.746 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:49:12.752 +05:30 [DBG] An entity of type 'StockPurchaseOrders' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.758 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:49:12.759 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:49:12.761 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:49:12.766 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.770 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.771 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:49:12.771 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 01:49:12.772 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:49:12.773 +05:30 [DBG] Executing DbCommand [Parameters=[@p14='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int64), @p8='?' (DbType = DateTime2), @p9='?' (DbType = Int32), @p10='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [StockPurchaseOrders] SET [NumberOfItem] = @p0, [OrderRecivedDate] = @p1, [OrderStatusId] = @p2, [PaymentDate] = @p3, [PaymentMethodId] = @p4, [PaymentStatusId] = @p5, [PaymentTypeId] = @p6, [PurchaseBy] = @p7, [PurchaseDate] = @p8, [TotalNumberOfQuantity] = @p9, [TotalPrice] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12, [VendorId] = @p13
OUTPUT 1
WHERE [StockPurchaseOrderId] = @p14;
2025-05-09 01:49:12.789 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[@p14='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int64), @p8='?' (DbType = DateTime2), @p9='?' (DbType = Int32), @p10='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [StockPurchaseOrders] SET [NumberOfItem] = @p0, [OrderRecivedDate] = @p1, [OrderStatusId] = @p2, [PaymentDate] = @p3, [PaymentMethodId] = @p4, [PaymentStatusId] = @p5, [PaymentTypeId] = @p6, [PurchaseBy] = @p7, [PurchaseDate] = @p8, [TotalNumberOfQuantity] = @p9, [TotalPrice] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12, [VendorId] = @p13
OUTPUT 1
WHERE [StockPurchaseOrderId] = @p14;
2025-05-09 01:49:12.801 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.805 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-09 01:49:12.806 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.807 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 01:49:12.810 +05:30 [DBG] An entity of type 'StockPurchaseOrders' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:49:12.813 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:49:12.818 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:49:12.821 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:49:12.821 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:49:12.822 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:49:12.823 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:49:12.831 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:49:12.834 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem) in 10170.1667ms
2025-05-09 01:49:12.846 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 01:49:12.849 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:49:12.850 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:49:12.851 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 01:49:12.853 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order - 200 null application/json; charset=utf-8 10275.158ms
2025-05-09 01:50:19.568 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/StockPurchaseOrder/1 - null null
2025-05-09 01:50:19.579 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/1'
2025-05-09 01:50:19.583 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/{orderId}' is valid for the request path '/api/StockPurchaseOrder/1'
2025-05-09 01:50:19.586 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)'
2025-05-09 01:50:19.587 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:50:19.589 +05:30 [DBG] Successfully validated the token.
2025-05-09 01:50:19.591 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 01:50:19.593 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)'
2025-05-09 01:50:19.602 +05:30 [INF] Route matched with {action = "GetStockPurchaseOrderDetails", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStockPurchaseOrderDetails(Int64) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 01:50:19.606 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:50:19.608 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:50:19.609 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:50:19.611 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:50:19.612 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:50:19.615 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 01:50:19.618 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 01:50:19.619 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' ...
2025-05-09 01:50:19.621 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' using the name 'orderId' in request data ...
2025-05-09 01:50:19.623 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-09 01:50:19.624 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-09 01:50:19.626 +05:30 [DBG] Attempting to validate the bound parameter 'orderId' of type 'System.Int64' ...
2025-05-09 01:50:19.627 +05:30 [DBG] Done attempting to validate the bound parameter 'orderId' of type 'System.Int64'.
2025-05-09 01:50:19.633 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:50:19.638 +05:30 [DBG] Compiling query expression: 
'DbSet<StockPurchaseOrders>()
    .Include(o => o.VendorDetails)
    .Include(o => o.StockPurchaseOrderItems)
    .ThenInclude(i => i.Product)
    .FirstOrDefault(o => o.StockPurchaseOrderId == __orderId_0)'
2025-05-09 01:50:19.643 +05:30 [DBG] Including navigation: 'StockPurchaseOrders.VendorDetails'.
2025-05-09 01:50:19.645 +05:30 [DBG] Including navigation: 'StockPurchaseOrders.StockPurchaseOrderItems'.
2025-05-09 01:50:19.649 +05:30 [DBG] Including navigation: 'StockPurchaseOrderItems.Product'.
2025-05-09 01:50:19.678 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<StockPurchaseOrders>(
    asyncEnumerable: SingleQueryingEnumerable.Create<StockPurchaseOrders>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrders.StockPurchaseOrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: StockPurchaseOrders.NumberOfItem (int) Required, 1], [Property: StockPurchaseOrders.OrderRecivedDate (DateTime) Required, 2], [Property: StockPurchaseOrders.OrderStatusId (int) Required FK Index, 3], [Property: StockPurchaseOrders.PaymentDate (DateTime) Required, 4], [Property: StockPurchaseOrders.PaymentMethodId (int) Required FK Index, 5], [Property: StockPurchaseOrders.PaymentStatusId (int) Required FK Index, 6], [Property: StockPurchaseOrders.PaymentTypeId (int) Required FK Index, 7], [Property: StockPurchaseOrders.PurchaseBy (long) Required, 8], [Property: StockPurchaseOrders.PurchaseDate (DateTime) Required, 9], [Property: StockPurchaseOrders.TotalNumberOfQuantity (int) Required, 10], [Property: StockPurchaseOrders.TotalPrice (decimal) Required, 11], [Property: StockPurchaseOrders.UpdatedAt (DateTime) Required, 12], [Property: StockPurchaseOrders.UpdatedBy (long) Required FK Index, 13], [Property: StockPurchaseOrders.VendorId (long) Required FK Index, 14] }
                1 -> Dictionary<IProperty, int> { [Property: VendorDetails.VendorId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: VendorDetails.Address (string) Required MaxLength(500), 16], [Property: VendorDetails.City (string) Required MaxLength(50), 17], [Property: VendorDetails.Country (string) Required MaxLength(50), 18], [Property: VendorDetails.CreatedAt (DateTime) Required, 19], [Property: VendorDetails.CreatedBy (long) Required FK Index, 20], [Property: VendorDetails.Email (string) Required MaxLength(100), 21], [Property: VendorDetails.IsDeleted (bool) Required, 22], [Property: VendorDetails.Name (string) Required MaxLength(50), 23], [Property: VendorDetails.Phone (string) Required MaxLength(15), 24], [Property: VendorDetails.Pincode (string) Required MaxLength(10), 25], [Property: VendorDetails.State (string) Required MaxLength(50), 26], [Property: VendorDetails.StoreName (string) Required MaxLength(100), 27], [Property: VendorDetails.UpdatedAt (DateTime) Required, 28], [Property: VendorDetails.UpdatedBy (long) Required, 29] }
                2 -> 0
                3 -> 15
                4 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrderItems.StockPurchaseOrderItemId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 30], [Property: StockPurchaseOrderItems.OrderItemStatus (int) Required FK Index, 31], [Property: StockPurchaseOrderItems.OrderRecivedDate (DateTime) Required, 32], [Property: StockPurchaseOrderItems.ProductId (long) Required FK Index, 33], [Property: StockPurchaseOrderItems.ProductPrice (decimal) Required, 34], [Property: StockPurchaseOrderItems.Quantity (int) Required, 35], [Property: StockPurchaseOrderItems.StockPurchaseOrderId (long) Required FK Index, 36], [Property: StockPurchaseOrderItems.TotalPrice (decimal) Required, 37] }
                5 -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 38], [Property: Products.AvailableQuantity (int) Required, 39], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 40], [Property: Products.CreatedAt (DateTime) Required, 41], [Property: Products.CreatedBy (long) Required FK Index, 42], [Property: Products.Description (string) MaxLength(225), 43], [Property: Products.IsDeleted (bool) Required, 44], [Property: Products.LastRestockAt (DateTime) Required, 45], [Property: Products.MinimumRequiredQuantity (int) Required, 46], [Property: Products.Name (string) Required MaxLength(100), 47], [Property: Products.Price (decimal) Required, 48], [Property: Products.ProductStatus (int) Required, 49], [Property: Products.UpdatedAt (DateTime) Required, 50], [Property: Products.UpdatedBy (long) Required FK Index, 51] }
                6 -> 30
                7 -> 38
            SELECT s1.StockPurchaseOrderId, s1.NumberOfItem, s1.OrderRecivedDate, s1.OrderStatusId, s1.PaymentDate, s1.PaymentMethodId, s1.PaymentStatusId, s1.PaymentTypeId, s1.PurchaseBy, s1.PurchaseDate, s1.TotalNumberOfQuantity, s1.TotalPrice, s1.UpdatedAt, s1.UpdatedBy, s1.VendorId, s1.VendorId0, s1.Address, s1.City, s1.Country, s1.CreatedAt, s1.CreatedBy, s1.Email, s1.IsDeleted, s1.Name, s1.Phone, s1.Pincode, s1.State, s1.StoreName, s1.UpdatedAt0, s1.UpdatedBy0, s2.StockPurchaseOrderItemId, s2.OrderItemStatus, s2.OrderRecivedDate, s2.ProductId, s2.ProductPrice, s2.Quantity, s2.StockPurchaseOrderId, s2.TotalPrice, s2.ProductId0, s2.AvailableQuantity, s2.CategoryId, s2.CreatedAt, s2.CreatedBy, s2.Description, s2.IsDeleted, s2.LastRestockAt, s2.MinimumRequiredQuantity, s2.Name, s2.Price, s2.ProductStatus, s2.UpdatedAt, s2.UpdatedBy
            FROM 
            (
                SELECT TOP(1) s.StockPurchaseOrderId, s.NumberOfItem, s.OrderRecivedDate, s.OrderStatusId, s.PaymentDate, s.PaymentMethodId, s.PaymentStatusId, s.PaymentTypeId, s.PurchaseBy, s.PurchaseDate, s.TotalNumberOfQuantity, s.TotalPrice, s.UpdatedAt, s.UpdatedBy, s.VendorId, v.VendorId AS VendorId0, v.Address, v.City, v.Country, v.CreatedAt, v.CreatedBy, v.Email, v.IsDeleted, v.Name, v.Phone, v.Pincode, v.State, v.StoreName, v.UpdatedAt AS UpdatedAt0, v.UpdatedBy AS UpdatedBy0
                FROM StockPurchaseOrders AS s
                INNER JOIN VendorDetails AS v ON s.VendorId == v.VendorId
                WHERE s.StockPurchaseOrderId == @__orderId_0
            ) AS s1
            LEFT JOIN 
            (
                SELECT s0.StockPurchaseOrderItemId, s0.OrderItemStatus, s0.OrderRecivedDate, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.StockPurchaseOrderId, s0.TotalPrice, p.ProductId AS ProductId0, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
                FROM StockPurchaseOrderItems AS s0
                INNER JOIN Products AS p ON s0.ProductId == p.ProductId
            ) AS s2 ON s1.StockPurchaseOrderId == s2.StockPurchaseOrderId
            ORDER BY s1.StockPurchaseOrderId ASC, s1.VendorId0 ASC, s2.StockPurchaseOrderItemId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrders.StockPurchaseOrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: StockPurchaseOrders.NumberOfItem (int) Required, 1], [Property: StockPurchaseOrders.OrderRecivedDate (DateTime) Required, 2], [Property: StockPurchaseOrders.OrderStatusId (int) Required FK Index, 3], [Property: StockPurchaseOrders.PaymentDate (DateTime) Required, 4], [Property: StockPurchaseOrders.PaymentMethodId (int) Required FK Index, 5], [Property: StockPurchaseOrders.PaymentStatusId (int) Required FK Index, 6], [Property: StockPurchaseOrders.PaymentTypeId (int) Required FK Index, 7], [Property: StockPurchaseOrders.PurchaseBy (long) Required, 8], [Property: StockPurchaseOrders.PurchaseDate (DateTime) Required, 9], [Property: StockPurchaseOrders.TotalNumberOfQuantity (int) Required, 10], [Property: StockPurchaseOrders.TotalPrice (decimal) Required, 11], [Property: StockPurchaseOrders.UpdatedAt (DateTime) Required, 12], [Property: StockPurchaseOrders.UpdatedBy (long) Required FK Index, 13], [Property: StockPurchaseOrders.VendorId (long) Required FK Index, 14] }
                1 -> Dictionary<IProperty, int> { [Property: VendorDetails.VendorId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: VendorDetails.Address (string) Required MaxLength(500), 16], [Property: VendorDetails.City (string) Required MaxLength(50), 17], [Property: VendorDetails.Country (string) Required MaxLength(50), 18], [Property: VendorDetails.CreatedAt (DateTime) Required, 19], [Property: VendorDetails.CreatedBy (long) Required FK Index, 20], [Property: VendorDetails.Email (string) Required MaxLength(100), 21], [Property: VendorDetails.IsDeleted (bool) Required, 22], [Property: VendorDetails.Name (string) Required MaxLength(50), 23], [Property: VendorDetails.Phone (string) Required MaxLength(15), 24], [Property: VendorDetails.Pincode (string) Required MaxLength(10), 25], [Property: VendorDetails.State (string) Required MaxLength(50), 26], [Property: VendorDetails.StoreName (string) Required MaxLength(100), 27], [Property: VendorDetails.UpdatedAt (DateTime) Required, 28], [Property: VendorDetails.UpdatedBy (long) Required, 29] }
                2 -> 0
                3 -> 15
                4 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrderItems.StockPurchaseOrderItemId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 30], [Property: StockPurchaseOrderItems.OrderItemStatus (int) Required FK Index, 31], [Property: StockPurchaseOrderItems.OrderRecivedDate (DateTime) Required, 32], [Property: StockPurchaseOrderItems.ProductId (long) Required FK Index, 33], [Property: StockPurchaseOrderItems.ProductPrice (decimal) Required, 34], [Property: StockPurchaseOrderItems.Quantity (int) Required, 35], [Property: StockPurchaseOrderItems.StockPurchaseOrderId (long) Required FK Index, 36], [Property: StockPurchaseOrderItems.TotalPrice (decimal) Required, 37] }
                5 -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 38], [Property: Products.AvailableQuantity (int) Required, 39], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 40], [Property: Products.CreatedAt (DateTime) Required, 41], [Property: Products.CreatedBy (long) Required FK Index, 42], [Property: Products.Description (string) MaxLength(225), 43], [Property: Products.IsDeleted (bool) Required, 44], [Property: Products.LastRestockAt (DateTime) Required, 45], [Property: Products.MinimumRequiredQuantity (int) Required, 46], [Property: Products.Name (string) Required MaxLength(100), 47], [Property: Products.Price (decimal) Required, 48], [Property: Products.ProductStatus (int) Required, 49], [Property: Products.UpdatedAt (DateTime) Required, 50], [Property: Products.UpdatedBy (long) Required FK Index, 51] }
                6 -> 30
                7 -> 38
            SELECT s1.StockPurchaseOrderId, s1.NumberOfItem, s1.OrderRecivedDate, s1.OrderStatusId, s1.PaymentDate, s1.PaymentMethodId, s1.PaymentStatusId, s1.PaymentTypeId, s1.PurchaseBy, s1.PurchaseDate, s1.TotalNumberOfQuantity, s1.TotalPrice, s1.UpdatedAt, s1.UpdatedBy, s1.VendorId, s1.VendorId0, s1.Address, s1.City, s1.Country, s1.CreatedAt, s1.CreatedBy, s1.Email, s1.IsDeleted, s1.Name, s1.Phone, s1.Pincode, s1.State, s1.StoreName, s1.UpdatedAt0, s1.UpdatedBy0, s2.StockPurchaseOrderItemId, s2.OrderItemStatus, s2.OrderRecivedDate, s2.ProductId, s2.ProductPrice, s2.Quantity, s2.StockPurchaseOrderId, s2.TotalPrice, s2.ProductId0, s2.AvailableQuantity, s2.CategoryId, s2.CreatedAt, s2.CreatedBy, s2.Description, s2.IsDeleted, s2.LastRestockAt, s2.MinimumRequiredQuantity, s2.Name, s2.Price, s2.ProductStatus, s2.UpdatedAt, s2.UpdatedBy
            FROM 
            (
                SELECT TOP(1) s.StockPurchaseOrderId, s.NumberOfItem, s.OrderRecivedDate, s.OrderStatusId, s.PaymentDate, s.PaymentMethodId, s.PaymentStatusId, s.PaymentTypeId, s.PurchaseBy, s.PurchaseDate, s.TotalNumberOfQuantity, s.TotalPrice, s.UpdatedAt, s.UpdatedBy, s.VendorId, v.VendorId AS VendorId0, v.Address, v.City, v.Country, v.CreatedAt, v.CreatedBy, v.Email, v.IsDeleted, v.Name, v.Phone, v.Pincode, v.State, v.StoreName, v.UpdatedAt AS UpdatedAt0, v.UpdatedBy AS UpdatedBy0
                FROM StockPurchaseOrders AS s
                INNER JOIN VendorDetails AS v ON s.VendorId == v.VendorId
                WHERE s.StockPurchaseOrderId == @__orderId_0
            ) AS s1
            LEFT JOIN 
            (
                SELECT s0.StockPurchaseOrderItemId, s0.OrderItemStatus, s0.OrderRecivedDate, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.StockPurchaseOrderId, s0.TotalPrice, p.ProductId AS ProductId0, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
                FROM StockPurchaseOrderItems AS s0
                INNER JOIN Products AS p ON s0.ProductId == p.ProductId
            ) AS s2 ON s1.StockPurchaseOrderId == s2.StockPurchaseOrderId
            ORDER BY s1.StockPurchaseOrderId ASC, s1.VendorId0 ASC, s2.StockPurchaseOrderItemId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                StockPurchaseOrders entity;
                VendorDetails entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    StockPurchaseOrders instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(StockPurchaseOrders);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: StockPurchaseOrders.StockPurchaseOrderId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (StockPurchaseOrders)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")]: 
                                {
                                    return 
                                    {
                                        StockPurchaseOrders instance;
                                        instance = new StockPurchaseOrders();
                                        instance.<StockPurchaseOrderId>k__BackingField = dataReader.GetInt64(0);
                                        instance.<NumberOfItem>k__BackingField = dataReader.GetInt32(1);
                                        instance.<OrderRecivedDate>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<OrderStatusId>k__BackingField = dataReader.GetInt32(3);
                                        instance.<PaymentDate>k__BackingField = dataReader.GetDateTime(4);
                                        instance.<PaymentMethodId>k__BackingField = dataReader.GetInt32(5);
                                        instance.<PaymentStatusId>k__BackingField = dataReader.GetInt32(6);
                                        instance.<PaymentTypeId>k__BackingField = dataReader.GetInt32(7);
                                        instance.<PurchaseBy>k__BackingField = dataReader.GetInt64(8);
                                        instance.<PurchaseDate>k__BackingField = dataReader.GetDateTime(9);
                                        instance.<TotalNumberOfQuantity>k__BackingField = dataReader.GetInt32(10);
                                        instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(11);
                                        instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                        instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                        instance.<VendorId>k__BackingField = dataReader.GetInt64(14);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(StockPurchaseOrders)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                entity = 
                {
                    MaterializationContext materializationContext2;
                    IEntityType entityType2;
                    VendorDetails instance2;
                    InternalEntityEntry entry2;
                    bool hasNullKey2;
                    materializationContext2 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance2 = default(VendorDetails);
                    entry2 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: VendorDetails.VendorId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt64(15) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey2);
                    !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                    {
                        entityType2 = entry2.EntityType;
                        return instance2 = (VendorDetails)entry2.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot2;
                        shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType2 = [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")];
                        instance2 = switch (entityType2)
                        {
                            case [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")]: 
                                {
                                    return 
                                    {
                                        VendorDetails instance;
                                        instance = new VendorDetails();
                                        instance.<VendorId>k__BackingField = dataReader.GetInt64(15);
                                        instance.<Address>k__BackingField = dataReader.GetString(16);
                                        instance.<City>k__BackingField = dataReader.GetString(17);
                                        instance.<Country>k__BackingField = dataReader.GetString(18);
                                        instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(19);
                                        instance.<CreatedBy>k__BackingField = dataReader.GetInt64(20);
                                        instance.<Email>k__BackingField = dataReader.GetString(21);
                                        instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(22);
                                        instance.<Name>k__BackingField = dataReader.GetString(23);
                                        instance.<Phone>k__BackingField = dataReader.GetString(24);
                                        instance.<Pincode>k__BackingField = dataReader.GetString(25);
                                        instance.<State>k__BackingField = dataReader.GetString(26);
                                        instance.<StoreName>k__BackingField = dataReader.GetString(27);
                                        instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(28);
                                        instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(29);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext2.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(VendorDetails)
                        }
                        ;
                        entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType2, 
                            entity: instance2, 
                            snapshot: shadowSnapshot2);
                        return instance2;
                    } : default(void);
                    return instance2;
                };
                resultContext.Values = new object[]
                { 
                    entity, 
                    entity 
                };
                ShaperProcessingExpressionVisitor.IncludeReference<StockPurchaseOrders, StockPurchaseOrders, VendorDetails>(
                    queryContext: queryContext, 
                    entity: (StockPurchaseOrders)(resultContext.Values[0]), 
                    relatedEntity: (VendorDetails)(resultContext.Values[1]), 
                    navigation: [LIFTABLE Constant: Navigation: StockPurchaseOrders.VendorDetails (VendorDetails) ToPrincipal VendorDetails | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("VendorDetails")], 
                    inverseNavigation: default(INavigation), 
                    fixup: (namelessParameter{7}, namelessParameter{8}) => 
                    {
                        return namelessParameter{7}.<VendorDetails>k__BackingField = namelessParameter{8};
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<StockPurchaseOrders, StockPurchaseOrders>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (StockPurchaseOrders)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(long?)dataReader.GetInt64(0), 
                        (object)(long?)dataReader.GetInt64(15) 
                    }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(long?)dataReader.GetInt64(0), 
                        (object)(long?)dataReader.GetInt64(15) 
                    }], 
                    navigation: [LIFTABLE Constant: Navigation: StockPurchaseOrders.StockPurchaseOrderItems (ICollection<StockPurchaseOrderItems>) Collection ToDependent StockPurchaseOrderItems Inverse: StockPurchaseOrder | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<StockPurchaseOrders, ICollection<StockPurchaseOrderItems>, StockPurchaseOrderItems> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<StockPurchaseOrders, StockPurchaseOrderItems>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(long?)dataReader.GetInt64(0), 
                    (object)(long?)dataReader.GetInt64(15) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(long?)dataReader.GetInt64(0), 
                    (object)(long?)dataReader.GetInt64(15) 
                }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)dataReader.IsDBNull(30) ? default(int?) : (int?)dataReader.GetInt32(30), 
                    (object)dataReader.IsDBNull(38) ? default(long?) : (long?)dataReader.GetInt64(38) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right, 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right 
                }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right, 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right 
                }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    StockPurchaseOrderItems entity;
                    Products entity;
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        StockPurchaseOrderItems instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(StockPurchaseOrderItems);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: StockPurchaseOrderItems.StockPurchaseOrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(30) ? default(object) : (object)dataReader.GetInt32(30) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (StockPurchaseOrderItems)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")]: 
                                    {
                                        return 
                                        {
                                            StockPurchaseOrderItems instance;
                                            instance = new StockPurchaseOrderItems();
                                            instance.<StockPurchaseOrderItemId>k__BackingField = dataReader.IsDBNull(30) ? default(int) : dataReader.GetInt32(30);
                                            instance.<OrderItemStatus>k__BackingField = dataReader.IsDBNull(31) ? default(int) : dataReader.GetInt32(31);
                                            instance.<OrderRecivedDate>k__BackingField = dataReader.IsDBNull(32) ? default(DateTime) : dataReader.GetDateTime(32);
                                            instance.<ProductId>k__BackingField = dataReader.IsDBNull(33) ? default(long) : dataReader.GetInt64(33);
                                            instance.<ProductPrice>k__BackingField = dataReader.IsDBNull(34) ? default(decimal) : dataReader.GetDecimal(34);
                                            instance.<Quantity>k__BackingField = dataReader.IsDBNull(35) ? default(int) : dataReader.GetInt32(35);
                                            instance.<StockPurchaseOrderId>k__BackingField = dataReader.IsDBNull(36) ? default(long) : dataReader.GetInt64(36);
                                            instance.<TotalPrice>k__BackingField = dataReader.IsDBNull(37) ? default(decimal) : dataReader.GetDecimal(37);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(StockPurchaseOrderItems)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    entity = 
                    {
                        MaterializationContext materializationContext4;
                        IEntityType entityType4;
                        Products instance4;
                        InternalEntityEntry entry4;
                        bool hasNullKey4;
                        materializationContext4 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance4 = default(Products);
                        entry4 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(38) ? default(object) : (object)dataReader.GetInt64(38) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey4);
                        !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
                        {
                            entityType4 = entry4.EntityType;
                            return instance4 = (Products)entry4.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot4;
                            shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType4 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                            instance4 = switch (entityType4)
                            {
                                case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                                    {
                                        return 
                                        {
                                            Products instance;
                                            instance = new Products();
                                            instance.<ProductId>k__BackingField = dataReader.IsDBNull(38) ? default(long) : dataReader.GetInt64(38);
                                            instance.<AvailableQuantity>k__BackingField = dataReader.IsDBNull(39) ? default(int) : dataReader.GetInt32(39);
                                            instance.<CategoryId>k__BackingField = dataReader.IsDBNull(40) ? default(int) : dataReader.GetInt32(40);
                                            instance.<CreatedAt>k__BackingField = dataReader.IsDBNull(41) ? default(DateTime) : dataReader.GetDateTime(41);
                                            instance.<CreatedBy>k__BackingField = dataReader.IsDBNull(42) ? default(long) : dataReader.GetInt64(42);
                                            instance.<Description>k__BackingField = dataReader.IsDBNull(43) ? default(string) : dataReader.GetString(43);
                                            instance.<IsDeleted>k__BackingField = dataReader.IsDBNull(44) ? default(bool) : dataReader.GetBoolean(44);
                                            instance.<LastRestockAt>k__BackingField = dataReader.IsDBNull(45) ? default(DateTime) : dataReader.GetDateTime(45);
                                            instance.<MinimumRequiredQuantity>k__BackingField = dataReader.IsDBNull(46) ? default(int) : dataReader.GetInt32(46);
                                            instance.<Name>k__BackingField = dataReader.IsDBNull(47) ? default(string) : dataReader.GetString(47);
                                            instance.<Price>k__BackingField = dataReader.IsDBNull(48) ? default(decimal) : dataReader.GetDecimal(48);
                                            instance.<ProductStatus>k__BackingField = dataReader.IsDBNull(49) ? default(int) : dataReader.GetInt32(49);
                                            instance.<UpdatedAt>k__BackingField = dataReader.IsDBNull(50) ? default(DateTime) : dataReader.GetDateTime(50);
                                            instance.<UpdatedBy>k__BackingField = dataReader.IsDBNull(51) ? default(long) : dataReader.GetInt64(51);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext4.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Products)
                            }
                            ;
                            entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType4, 
                                entity: instance4, 
                                snapshot: shadowSnapshot4);
                            return instance4;
                        } : default(void);
                        return instance4;
                    };
                    ShaperProcessingExpressionVisitor.IncludeReference<StockPurchaseOrderItems, StockPurchaseOrderItems, Products>(
                        queryContext: queryContext, 
                        entity: entity, 
                        relatedEntity: entity, 
                        navigation: [LIFTABLE Constant: Navigation: StockPurchaseOrderItems.Product (Products) ToPrincipal Products Inverse: StockPurchaseOrderItems | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems").FindNavigation("Product")], 
                        inverseNavigation: [LIFTABLE Constant: Navigation: Products.StockPurchaseOrderItems (ICollection<StockPurchaseOrderItems>) Collection ToDependent StockPurchaseOrderItems Inverse: Product | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindNavigation("StockPurchaseOrderItems")], 
                        fixup: (namelessParameter{19}, namelessParameter{20}) => 
                        {
                            namelessParameter{19}.<Product>k__BackingField = namelessParameter{20};
                            return [LIFTABLE Constant: ClrICollectionAccessor<Products, ICollection<StockPurchaseOrderItems>, StockPurchaseOrderItems> | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindNavigation("StockPurchaseOrderItems").GetCollectionAccessor()].Add(
                                entity: namelessParameter{20}, 
                                value: namelessParameter{19}, 
                                forMaterialization: True);
                        }, 
                        trackingQuery: True);
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: StockPurchaseOrderItems.StockPurchaseOrder (StockPurchaseOrders) ToPrincipal StockPurchaseOrders Inverse: StockPurchaseOrderItems | Resolver: namelessParameter{22} => namelessParameter{22}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems").FindNavigation("StockPurchaseOrder")], 
                fixup: (namelessParameter{23}, namelessParameter{24}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<StockPurchaseOrders, ICollection<StockPurchaseOrderItems>, StockPurchaseOrderItems> | Resolver: namelessParameter{25} => namelessParameter{25}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems").GetCollectionAccessor()].Add(
                        entity: namelessParameter{23}, 
                        value: namelessParameter{24}, 
                        forMaterialization: True);
                    return namelessParameter{24}.<StockPurchaseOrder>k__BackingField = namelessParameter{23};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (StockPurchaseOrders)(resultContext.Values[0]) : default(StockPurchaseOrders);
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 01:50:19.796 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:50:19.803 +05:30 [DBG] Created DbConnection. (6ms).
2025-05-09 01:50:19.806 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:50:19.807 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:50:19.809 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:50:19.810 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:50:19.811 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:50:19.814 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s1].[VendorId0], [s1].[Address], [s1].[City], [s1].[Country], [s1].[CreatedAt], [s1].[CreatedBy], [s1].[Email], [s1].[IsDeleted], [s1].[Name], [s1].[Phone], [s1].[Pincode], [s1].[State], [s1].[StoreName], [s1].[UpdatedAt0], [s1].[UpdatedBy0], [s2].[StockPurchaseOrderItemId], [s2].[OrderItemStatus], [s2].[OrderRecivedDate], [s2].[ProductId], [s2].[ProductPrice], [s2].[Quantity], [s2].[StockPurchaseOrderId], [s2].[TotalPrice], [s2].[ProductId0], [s2].[AvailableQuantity], [s2].[CategoryId], [s2].[CreatedAt], [s2].[CreatedBy], [s2].[Description], [s2].[IsDeleted], [s2].[LastRestockAt], [s2].[MinimumRequiredQuantity], [s2].[Name], [s2].[Price], [s2].[ProductStatus], [s2].[UpdatedAt], [s2].[UpdatedBy]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId], [v].[VendorId] AS [VendorId0], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt] AS [UpdatedAt0], [v].[UpdatedBy] AS [UpdatedBy0]
    FROM [StockPurchaseOrders] AS [s]
    INNER JOIN [VendorDetails] AS [v] ON [s].[VendorId] = [v].[VendorId]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN (
    SELECT [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice], [p].[ProductId] AS [ProductId0], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
    FROM [StockPurchaseOrderItems] AS [s0]
    INNER JOIN [Products] AS [p] ON [s0].[ProductId] = [p].[ProductId]
) AS [s2] ON [s1].[StockPurchaseOrderId] = [s2].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId], [s1].[VendorId0], [s2].[StockPurchaseOrderItemId]
2025-05-09 01:50:19.845 +05:30 [INF] Executed DbCommand (31ms) [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s1].[VendorId0], [s1].[Address], [s1].[City], [s1].[Country], [s1].[CreatedAt], [s1].[CreatedBy], [s1].[Email], [s1].[IsDeleted], [s1].[Name], [s1].[Phone], [s1].[Pincode], [s1].[State], [s1].[StoreName], [s1].[UpdatedAt0], [s1].[UpdatedBy0], [s2].[StockPurchaseOrderItemId], [s2].[OrderItemStatus], [s2].[OrderRecivedDate], [s2].[ProductId], [s2].[ProductPrice], [s2].[Quantity], [s2].[StockPurchaseOrderId], [s2].[TotalPrice], [s2].[ProductId0], [s2].[AvailableQuantity], [s2].[CategoryId], [s2].[CreatedAt], [s2].[CreatedBy], [s2].[Description], [s2].[IsDeleted], [s2].[LastRestockAt], [s2].[MinimumRequiredQuantity], [s2].[Name], [s2].[Price], [s2].[ProductStatus], [s2].[UpdatedAt], [s2].[UpdatedBy]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId], [v].[VendorId] AS [VendorId0], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt] AS [UpdatedAt0], [v].[UpdatedBy] AS [UpdatedBy0]
    FROM [StockPurchaseOrders] AS [s]
    INNER JOIN [VendorDetails] AS [v] ON [s].[VendorId] = [v].[VendorId]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN (
    SELECT [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice], [p].[ProductId] AS [ProductId0], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
    FROM [StockPurchaseOrderItems] AS [s0]
    INNER JOIN [Products] AS [p] ON [s0].[ProductId] = [p].[ProductId]
) AS [s2] ON [s1].[StockPurchaseOrderId] = [s2].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId], [s1].[VendorId0], [s2].[StockPurchaseOrderItemId]
2025-05-09 01:50:19.860 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:50:19.864 +05:30 [DBG] The navigation 'StockPurchaseOrders.VendorDetails' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:50:19.867 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'VendorDetails' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:50:19.874 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:50:19.876 +05:30 [DBG] The navigation 'StockPurchaseOrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:50:19.877 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:50:19.879 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:50:19.883 +05:30 [DBG] The navigation 'StockPurchaseOrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:50:19.885 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:50:19.887 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:50:19.888 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 28ms reading results.
2025-05-09 01:50:19.889 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:50:19.890 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:50:19.894 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:50:19.898 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:50:19.899 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:50:19.900 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:50:19.901 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:50:19.902 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.StockPurchaseOrderDetailsResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-09 01:50:19.910 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem) in 295.7473ms
2025-05-09 01:50:19.914 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)'
2025-05-09 01:50:19.917 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:50:19.921 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:50:19.923 +05:30 [DBG] Disposed connection to database '' on server '' (2ms).
2025-05-09 01:50:19.925 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/StockPurchaseOrder/1 - 200 null application/json; charset=utf-8 395.2955ms
2025-05-09 01:51:53.492 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Order/customer-order - application/json 147
2025-05-09 01:51:53.530 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/customer-order'
2025-05-09 01:51:53.536 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)' with route pattern 'api/Order/customer-order' is valid for the request path '/api/Order/customer-order'
2025-05-09 01:51:53.543 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 01:51:53.548 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:51:53.552 +05:30 [DBG] Successfully validated the token.
2025-05-09 01:51:53.554 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 01:51:53.560 +05:30 [DBG] Authorization was successful.
2025-05-09 01:51:53.561 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 01:51:53.569 +05:30 [INF] Route matched with {action = "PlaceOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PlaceOrder(InventoryManagementSystem.Models.Request.CustomerOrderRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 01:51:53.578 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:51:53.582 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:51:53.584 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:51:53.592 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:51:53.597 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:51:53.603 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 01:51:53.609 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 01:51:53.611 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' ...
2025-05-09 01:51:53.615 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' using the name '' in request data ...
2025-05-09 01:51:53.623 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 01:51:53.628 +05:30 [DBG] Connection id "0HNCEDEVEATVV", Request id "0HNCEDEVEATVV:0000000D": started reading request body.
2025-05-09 01:51:53.630 +05:30 [DBG] Connection id "0HNCEDEVEATVV", Request id "0HNCEDEVEATVV:0000000D": done reading request body.
2025-05-09 01:51:53.634 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'
2025-05-09 01:51:53.639 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 01:51:53.644 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 01:51:53.649 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' ...
2025-05-09 01:51:53.657 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 01:51:53.667 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:51:53.674 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .FirstOrDefault(p => p.ProductId == __productId_0 && !(p.IsDeleted))'
2025-05-09 01:51:53.686 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Products>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Products>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE (p.ProductId == @__productId_0) && Not(p.IsDeleted)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE (p.ProductId == @__productId_0) && Not(p.IsDeleted), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Products entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Products instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Products);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Products)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                            {
                                return 
                                {
                                    Products instance;
                                    instance = new Products();
                                    instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                    instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Name>k__BackingField = dataReader.GetString(9);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                    instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Products)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 01:51:53.719 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:51:53.721 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 01:51:53.722 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.724 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.726 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:51:53.727 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:51:53.729 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 01:51:53.731 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:51:53.749 +05:30 [INF] Executed DbCommand (19ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:51:53.761 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:53.763 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.764 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-09 01:51:53.766 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.767 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:51:53.773 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:53.781 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:51:53.782 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:51:53.783 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:51:53.785 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.788 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.794 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:51:53.795 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:51:53.797 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:51:53.798 +05:30 [DBG] Executing DbCommand [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
2025-05-09 01:51:53.817 +05:30 [INF] Executed DbCommand (19ms) [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
2025-05-09 01:51:53.826 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.828 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 01:51:53.831 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.832 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:51:53.834 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:53.841 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:51:53.844 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.845 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.846 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:51:53.847 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 01:51:53.848 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:51:53.850 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 01:51:53.857 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 01:51:53.875 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.879 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 8ms reading results.
2025-05-09 01:51:53.886 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.896 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (9ms).
2025-05-09 01:51:53.897 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:53.899 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:53.901 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:53.906 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:51:53.911 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:51:53.913 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:51:53.915 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.917 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.918 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:51:53.925 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (6ms).
2025-05-09 01:51:53.931 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (12ms).
2025-05-09 01:51:53.933 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 01:51:53.943 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 01:51:53.947 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:51:53.949 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.950 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 01:51:53.952 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.962 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (10ms).
2025-05-09 01:51:53.964 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:53.966 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:51:53.968 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.969 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.972 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:51:53.974 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:51:53.976 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-09 01:51:53.978 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:51:53.983 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 01:51:53.989 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:53.995 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.996 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 7ms reading results.
2025-05-09 01:51:53.998 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:53.999 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:51:54.001 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:54.004 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:51:54.007 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:51:54.009 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:51:54.011 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:54.012 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:54.013 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:51:54.014 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:51:54.016 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:51:54.017 +05:30 [DBG] Executing DbCommand [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
2025-05-09 01:51:54.023 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
2025-05-09 01:51:54.029 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:54.030 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 01:51:54.031 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:54.033 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:51:54.034 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:54.037 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:51:54.040 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:54.043 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:54.045 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:51:54.046 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:51:54.047 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:51:54.048 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 01:51:54.052 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 01:51:54.062 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:54.064 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 01:51:54.065 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:54.066 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:51:54.068 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:54.080 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:54.083 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:54.085 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:51:54.092 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:51:54.093 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:51:54.095 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:54.096 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:54.097 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:51:54.098 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:51:54.099 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:51:54.101 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 01:51:54.111 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 01:51:54.115 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:51:54.116 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:54.117 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 01:51:54.119 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:54.130 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (10ms).
2025-05-09 01:51:54.131 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:54.133 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:51:54.142 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Orders.OrderId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:54.182 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Orders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:54.189 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'OrderItems.OrderItemId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:54.212 +05:30 [DBG] The navigation 'OrderItems.Order' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:54.215 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:54.217 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:54.219 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'OrderItems.OrderItemId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:54.227 +05:30 [DBG] The navigation 'OrderItems.Order' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:54.228 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:54.230 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:54.231 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:51:54.232 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:51:54.244 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:51:54.246 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:54.248 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:54.249 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-09 01:51:54.250 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-09 01:51:54.251 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:51:54.252 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:51:54.255 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-09 01:51:54.258 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p8='?' (DbType = Int32), @p9='?' (DbType = Int64), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Orders] ([NumberOfItems], [OrderDate], [OrderStatus], [PaymentDate], [PaymentMethod], [PaymentStatus], [PaymentType], [TotalCost], [TotalQuantity], [UpdatedBy], [UpdatedDate], [UserId])
OUTPUT INSERTED.[OrderId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11);
2025-05-09 01:51:54.266 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p8='?' (DbType = Int32), @p9='?' (DbType = Int64), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Orders] ([NumberOfItems], [OrderDate], [OrderStatus], [PaymentDate], [PaymentMethod], [PaymentStatus], [PaymentType], [TotalCost], [TotalQuantity], [UpdatedBy], [UpdatedDate], [UserId])
OUTPUT INSERTED.[OrderId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11);
2025-05-09 01:51:54.273 +05:30 [DBG] The foreign key property 'Orders.OrderId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:51:54.277 +05:30 [DBG] The foreign key property 'OrderItems.OrderId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:51:54.279 +05:30 [DBG] The foreign key property 'OrderItems.OrderId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:51:54.281 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:54.282 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 12ms reading results.
2025-05-09 01:51:54.284 +05:30 [DBG] Executing 2 update commands as a batch.
2025-05-09 01:51:54.285 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:51:54.286 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:51:54.295 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (9ms).
2025-05-09 01:51:54.297 +05:30 [DBG] Executing DbCommand [Parameters=[@p12='?' (DbType = DateTime2), @p13='?' (DbType = Int64), @p14='?' (DbType = Int32), @p15='?' (DbType = Int64), @p16='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p17='?' (DbType = Int32), @p18='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Int64), @p21='?' (DbType = Int32), @p22='?' (DbType = Int64), @p23='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p24='?' (DbType = Int32), @p25='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [OrderItems] USING (
VALUES (@p12, @p13, @p14, @p15, @p16, @p17, @p18, 0),
(@p19, @p20, @p21, @p22, @p23, @p24, @p25, 1)) AS i ([OrderDate], [OrderId], [OrderItemStatus], [ProductId], [ProductPrice], [Quantity], [TotalPrice], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([OrderDate], [OrderId], [OrderItemStatus], [ProductId], [ProductPrice], [Quantity], [TotalPrice])
VALUES (i.[OrderDate], i.[OrderId], i.[OrderItemStatus], i.[ProductId], i.[ProductPrice], i.[Quantity], i.[TotalPrice])
OUTPUT INSERTED.[OrderItemId], i._Position;
2025-05-09 01:51:54.325 +05:30 [INF] Executed DbCommand (29ms) [Parameters=[@p12='?' (DbType = DateTime2), @p13='?' (DbType = Int64), @p14='?' (DbType = Int32), @p15='?' (DbType = Int64), @p16='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p17='?' (DbType = Int32), @p18='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Int64), @p21='?' (DbType = Int32), @p22='?' (DbType = Int64), @p23='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p24='?' (DbType = Int32), @p25='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [OrderItems] USING (
VALUES (@p12, @p13, @p14, @p15, @p16, @p17, @p18, 0),
(@p19, @p20, @p21, @p22, @p23, @p24, @p25, 1)) AS i ([OrderDate], [OrderId], [OrderItemStatus], [ProductId], [ProductPrice], [Quantity], [TotalPrice], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([OrderDate], [OrderId], [OrderItemStatus], [ProductId], [ProductPrice], [Quantity], [TotalPrice])
VALUES (i.[OrderDate], i.[OrderId], i.[OrderItemStatus], i.[ProductId], i.[ProductPrice], i.[Quantity], i.[TotalPrice])
OUTPUT INSERTED.[OrderItemId], i._Position;
2025-05-09 01:51:54.332 +05:30 [DBG] The foreign key property 'OrderItems.OrderItemId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:51:54.334 +05:30 [DBG] The foreign key property 'OrderItems.OrderItemId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:51:54.335 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:54.338 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 6ms reading results.
2025-05-09 01:51:54.342 +05:30 [DBG] Committing transaction.
2025-05-09 01:51:54.345 +05:30 [DBG] Committed transaction.
2025-05-09 01:51:54.345 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:54.346 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:51:54.348 +05:30 [DBG] Disposing transaction.
2025-05-09 01:51:54.349 +05:30 [DBG] An entity of type 'Orders' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:54.351 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:54.354 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:51:54.357 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 3 entities written to the database.
2025-05-09 01:51:54.358 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:51:54.361 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:51:54.362 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:51:54.363 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:51:54.364 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:51:54.365 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:51:54.367 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem) in 763.576ms
2025-05-09 01:51:54.368 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 01:51:54.370 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:51:54.372 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:51:54.376 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 01:51:54.379 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Order/customer-order - 201 null application/json; charset=utf-8 887.1627ms
2025-05-09 01:53:42.450 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Order/ReturnOrderItems - application/json 47
2025-05-09 01:53:42.464 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/ReturnOrderItems'
2025-05-09 01:53:42.466 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)' with route pattern 'api/Order/ReturnOrderItems' is valid for the request path '/api/Order/ReturnOrderItems'
2025-05-09 01:53:42.471 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 01:53:42.474 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:53:42.475 +05:30 [DBG] Successfully validated the token.
2025-05-09 01:53:42.478 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 01:53:42.481 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 01:53:42.491 +05:30 [INF] Route matched with {action = "ReturnOrderItems", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReturnOrderItems(InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 01:53:42.500 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:53:42.502 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:53:42.506 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:53:42.511 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:53:42.515 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:53:42.518 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 01:53:42.520 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 01:53:42.524 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-09 01:53:42.527 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' using the name '' in request data ...
2025-05-09 01:53:42.532 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 01:53:42.536 +05:30 [DBG] Connection id "0HNCEDEVEATVV", Request id "0HNCEDEVEATVV:0000000F": started reading request body.
2025-05-09 01:53:42.537 +05:30 [DBG] Connection id "0HNCEDEVEATVV", Request id "0HNCEDEVEATVV:0000000F": done reading request body.
2025-05-09 01:53:42.540 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'
2025-05-09 01:53:42.542 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 01:53:42.544 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 01:53:42.549 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-09 01:53:42.553 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 01:53:44.599 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:53:44.606 +05:30 [DBG] Compiling query expression: 
'DbSet<OrderItems>()
    .Where(x => x.OrderId == __orderId_0 && __productIds_1.Contains(x.ProductId))'
2025-05-09 01:53:44.657 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<OrderItems>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE (o.OrderId == @__orderId_0) && o.ProductId IN (
            SELECT p.value
            FROM OPENJSON(@__productIds_1) WITH (value bigint '') AS p)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE (o.OrderId == @__orderId_0) && o.ProductId IN (
            SELECT p.value
            FROM OPENJSON(@__productIds_1) WITH (value bigint '') AS p), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        OrderItems entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            OrderItems instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(OrderItems);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: OrderItems.OrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (OrderItems)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]: 
                        {
                            return 
                            {
                                OrderItems instance;
                                instance = new OrderItems();
                                instance.<OrderItemId>k__BackingField = dataReader.GetInt64(0);
                                instance.<OrderDate>k__BackingField = dataReader.GetDateTime(1);
                                instance.<OrderId>k__BackingField = dataReader.GetInt64(2);
                                instance.<OrderItemStatus>k__BackingField = dataReader.GetInt32(3);
                                instance.<ProductId>k__BackingField = dataReader.GetInt64(4);
                                instance.<ProductPrice>k__BackingField = dataReader.GetDecimal(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(OrderItems)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 01:53:44.700 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:53:44.702 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 01:53:44.707 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:44.712 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:44.714 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:53:44.714 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 01:53:44.719 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-09 01:53:44.721 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-09 01:53:44.748 +05:30 [INF] Executed DbCommand (27ms) [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-09 01:53:44.753 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:53:44.755 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:44.757 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-09 01:53:44.766 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:44.768 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:53:44.785 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .FirstOrDefault(e => EF.Property<long>(e, "ProductId") == __p_0)'
2025-05-09 01:53:44.793 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Products>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Products>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Products entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Products instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Products);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Products)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                            {
                                return 
                                {
                                    Products instance;
                                    instance = new Products();
                                    instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                    instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Name>k__BackingField = dataReader.GetString(9);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                    instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Products)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 01:53:44.833 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:44.834 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:44.838 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:53:44.841 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:53:44.842 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 01:53:44.845 +05:30 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__p_0
2025-05-09 01:53:44.855 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__p_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__p_0
2025-05-09 01:53:44.859 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:53:44.862 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:53:44.864 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:44.865 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 6ms reading results.
2025-05-09 01:53:44.866 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:44.867 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 01:53:47.088 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:53:47.091 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:53:47.092 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:53:47.095 +05:30 [DBG] The unchanged property 'OrderItems.OrderDate' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:53:47.098 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:53:47.100 +05:30 [DBG] The unchanged property 'OrderItems.OrderItemStatus' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:53:47.102 +05:30 [DBG] The foreign key property 'OrderItems.OrderItemStatus' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:53:47.103 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:53:47.105 +05:30 [DBG] Executing 2 update commands as a batch.
2025-05-09 01:53:47.107 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.108 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.111 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-09 01:53:47.119 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-09 01:53:47.122 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:53:47.123 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:53:47.124 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:53:47.126 +05:30 [DBG] Executing DbCommand [Parameters=[@p2='?' (DbType = Int64), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32), @p16='?' (DbType = Int64), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64), @p7='?' (Size = 225), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Int32), @p11='?' (Size = 100), @p12='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p13='?' (DbType = Int32), @p14='?' (DbType = DateTime2), @p15='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [OrderItems] SET [OrderDate] = @p0, [OrderItemStatus] = @p1
OUTPUT 1
WHERE [OrderItemId] = @p2;
UPDATE [Products] SET [AvailableQuantity] = @p3, [CategoryId] = @p4, [CreatedAt] = @p5, [CreatedBy] = @p6, [Description] = @p7, [IsDeleted] = @p8, [LastRestockAt] = @p9, [MinimumRequiredQuantity] = @p10, [Name] = @p11, [Price] = @p12, [ProductStatus] = @p13, [UpdatedAt] = @p14, [UpdatedBy] = @p15
OUTPUT 1
WHERE [ProductId] = @p16;
2025-05-09 01:53:47.152 +05:30 [INF] Executed DbCommand (26ms) [Parameters=[@p2='?' (DbType = Int64), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32), @p16='?' (DbType = Int64), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64), @p7='?' (Size = 225), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Int32), @p11='?' (Size = 100), @p12='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p13='?' (DbType = Int32), @p14='?' (DbType = DateTime2), @p15='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [OrderItems] SET [OrderDate] = @p0, [OrderItemStatus] = @p1
OUTPUT 1
WHERE [OrderItemId] = @p2;
UPDATE [Products] SET [AvailableQuantity] = @p3, [CategoryId] = @p4, [CreatedAt] = @p5, [CreatedBy] = @p6, [Description] = @p7, [IsDeleted] = @p8, [LastRestockAt] = @p9, [MinimumRequiredQuantity] = @p10, [Name] = @p11, [Price] = @p12, [ProductStatus] = @p13, [UpdatedAt] = @p14, [UpdatedBy] = @p15
OUTPUT 1
WHERE [ProductId] = @p16;
2025-05-09 01:53:47.159 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.160 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 01:53:47.168 +05:30 [DBG] Committing transaction.
2025-05-09 01:53:47.170 +05:30 [DBG] Committed transaction.
2025-05-09 01:53:47.170 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.172 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:53:47.173 +05:30 [DBG] Disposing transaction.
2025-05-09 01:53:47.174 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:53:47.177 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:53:47.183 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 2 entities written to the database.
2025-05-09 01:53:47.185 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.186 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.187 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:53:47.188 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:53:47.189 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:53:47.191 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 01:53:47.199 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 01:53:47.203 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.204 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 01:53:47.206 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.207 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:53:47.210 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:53:47.212 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:53:47.213 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:53:47.218 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:53:47.223 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:53:47.231 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:53:47.239 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.241 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.242 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:53:47.243 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 01:53:47.245 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:53:47.246 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 01:53:47.260 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 01:53:47.270 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 01:53:47.271 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.272 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 01:53:47.273 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.274 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 01:53:47.276 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:53:47.283 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 01:53:47.287 +05:30 [DBG] Compiling query expression: 
'DbSet<Orders>()
    .FirstOrDefault(e => EF.Property<long>(e, "OrderId") == __p_0)'
2025-05-09 01:53:47.296 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Orders>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Orders>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Orders.OrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Orders.NumberOfItems (int) Required, 1], [Property: Orders.OrderDate (DateTime) Required ValueGenerated.OnAdd, 2], [Property: Orders.OrderStatus (int) Required FK Index, 3], [Property: Orders.PaymentDate (DateTime) Required, 4], [Property: Orders.PaymentMethod (int) Required FK Index, 5], [Property: Orders.PaymentStatus (int) Required FK Index, 6], [Property: Orders.PaymentType (int) Required FK Index, 7], [Property: Orders.TotalCost (decimal) Required, 8], [Property: Orders.TotalQuantity (int) Required, 9], [Property: Orders.UpdatedBy (long) Required FK Index, 10], [Property: Orders.UpdatedDate (DateTime) Required ValueGenerated.OnAdd, 11], [Property: Orders.UserId (long) Required FK Index, 12] }
            SELECT TOP(1) o.OrderId, o.NumberOfItems, o.OrderDate, o.OrderStatus, o.PaymentDate, o.PaymentMethod, o.PaymentStatus, o.PaymentType, o.TotalCost, o.TotalQuantity, o.UpdatedBy, o.UpdatedDate, o.UserId
            FROM Orders AS o
            WHERE o.OrderId == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Orders.OrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Orders.NumberOfItems (int) Required, 1], [Property: Orders.OrderDate (DateTime) Required ValueGenerated.OnAdd, 2], [Property: Orders.OrderStatus (int) Required FK Index, 3], [Property: Orders.PaymentDate (DateTime) Required, 4], [Property: Orders.PaymentMethod (int) Required FK Index, 5], [Property: Orders.PaymentStatus (int) Required FK Index, 6], [Property: Orders.PaymentType (int) Required FK Index, 7], [Property: Orders.TotalCost (decimal) Required, 8], [Property: Orders.TotalQuantity (int) Required, 9], [Property: Orders.UpdatedBy (long) Required FK Index, 10], [Property: Orders.UpdatedDate (DateTime) Required ValueGenerated.OnAdd, 11], [Property: Orders.UserId (long) Required FK Index, 12] }
            SELECT TOP(1) o.OrderId, o.NumberOfItems, o.OrderDate, o.OrderStatus, o.PaymentDate, o.PaymentMethod, o.PaymentStatus, o.PaymentType, o.TotalCost, o.TotalQuantity, o.UpdatedBy, o.UpdatedDate, o.UserId
            FROM Orders AS o
            WHERE o.OrderId == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Orders entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Orders instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Orders);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Orders.OrderId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Orders)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")]: 
                            {
                                return 
                                {
                                    Orders instance;
                                    instance = new Orders();
                                    instance.<OrderId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<NumberOfItems>k__BackingField = dataReader.GetInt32(1);
                                    instance.<OrderDate>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<OrderStatus>k__BackingField = dataReader.GetInt32(3);
                                    instance.<PaymentDate>k__BackingField = dataReader.GetDateTime(4);
                                    instance.<PaymentMethod>k__BackingField = dataReader.GetInt32(5);
                                    instance.<PaymentStatus>k__BackingField = dataReader.GetInt32(6);
                                    instance.<PaymentType>k__BackingField = dataReader.GetInt32(7);
                                    instance.<TotalCost>k__BackingField = dataReader.GetDecimal(8);
                                    instance.<TotalQuantity>k__BackingField = dataReader.GetInt32(9);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(10);
                                    instance.<UpdatedDate>k__BackingField = dataReader.GetDateTime(11);
                                    instance.<UserId>k__BackingField = dataReader.GetInt64(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Orders)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 01:53:47.318 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.320 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.321 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:53:47.322 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 01:53:47.323 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:53:47.326 +05:30 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[OrderId], [o].[NumberOfItems], [o].[OrderDate], [o].[OrderStatus], [o].[PaymentDate], [o].[PaymentMethod], [o].[PaymentStatus], [o].[PaymentType], [o].[TotalCost], [o].[TotalQuantity], [o].[UpdatedBy], [o].[UpdatedDate], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[OrderId] = @__p_0
2025-05-09 01:53:47.331 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[OrderId], [o].[NumberOfItems], [o].[OrderDate], [o].[OrderStatus], [o].[PaymentDate], [o].[PaymentMethod], [o].[PaymentStatus], [o].[PaymentType], [o].[TotalCost], [o].[TotalQuantity], [o].[UpdatedBy], [o].[UpdatedDate], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[OrderId] = @__p_0
2025-05-09 01:53:47.334 +05:30 [DBG] The navigation 'OrderItems.Order' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:53:47.337 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Orders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:53:47.338 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.341 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 7ms reading results.
2025-05-09 01:53:47.343 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.344 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:53:47.346 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:53:47.348 +05:30 [DBG] An entity of type 'Orders' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:53:47.349 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 01:53:47.350 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 01:53:47.351 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 01:53:47.353 +05:30 [DBG] Executing 2 update commands as a batch.
2025-05-09 01:53:47.353 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.354 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.356 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-09 01:53:47.358 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-09 01:53:47.359 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:53:47.360 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:53:47.361 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 01:53:47.362 +05:30 [DBG] Executing DbCommand [Parameters=[@p7='?' (DbType = Int64), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int64), @p2='?' (DbType = Int32), @p3='?' (DbType = Int64), @p4='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p5='?' (DbType = Int32), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p20='?' (DbType = Int64), @p8='?' (DbType = Int32), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int32), @p13='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p16='?' (DbType = Int32), @p17='?' (DbType = Int64), @p18='?' (DbType = DateTime2), @p19='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [OrderItems] SET [OrderDate] = @p0, [OrderId] = @p1, [OrderItemStatus] = @p2, [ProductId] = @p3, [ProductPrice] = @p4, [Quantity] = @p5, [TotalPrice] = @p6
OUTPUT 1
WHERE [OrderItemId] = @p7;
UPDATE [Orders] SET [NumberOfItems] = @p8, [OrderDate] = @p9, [OrderStatus] = @p10, [PaymentDate] = @p11, [PaymentMethod] = @p12, [PaymentStatus] = @p13, [PaymentType] = @p14, [TotalCost] = @p15, [TotalQuantity] = @p16, [UpdatedBy] = @p17, [UpdatedDate] = @p18, [UserId] = @p19
OUTPUT 1
WHERE [OrderId] = @p20;
2025-05-09 01:53:47.377 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@p7='?' (DbType = Int64), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int64), @p2='?' (DbType = Int32), @p3='?' (DbType = Int64), @p4='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p5='?' (DbType = Int32), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p20='?' (DbType = Int64), @p8='?' (DbType = Int32), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int32), @p13='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p16='?' (DbType = Int32), @p17='?' (DbType = Int64), @p18='?' (DbType = DateTime2), @p19='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [OrderItems] SET [OrderDate] = @p0, [OrderId] = @p1, [OrderItemStatus] = @p2, [ProductId] = @p3, [ProductPrice] = @p4, [Quantity] = @p5, [TotalPrice] = @p6
OUTPUT 1
WHERE [OrderItemId] = @p7;
UPDATE [Orders] SET [NumberOfItems] = @p8, [OrderDate] = @p9, [OrderStatus] = @p10, [PaymentDate] = @p11, [PaymentMethod] = @p12, [PaymentStatus] = @p13, [PaymentType] = @p14, [TotalCost] = @p15, [TotalQuantity] = @p16, [UpdatedBy] = @p17, [UpdatedDate] = @p18, [UserId] = @p19
OUTPUT 1
WHERE [OrderId] = @p20;
2025-05-09 01:53:47.380 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.381 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 0ms reading results.
2025-05-09 01:53:47.382 +05:30 [DBG] Committing transaction.
2025-05-09 01:53:47.384 +05:30 [DBG] Committed transaction.
2025-05-09 01:53:47.384 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.385 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 01:53:47.387 +05:30 [DBG] Disposing transaction.
2025-05-09 01:53:47.387 +05:30 [DBG] An entity of type 'Orders' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:53:47.389 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:53:47.391 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 2 entities written to the database.
2025-05-09 01:53:47.392 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:53:47.394 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:53:47.395 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:53:47.396 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:53:47.397 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:53:47.398 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:53:47.399 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem) in 4881.0958ms
2025-05-09 01:53:47.401 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 01:53:47.403 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:53:47.404 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:53:47.405 +05:30 [DBG] Disposed connection to database '' on server '' (0ms).
2025-05-09 01:53:47.411 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Order/ReturnOrderItems - 200 null application/json; charset=utf-8 4965.5646ms
2025-05-09 01:55:07.102 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Order/customer-order/1 - null null
2025-05-09 01:55:07.140 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/customer-order/1'
2025-05-09 01:55:07.142 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)' with route pattern 'api/Order/customer-order/{orderId}' is valid for the request path '/api/Order/customer-order/1'
2025-05-09 01:55:07.144 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)'
2025-05-09 01:55:07.146 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:55:07.147 +05:30 [DBG] Successfully validated the token.
2025-05-09 01:55:07.147 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 01:55:07.148 +05:30 [DBG] Authorization was successful.
2025-05-09 01:55:07.149 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)'
2025-05-09 01:55:07.156 +05:30 [INF] Route matched with {action = "GetCustomerOrderById", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerOrderById(Int64) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 01:55:07.159 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:55:07.160 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:55:07.161 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:55:07.164 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:55:07.166 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:55:07.176 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 01:55:07.180 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 01:55:07.182 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' ...
2025-05-09 01:55:07.184 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' using the name 'orderId' in request data ...
2025-05-09 01:55:07.193 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-09 01:55:07.194 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-09 01:55:07.196 +05:30 [DBG] Attempting to validate the bound parameter 'orderId' of type 'System.Int64' ...
2025-05-09 01:55:07.198 +05:30 [DBG] Done attempting to validate the bound parameter 'orderId' of type 'System.Int64'.
2025-05-09 01:55:07.207 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:55:07.212 +05:30 [DBG] Compiling query expression: 
'DbSet<Orders>()
    .Include(o => o.OrderItems)
    .ThenInclude(oi => oi.Product)
    .Include(o => o.OrderStatusNavigation)
    .Include(o => o.PaymentTypeNavigation)
    .Include(o => o.PaymentMethodNavigation)
    .Include(o => o.PaymentStatusNavigation)
    .FirstOrDefault(o => o.OrderId == __orderId_0 && o.UserId == __userId_1)'
2025-05-09 01:55:07.215 +05:30 [DBG] Including navigation: 'Orders.OrderItems'.
2025-05-09 01:55:07.217 +05:30 [DBG] Including navigation: 'Orders.OrderStatusNavigation'.
2025-05-09 01:55:07.224 +05:30 [DBG] Including navigation: 'Orders.PaymentTypeNavigation'.
2025-05-09 01:55:07.226 +05:30 [DBG] Including navigation: 'Orders.PaymentMethodNavigation'.
2025-05-09 01:55:07.230 +05:30 [DBG] Including navigation: 'Orders.PaymentStatusNavigation'.
2025-05-09 01:55:07.231 +05:30 [DBG] Including navigation: 'OrderItems.Product'.
2025-05-09 01:55:07.265 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Orders>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Orders>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Orders.OrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Orders.NumberOfItems (int) Required, 1], [Property: Orders.OrderDate (DateTime) Required ValueGenerated.OnAdd, 2], [Property: Orders.OrderStatus (int) Required FK Index, 3], [Property: Orders.PaymentDate (DateTime) Required, 4], [Property: Orders.PaymentMethod (int) Required FK Index, 5], [Property: Orders.PaymentStatus (int) Required FK Index, 6], [Property: Orders.PaymentType (int) Required FK Index, 7], [Property: Orders.TotalCost (decimal) Required, 8], [Property: Orders.TotalQuantity (int) Required, 9], [Property: Orders.UpdatedBy (long) Required FK Index, 10], [Property: Orders.UpdatedDate (DateTime) Required ValueGenerated.OnAdd, 11], [Property: Orders.UserId (long) Required FK Index, 12] }
                1 -> 0
                2 -> 13
                3 -> 14
                4 -> 15
                5 -> 16
                6 -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 18], [Property: OrderItems.OrderId (long) Required FK Index, 19], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 20], [Property: OrderItems.ProductId (long) Required FK Index, 21], [Property: OrderItems.ProductPrice (decimal) Required, 22], [Property: OrderItems.Quantity (int) Required, 23], [Property: OrderItems.TotalPrice (decimal) Required, 24] }
                7 -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Products.AvailableQuantity (int) Required, 26], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 27], [Property: Products.CreatedAt (DateTime) Required, 28], [Property: Products.CreatedBy (long) Required FK Index, 29], [Property: Products.Description (string) MaxLength(225), 30], [Property: Products.IsDeleted (bool) Required, 31], [Property: Products.LastRestockAt (DateTime) Required, 32], [Property: Products.MinimumRequiredQuantity (int) Required, 33], [Property: Products.Name (string) Required MaxLength(100), 34], [Property: Products.Price (decimal) Required, 35], [Property: Products.ProductStatus (int) Required, 36], [Property: Products.UpdatedAt (DateTime) Required, 37], [Property: Products.UpdatedBy (long) Required FK Index, 38] }
                8 -> 17
                9 -> 25
                10 -> Dictionary<IProperty, int> { [Property: OrderStatus.StatusId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: OrderStatus.Name (string) Required MaxLength(100), 39] }
                11 -> Dictionary<IProperty, int> { [Property: PaymentType.PaymentTypeId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 14], [Property: PaymentType.Name (string) Required MaxLength(100), 40] }
                12 -> Dictionary<IProperty, int> { [Property: PaymentMethod.PaymentMethodId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: PaymentMethod.Name (string) Required MaxLength(100), 41] }
                13 -> Dictionary<IProperty, int> { [Property: PaymentStatus.PaymentStatusId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 16], [Property: PaymentStatus.Name (string) Required MaxLength(100), 42] }
            SELECT s.OrderId, s.NumberOfItems, s.OrderDate, s.OrderStatus, s.PaymentDate, s.PaymentMethod, s.PaymentStatus, s.PaymentType, s.TotalCost, s.TotalQuantity, s.UpdatedBy, s.UpdatedDate, s.UserId, s.StatusId, s.PaymentTypeId, s.PaymentMethodId, s.PaymentStatusId, s0.OrderItemId, s0.OrderDate, s0.OrderId, s0.OrderItemStatus, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.TotalPrice, s0.ProductId0, s0.AvailableQuantity, s0.CategoryId, s0.CreatedAt, s0.CreatedBy, s0.Description, s0.IsDeleted, s0.LastRestockAt, s0.MinimumRequiredQuantity, s0.Name, s0.Price, s0.ProductStatus, s0.UpdatedAt, s0.UpdatedBy, s.Name, s.Name0, s.Name1, s.Name2
            FROM 
            (
                SELECT TOP(1) o.OrderId, o.NumberOfItems, o.OrderDate, o.OrderStatus, o.PaymentDate, o.PaymentMethod, o.PaymentStatus, o.PaymentType, o.TotalCost, o.TotalQuantity, o.UpdatedBy, o.UpdatedDate, o.UserId, o0.StatusId, o0.Name, p.PaymentTypeId, p.Name AS Name0, p0.PaymentMethodId, p0.Name AS Name1, p1.PaymentStatusId, p1.Name AS Name2
                FROM Orders AS o
                INNER JOIN OrderStatus AS o0 ON o.OrderStatus == o0.StatusId
                INNER JOIN PaymentType AS p ON o.PaymentType == p.PaymentTypeId
                INNER JOIN PaymentMethod AS p0 ON o.PaymentMethod == p0.PaymentMethodId
                INNER JOIN PaymentStatus AS p1 ON o.PaymentStatus == p1.PaymentStatusId
                WHERE (o.OrderId == @__orderId_0) && (o.UserId == @__userId_1)
            ) AS s
            LEFT JOIN 
            (
                SELECT o1.OrderItemId, o1.OrderDate, o1.OrderId, o1.OrderItemStatus, o1.ProductId, o1.ProductPrice, o1.Quantity, o1.TotalPrice, p2.ProductId AS ProductId0, p2.AvailableQuantity, p2.CategoryId, p2.CreatedAt, p2.CreatedBy, p2.Description, p2.IsDeleted, p2.LastRestockAt, p2.MinimumRequiredQuantity, p2.Name, p2.Price, p2.ProductStatus, p2.UpdatedAt, p2.UpdatedBy
                FROM OrderItems AS o1
                INNER JOIN Products AS p2 ON o1.ProductId == p2.ProductId
            ) AS s0 ON s.OrderId == s0.OrderId
            ORDER BY s.OrderId ASC, s.StatusId ASC, s.PaymentTypeId ASC, s.PaymentMethodId ASC, s.PaymentStatusId ASC, s0.OrderItemId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Orders.OrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Orders.NumberOfItems (int) Required, 1], [Property: Orders.OrderDate (DateTime) Required ValueGenerated.OnAdd, 2], [Property: Orders.OrderStatus (int) Required FK Index, 3], [Property: Orders.PaymentDate (DateTime) Required, 4], [Property: Orders.PaymentMethod (int) Required FK Index, 5], [Property: Orders.PaymentStatus (int) Required FK Index, 6], [Property: Orders.PaymentType (int) Required FK Index, 7], [Property: Orders.TotalCost (decimal) Required, 8], [Property: Orders.TotalQuantity (int) Required, 9], [Property: Orders.UpdatedBy (long) Required FK Index, 10], [Property: Orders.UpdatedDate (DateTime) Required ValueGenerated.OnAdd, 11], [Property: Orders.UserId (long) Required FK Index, 12] }
                1 -> 0
                2 -> 13
                3 -> 14
                4 -> 15
                5 -> 16
                6 -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 18], [Property: OrderItems.OrderId (long) Required FK Index, 19], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 20], [Property: OrderItems.ProductId (long) Required FK Index, 21], [Property: OrderItems.ProductPrice (decimal) Required, 22], [Property: OrderItems.Quantity (int) Required, 23], [Property: OrderItems.TotalPrice (decimal) Required, 24] }
                7 -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Products.AvailableQuantity (int) Required, 26], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 27], [Property: Products.CreatedAt (DateTime) Required, 28], [Property: Products.CreatedBy (long) Required FK Index, 29], [Property: Products.Description (string) MaxLength(225), 30], [Property: Products.IsDeleted (bool) Required, 31], [Property: Products.LastRestockAt (DateTime) Required, 32], [Property: Products.MinimumRequiredQuantity (int) Required, 33], [Property: Products.Name (string) Required MaxLength(100), 34], [Property: Products.Price (decimal) Required, 35], [Property: Products.ProductStatus (int) Required, 36], [Property: Products.UpdatedAt (DateTime) Required, 37], [Property: Products.UpdatedBy (long) Required FK Index, 38] }
                8 -> 17
                9 -> 25
                10 -> Dictionary<IProperty, int> { [Property: OrderStatus.StatusId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: OrderStatus.Name (string) Required MaxLength(100), 39] }
                11 -> Dictionary<IProperty, int> { [Property: PaymentType.PaymentTypeId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 14], [Property: PaymentType.Name (string) Required MaxLength(100), 40] }
                12 -> Dictionary<IProperty, int> { [Property: PaymentMethod.PaymentMethodId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: PaymentMethod.Name (string) Required MaxLength(100), 41] }
                13 -> Dictionary<IProperty, int> { [Property: PaymentStatus.PaymentStatusId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 16], [Property: PaymentStatus.Name (string) Required MaxLength(100), 42] }
            SELECT s.OrderId, s.NumberOfItems, s.OrderDate, s.OrderStatus, s.PaymentDate, s.PaymentMethod, s.PaymentStatus, s.PaymentType, s.TotalCost, s.TotalQuantity, s.UpdatedBy, s.UpdatedDate, s.UserId, s.StatusId, s.PaymentTypeId, s.PaymentMethodId, s.PaymentStatusId, s0.OrderItemId, s0.OrderDate, s0.OrderId, s0.OrderItemStatus, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.TotalPrice, s0.ProductId0, s0.AvailableQuantity, s0.CategoryId, s0.CreatedAt, s0.CreatedBy, s0.Description, s0.IsDeleted, s0.LastRestockAt, s0.MinimumRequiredQuantity, s0.Name, s0.Price, s0.ProductStatus, s0.UpdatedAt, s0.UpdatedBy, s.Name, s.Name0, s.Name1, s.Name2
            FROM 
            (
                SELECT TOP(1) o.OrderId, o.NumberOfItems, o.OrderDate, o.OrderStatus, o.PaymentDate, o.PaymentMethod, o.PaymentStatus, o.PaymentType, o.TotalCost, o.TotalQuantity, o.UpdatedBy, o.UpdatedDate, o.UserId, o0.StatusId, o0.Name, p.PaymentTypeId, p.Name AS Name0, p0.PaymentMethodId, p0.Name AS Name1, p1.PaymentStatusId, p1.Name AS Name2
                FROM Orders AS o
                INNER JOIN OrderStatus AS o0 ON o.OrderStatus == o0.StatusId
                INNER JOIN PaymentType AS p ON o.PaymentType == p.PaymentTypeId
                INNER JOIN PaymentMethod AS p0 ON o.PaymentMethod == p0.PaymentMethodId
                INNER JOIN PaymentStatus AS p1 ON o.PaymentStatus == p1.PaymentStatusId
                WHERE (o.OrderId == @__orderId_0) && (o.UserId == @__userId_1)
            ) AS s
            LEFT JOIN 
            (
                SELECT o1.OrderItemId, o1.OrderDate, o1.OrderId, o1.OrderItemStatus, o1.ProductId, o1.ProductPrice, o1.Quantity, o1.TotalPrice, p2.ProductId AS ProductId0, p2.AvailableQuantity, p2.CategoryId, p2.CreatedAt, p2.CreatedBy, p2.Description, p2.IsDeleted, p2.LastRestockAt, p2.MinimumRequiredQuantity, p2.Name, p2.Price, p2.ProductStatus, p2.UpdatedAt, p2.UpdatedBy
                FROM OrderItems AS o1
                INNER JOIN Products AS p2 ON o1.ProductId == p2.ProductId
            ) AS s0 ON s.OrderId == s0.OrderId
            ORDER BY s.OrderId ASC, s.StatusId ASC, s.PaymentTypeId ASC, s.PaymentMethodId ASC, s.PaymentStatusId ASC, s0.OrderItemId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Orders entity;
                OrderStatus entity;
                PaymentType entity;
                PaymentMethod entity;
                PaymentStatus entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Orders instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Orders);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Orders.OrderId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Orders)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")]: 
                                {
                                    return 
                                    {
                                        Orders instance;
                                        instance = new Orders();
                                        instance.<OrderId>k__BackingField = dataReader.GetInt64(0);
                                        instance.<NumberOfItems>k__BackingField = dataReader.GetInt32(1);
                                        instance.<OrderDate>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<OrderStatus>k__BackingField = dataReader.GetInt32(3);
                                        instance.<PaymentDate>k__BackingField = dataReader.GetDateTime(4);
                                        instance.<PaymentMethod>k__BackingField = dataReader.GetInt32(5);
                                        instance.<PaymentStatus>k__BackingField = dataReader.GetInt32(6);
                                        instance.<PaymentType>k__BackingField = dataReader.GetInt32(7);
                                        instance.<TotalCost>k__BackingField = dataReader.GetDecimal(8);
                                        instance.<TotalQuantity>k__BackingField = dataReader.GetInt32(9);
                                        instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(10);
                                        instance.<UpdatedDate>k__BackingField = dataReader.GetDateTime(11);
                                        instance.<UserId>k__BackingField = dataReader.GetInt64(12);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Orders)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                entity = 
                {
                    MaterializationContext materializationContext4;
                    IEntityType entityType4;
                    OrderStatus instance4;
                    InternalEntityEntry entry4;
                    bool hasNullKey4;
                    materializationContext4 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance4 = default(OrderStatus);
                    entry4 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: OrderStatus.StatusId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(13) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey4);
                    !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
                    {
                        entityType4 = entry4.EntityType;
                        return instance4 = (OrderStatus)entry4.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot4;
                        shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType4 = [LIFTABLE Constant: EntityType: OrderStatus | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus")];
                        instance4 = switch (entityType4)
                        {
                            case [LIFTABLE Constant: EntityType: OrderStatus | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus")]: 
                                {
                                    return 
                                    {
                                        OrderStatus instance;
                                        instance = new OrderStatus();
                                        instance.<StatusId>k__BackingField = dataReader.GetInt32(13);
                                        instance.<Name>k__BackingField = dataReader.GetString(39);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext4.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: OrderStatus | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(OrderStatus)
                        }
                        ;
                        entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType4, 
                            entity: instance4, 
                            snapshot: shadowSnapshot4);
                        return instance4;
                    } : default(void);
                    return instance4;
                };
                entity = 
                {
                    MaterializationContext materializationContext5;
                    IEntityType entityType5;
                    PaymentType instance5;
                    InternalEntityEntry entry5;
                    bool hasNullKey5;
                    materializationContext5 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance5 = default(PaymentType);
                    entry5 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: PaymentType.PaymentTypeId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentType").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(14) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey5);
                    !(hasNullKey5) ? entry5 != default(InternalEntityEntry) ? 
                    {
                        entityType5 = entry5.EntityType;
                        return instance5 = (PaymentType)entry5.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot5;
                        shadowSnapshot5 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType5 = [LIFTABLE Constant: EntityType: PaymentType | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentType")];
                        instance5 = switch (entityType5)
                        {
                            case [LIFTABLE Constant: EntityType: PaymentType | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentType")]: 
                                {
                                    return 
                                    {
                                        PaymentType instance;
                                        instance = new PaymentType();
                                        instance.<PaymentTypeId>k__BackingField = dataReader.GetInt32(14);
                                        instance.<Name>k__BackingField = dataReader.GetString(40);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext5.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: PaymentType | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentType")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(PaymentType)
                        }
                        ;
                        entry5 = entityType5 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType5, 
                            entity: instance5, 
                            snapshot: shadowSnapshot5);
                        return instance5;
                    } : default(void);
                    return instance5;
                };
                entity = 
                {
                    MaterializationContext materializationContext6;
                    IEntityType entityType6;
                    PaymentMethod instance6;
                    InternalEntityEntry entry6;
                    bool hasNullKey6;
                    materializationContext6 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance6 = default(PaymentMethod);
                    entry6 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: PaymentMethod.PaymentMethodId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentMethod").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(15) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey6);
                    !(hasNullKey6) ? entry6 != default(InternalEntityEntry) ? 
                    {
                        entityType6 = entry6.EntityType;
                        return instance6 = (PaymentMethod)entry6.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot6;
                        shadowSnapshot6 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType6 = [LIFTABLE Constant: EntityType: PaymentMethod | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentMethod")];
                        instance6 = switch (entityType6)
                        {
                            case [LIFTABLE Constant: EntityType: PaymentMethod | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentMethod")]: 
                                {
                                    return 
                                    {
                                        PaymentMethod instance;
                                        instance = new PaymentMethod();
                                        instance.<PaymentMethodId>k__BackingField = dataReader.GetInt32(15);
                                        instance.<Name>k__BackingField = dataReader.GetString(41);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext6.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: PaymentMethod | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentMethod")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(PaymentMethod)
                        }
                        ;
                        entry6 = entityType6 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType6, 
                            entity: instance6, 
                            snapshot: shadowSnapshot6);
                        return instance6;
                    } : default(void);
                    return instance6;
                };
                entity = 
                {
                    MaterializationContext materializationContext7;
                    IEntityType entityType7;
                    PaymentStatus instance7;
                    InternalEntityEntry entry7;
                    bool hasNullKey7;
                    materializationContext7 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance7 = default(PaymentStatus);
                    entry7 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: PaymentStatus.PaymentStatusId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentStatus").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(16) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey7);
                    !(hasNullKey7) ? entry7 != default(InternalEntityEntry) ? 
                    {
                        entityType7 = entry7.EntityType;
                        return instance7 = (PaymentStatus)entry7.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot7;
                        shadowSnapshot7 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType7 = [LIFTABLE Constant: EntityType: PaymentStatus | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentStatus")];
                        instance7 = switch (entityType7)
                        {
                            case [LIFTABLE Constant: EntityType: PaymentStatus | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentStatus")]: 
                                {
                                    return 
                                    {
                                        PaymentStatus instance;
                                        instance = new PaymentStatus();
                                        instance.<PaymentStatusId>k__BackingField = dataReader.GetInt32(16);
                                        instance.<Name>k__BackingField = dataReader.GetString(42);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext7.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: PaymentStatus | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentStatus")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(PaymentStatus)
                        }
                        ;
                        entry7 = entityType7 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType7, 
                            entity: instance7, 
                            snapshot: shadowSnapshot7);
                        return instance7;
                    } : default(void);
                    return instance7;
                };
                resultContext.Values = new object[]
                { 
                    entity, 
                    entity, 
                    entity, 
                    entity, 
                    entity 
                };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Orders, Orders>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Orders)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(long?)dataReader.GetInt64(0), 
                        (object)(int?)dataReader.GetInt32(13), 
                        (object)(int?)dataReader.GetInt32(14), 
                        (object)(int?)dataReader.GetInt32(15), 
                        (object)(int?)dataReader.GetInt32(16) 
                    }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(long?)dataReader.GetInt64(0), 
                        (object)(int?)dataReader.GetInt32(13), 
                        (object)(int?)dataReader.GetInt32(14), 
                        (object)(int?)dataReader.GetInt32(15), 
                        (object)(int?)dataReader.GetInt32(16) 
                    }], 
                    navigation: [LIFTABLE Constant: Navigation: Orders.OrderItems (ICollection<OrderItems>) Collection ToDependent OrderItems Inverse: Order | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("OrderItems")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Orders, ICollection<OrderItems>, OrderItems> | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("OrderItems").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
                ShaperProcessingExpressionVisitor.IncludeReference<Orders, Orders, OrderStatus>(
                    queryContext: queryContext, 
                    entity: (Orders)(resultContext.Values[0]), 
                    relatedEntity: (OrderStatus)(resultContext.Values[1]), 
                    navigation: [LIFTABLE Constant: Navigation: Orders.OrderStatusNavigation (OrderStatus) ToPrincipal OrderStatus | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("OrderStatusNavigation")], 
                    inverseNavigation: default(INavigation), 
                    fixup: (namelessParameter{18}, namelessParameter{19}) => 
                    {
                        return namelessParameter{18}.<OrderStatusNavigation>k__BackingField = namelessParameter{19};
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.IncludeReference<Orders, Orders, PaymentType>(
                    queryContext: queryContext, 
                    entity: (Orders)(resultContext.Values[0]), 
                    relatedEntity: (PaymentType)(resultContext.Values[2]), 
                    navigation: [LIFTABLE Constant: Navigation: Orders.PaymentTypeNavigation (PaymentType) ToPrincipal PaymentType | Resolver: namelessParameter{20} => namelessParameter{20}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("PaymentTypeNavigation")], 
                    inverseNavigation: default(INavigation), 
                    fixup: (namelessParameter{21}, namelessParameter{22}) => 
                    {
                        return namelessParameter{21}.<PaymentTypeNavigation>k__BackingField = namelessParameter{22};
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.IncludeReference<Orders, Orders, PaymentMethod>(
                    queryContext: queryContext, 
                    entity: (Orders)(resultContext.Values[0]), 
                    relatedEntity: (PaymentMethod)(resultContext.Values[3]), 
                    navigation: [LIFTABLE Constant: Navigation: Orders.PaymentMethodNavigation (PaymentMethod) ToPrincipal PaymentMethod | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("PaymentMethodNavigation")], 
                    inverseNavigation: default(INavigation), 
                    fixup: (namelessParameter{24}, namelessParameter{25}) => 
                    {
                        return namelessParameter{24}.<PaymentMethodNavigation>k__BackingField = namelessParameter{25};
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.IncludeReference<Orders, Orders, PaymentStatus>(
                    queryContext: queryContext, 
                    entity: (Orders)(resultContext.Values[0]), 
                    relatedEntity: (PaymentStatus)(resultContext.Values[4]), 
                    navigation: [LIFTABLE Constant: Navigation: Orders.PaymentStatusNavigation (PaymentStatus) ToPrincipal PaymentStatus | Resolver: namelessParameter{26} => namelessParameter{26}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("PaymentStatusNavigation")], 
                    inverseNavigation: default(INavigation), 
                    fixup: (namelessParameter{27}, namelessParameter{28}) => 
                    {
                        return namelessParameter{27}.<PaymentStatusNavigation>k__BackingField = namelessParameter{28};
                    }, 
                    trackingQuery: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Orders, OrderItems>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(long?)dataReader.GetInt64(0), 
                    (object)(int?)dataReader.GetInt32(13), 
                    (object)(int?)dataReader.GetInt32(14), 
                    (object)(int?)dataReader.GetInt32(15), 
                    (object)(int?)dataReader.GetInt32(16) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(long?)dataReader.GetInt64(0), 
                    (object)(int?)dataReader.GetInt32(13), 
                    (object)(int?)dataReader.GetInt32(14), 
                    (object)(int?)dataReader.GetInt32(15), 
                    (object)(int?)dataReader.GetInt32(16) 
                }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)dataReader.IsDBNull(17) ? default(long?) : (long?)dataReader.GetInt64(17), 
                    (object)dataReader.IsDBNull(25) ? default(long?) : (long?)dataReader.GetInt64(25) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right, 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    OrderItems entity;
                    Products entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        OrderItems instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(OrderItems);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: OrderItems.OrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetInt64(17) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (OrderItems)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{29} => namelessParameter{29}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{30} => namelessParameter{30}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]: 
                                    {
                                        return 
                                        {
                                            OrderItems instance;
                                            instance = new OrderItems();
                                            instance.<OrderItemId>k__BackingField = dataReader.IsDBNull(17) ? default(long) : dataReader.GetInt64(17);
                                            instance.<OrderDate>k__BackingField = dataReader.IsDBNull(18) ? default(DateTime) : dataReader.GetDateTime(18);
                                            instance.<OrderId>k__BackingField = dataReader.IsDBNull(19) ? default(long) : dataReader.GetInt64(19);
                                            instance.<OrderItemStatus>k__BackingField = dataReader.IsDBNull(20) ? default(int) : dataReader.GetInt32(20);
                                            instance.<ProductId>k__BackingField = dataReader.IsDBNull(21) ? default(long) : dataReader.GetInt64(21);
                                            instance.<ProductPrice>k__BackingField = dataReader.IsDBNull(22) ? default(decimal) : dataReader.GetDecimal(22);
                                            instance.<Quantity>k__BackingField = dataReader.IsDBNull(23) ? default(int) : dataReader.GetInt32(23);
                                            instance.<TotalPrice>k__BackingField = dataReader.IsDBNull(24) ? default(decimal) : dataReader.GetDecimal(24);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{31} => namelessParameter{31}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(OrderItems)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        Products instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(Products);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(25) ? default(object) : (object)dataReader.GetInt64(25) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (Products)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{32} => namelessParameter{32}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{33} => namelessParameter{33}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                                    {
                                        return 
                                        {
                                            Products instance;
                                            instance = new Products();
                                            instance.<ProductId>k__BackingField = dataReader.IsDBNull(25) ? default(long) : dataReader.GetInt64(25);
                                            instance.<AvailableQuantity>k__BackingField = dataReader.IsDBNull(26) ? default(int) : dataReader.GetInt32(26);
                                            instance.<CategoryId>k__BackingField = dataReader.IsDBNull(27) ? default(int) : dataReader.GetInt32(27);
                                            instance.<CreatedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime) : dataReader.GetDateTime(28);
                                            instance.<CreatedBy>k__BackingField = dataReader.IsDBNull(29) ? default(long) : dataReader.GetInt64(29);
                                            instance.<Description>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                            instance.<IsDeleted>k__BackingField = dataReader.IsDBNull(31) ? default(bool) : dataReader.GetBoolean(31);
                                            instance.<LastRestockAt>k__BackingField = dataReader.IsDBNull(32) ? default(DateTime) : dataReader.GetDateTime(32);
                                            instance.<MinimumRequiredQuantity>k__BackingField = dataReader.IsDBNull(33) ? default(int) : dataReader.GetInt32(33);
                                            instance.<Name>k__BackingField = dataReader.IsDBNull(34) ? default(string) : dataReader.GetString(34);
                                            instance.<Price>k__BackingField = dataReader.IsDBNull(35) ? default(decimal) : dataReader.GetDecimal(35);
                                            instance.<ProductStatus>k__BackingField = dataReader.IsDBNull(36) ? default(int) : dataReader.GetInt32(36);
                                            instance.<UpdatedAt>k__BackingField = dataReader.IsDBNull(37) ? default(DateTime) : dataReader.GetDateTime(37);
                                            instance.<UpdatedBy>k__BackingField = dataReader.IsDBNull(38) ? default(long) : dataReader.GetInt64(38);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{34} => namelessParameter{34}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Products)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    ShaperProcessingExpressionVisitor.IncludeReference<OrderItems, OrderItems, Products>(
                        queryContext: queryContext, 
                        entity: entity, 
                        relatedEntity: entity, 
                        navigation: [LIFTABLE Constant: Navigation: OrderItems.Product (Products) ToPrincipal Products | Resolver: namelessParameter{35} => namelessParameter{35}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindNavigation("Product")], 
                        inverseNavigation: default(INavigation), 
                        fixup: (namelessParameter{36}, namelessParameter{37}) => 
                        {
                            return namelessParameter{36}.<Product>k__BackingField = namelessParameter{37};
                        }, 
                        trackingQuery: True);
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: OrderItems.Order (Orders) ToPrincipal Orders Inverse: OrderItems | Resolver: namelessParameter{38} => namelessParameter{38}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindNavigation("Order")], 
                fixup: (namelessParameter{39}, namelessParameter{40}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Orders, ICollection<OrderItems>, OrderItems> | Resolver: namelessParameter{41} => namelessParameter{41}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("OrderItems").GetCollectionAccessor()].Add(
                        entity: namelessParameter{39}, 
                        value: namelessParameter{40}, 
                        forMaterialization: True);
                    return namelessParameter{40}.<Order>k__BackingField = namelessParameter{39};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Orders)(resultContext.Values[0]) : default(Orders);
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 01:55:07.420 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:55:07.424 +05:30 [DBG] Created DbConnection. (3ms).
2025-05-09 01:55:07.426 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:55:07.428 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:55:07.429 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:55:07.430 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 01:55:07.431 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:55:07.432 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64), @__userId_1='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[OrderId], [s].[NumberOfItems], [s].[OrderDate], [s].[OrderStatus], [s].[PaymentDate], [s].[PaymentMethod], [s].[PaymentStatus], [s].[PaymentType], [s].[TotalCost], [s].[TotalQuantity], [s].[UpdatedBy], [s].[UpdatedDate], [s].[UserId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId], [s0].[OrderDate], [s0].[OrderId], [s0].[OrderItemStatus], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[TotalPrice], [s0].[ProductId0], [s0].[AvailableQuantity], [s0].[CategoryId], [s0].[CreatedAt], [s0].[CreatedBy], [s0].[Description], [s0].[IsDeleted], [s0].[LastRestockAt], [s0].[MinimumRequiredQuantity], [s0].[Name], [s0].[Price], [s0].[ProductStatus], [s0].[UpdatedAt], [s0].[UpdatedBy], [s].[Name], [s].[Name0], [s].[Name1], [s].[Name2]
FROM (
    SELECT TOP(1) [o].[OrderId], [o].[NumberOfItems], [o].[OrderDate], [o].[OrderStatus], [o].[PaymentDate], [o].[PaymentMethod], [o].[PaymentStatus], [o].[PaymentType], [o].[TotalCost], [o].[TotalQuantity], [o].[UpdatedBy], [o].[UpdatedDate], [o].[UserId], [o0].[StatusId], [o0].[Name], [p].[PaymentTypeId], [p].[Name] AS [Name0], [p0].[PaymentMethodId], [p0].[Name] AS [Name1], [p1].[PaymentStatusId], [p1].[Name] AS [Name2]
    FROM [Orders] AS [o]
    INNER JOIN [OrderStatus] AS [o0] ON [o].[OrderStatus] = [o0].[StatusId]
    INNER JOIN [PaymentType] AS [p] ON [o].[PaymentType] = [p].[PaymentTypeId]
    INNER JOIN [PaymentMethod] AS [p0] ON [o].[PaymentMethod] = [p0].[PaymentMethodId]
    INNER JOIN [PaymentStatus] AS [p1] ON [o].[PaymentStatus] = [p1].[PaymentStatusId]
    WHERE [o].[OrderId] = @__orderId_0 AND [o].[UserId] = @__userId_1
) AS [s]
LEFT JOIN (
    SELECT [o1].[OrderItemId], [o1].[OrderDate], [o1].[OrderId], [o1].[OrderItemStatus], [o1].[ProductId], [o1].[ProductPrice], [o1].[Quantity], [o1].[TotalPrice], [p2].[ProductId] AS [ProductId0], [p2].[AvailableQuantity], [p2].[CategoryId], [p2].[CreatedAt], [p2].[CreatedBy], [p2].[Description], [p2].[IsDeleted], [p2].[LastRestockAt], [p2].[MinimumRequiredQuantity], [p2].[Name], [p2].[Price], [p2].[ProductStatus], [p2].[UpdatedAt], [p2].[UpdatedBy]
    FROM [OrderItems] AS [o1]
    INNER JOIN [Products] AS [p2] ON [o1].[ProductId] = [p2].[ProductId]
) AS [s0] ON [s].[OrderId] = [s0].[OrderId]
ORDER BY [s].[OrderId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId]
2025-05-09 01:55:07.491 +05:30 [INF] Executed DbCommand (58ms) [Parameters=[@__orderId_0='?' (DbType = Int64), @__userId_1='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[OrderId], [s].[NumberOfItems], [s].[OrderDate], [s].[OrderStatus], [s].[PaymentDate], [s].[PaymentMethod], [s].[PaymentStatus], [s].[PaymentType], [s].[TotalCost], [s].[TotalQuantity], [s].[UpdatedBy], [s].[UpdatedDate], [s].[UserId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId], [s0].[OrderDate], [s0].[OrderId], [s0].[OrderItemStatus], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[TotalPrice], [s0].[ProductId0], [s0].[AvailableQuantity], [s0].[CategoryId], [s0].[CreatedAt], [s0].[CreatedBy], [s0].[Description], [s0].[IsDeleted], [s0].[LastRestockAt], [s0].[MinimumRequiredQuantity], [s0].[Name], [s0].[Price], [s0].[ProductStatus], [s0].[UpdatedAt], [s0].[UpdatedBy], [s].[Name], [s].[Name0], [s].[Name1], [s].[Name2]
FROM (
    SELECT TOP(1) [o].[OrderId], [o].[NumberOfItems], [o].[OrderDate], [o].[OrderStatus], [o].[PaymentDate], [o].[PaymentMethod], [o].[PaymentStatus], [o].[PaymentType], [o].[TotalCost], [o].[TotalQuantity], [o].[UpdatedBy], [o].[UpdatedDate], [o].[UserId], [o0].[StatusId], [o0].[Name], [p].[PaymentTypeId], [p].[Name] AS [Name0], [p0].[PaymentMethodId], [p0].[Name] AS [Name1], [p1].[PaymentStatusId], [p1].[Name] AS [Name2]
    FROM [Orders] AS [o]
    INNER JOIN [OrderStatus] AS [o0] ON [o].[OrderStatus] = [o0].[StatusId]
    INNER JOIN [PaymentType] AS [p] ON [o].[PaymentType] = [p].[PaymentTypeId]
    INNER JOIN [PaymentMethod] AS [p0] ON [o].[PaymentMethod] = [p0].[PaymentMethodId]
    INNER JOIN [PaymentStatus] AS [p1] ON [o].[PaymentStatus] = [p1].[PaymentStatusId]
    WHERE [o].[OrderId] = @__orderId_0 AND [o].[UserId] = @__userId_1
) AS [s]
LEFT JOIN (
    SELECT [o1].[OrderItemId], [o1].[OrderDate], [o1].[OrderId], [o1].[OrderItemStatus], [o1].[ProductId], [o1].[ProductPrice], [o1].[Quantity], [o1].[TotalPrice], [p2].[ProductId] AS [ProductId0], [p2].[AvailableQuantity], [p2].[CategoryId], [p2].[CreatedAt], [p2].[CreatedBy], [p2].[Description], [p2].[IsDeleted], [p2].[LastRestockAt], [p2].[MinimumRequiredQuantity], [p2].[Name], [p2].[Price], [p2].[ProductStatus], [p2].[UpdatedAt], [p2].[UpdatedBy]
    FROM [OrderItems] AS [o1]
    INNER JOIN [Products] AS [p2] ON [o1].[ProductId] = [p2].[ProductId]
) AS [s0] ON [s].[OrderId] = [s0].[OrderId]
ORDER BY [s].[OrderId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId]
2025-05-09 01:55:07.496 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Orders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:55:07.500 +05:30 [DBG] The navigation 'Orders.OrderStatusNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:55:07.503 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderStatus' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:55:07.511 +05:30 [DBG] The navigation 'Orders.PaymentTypeNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:55:07.512 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'PaymentType' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:55:07.519 +05:30 [DBG] The navigation 'Orders.PaymentMethodNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:55:07.524 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'PaymentMethod' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:55:07.529 +05:30 [DBG] The navigation 'Orders.PaymentStatusNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:55:07.530 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'PaymentStatus' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:55:07.541 +05:30 [DBG] The navigation 'OrderItems.OrderItemStatusNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:55:07.543 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:55:07.544 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:55:07.545 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:55:07.546 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:55:07.547 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:55:07.548 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:55:07.549 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:55:07.552 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 55ms reading results.
2025-05-09 01:55:07.554 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:55:07.555 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:55:07.560 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:55:07.562 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:55:07.563 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:55:07.564 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:55:07.564 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:55:07.565 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.CustomerOrderDetailsResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-09 01:55:07.574 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem) in 398.3216ms
2025-05-09 01:55:07.583 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)'
2025-05-09 01:55:07.585 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:55:07.587 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:55:07.588 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 01:55:07.592 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Order/customer-order/1 - 200 null application/json; charset=utf-8 493.0324ms
2025-05-09 01:56:11.815 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Product/search?keyword=fen - null null
2025-05-09 01:56:11.825 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/search'
2025-05-09 01:56:11.827 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)' with route pattern 'api/Product/search' is valid for the request path '/api/Product/search'
2025-05-09 01:56:11.830 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)'
2025-05-09 01:56:11.833 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:56:11.834 +05:30 [DBG] Successfully validated the token.
2025-05-09 01:56:11.835 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 01:56:11.836 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)'
2025-05-09 01:56:11.843 +05:30 [INF] Route matched with {action = "SearchProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SearchProducts(System.String) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 01:56:11.851 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:56:11.856 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:56:11.858 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:56:11.862 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:56:11.866 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:56:11.868 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 01:56:11.870 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 01:56:11.876 +05:30 [DBG] Attempting to bind parameter 'keyword' of type 'System.String' ...
2025-05-09 01:56:11.878 +05:30 [DBG] Attempting to bind parameter 'keyword' of type 'System.String' using the name 'keyword' in request data ...
2025-05-09 01:56:11.880 +05:30 [DBG] Done attempting to bind parameter 'keyword' of type 'System.String'.
2025-05-09 01:56:11.881 +05:30 [DBG] Done attempting to bind parameter 'keyword' of type 'System.String'.
2025-05-09 01:56:11.882 +05:30 [DBG] Attempting to validate the bound parameter 'keyword' of type 'System.String' ...
2025-05-09 01:56:11.883 +05:30 [DBG] Done attempting to validate the bound parameter 'keyword' of type 'System.String'.
2025-05-09 01:56:11.887 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:56:11.893 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .Where(p => !(p.IsDeleted) && p.Name.ToLower().Contains(__ToLower_0))'
2025-05-09 01:56:11.917 +05:30 [DBG] Generated query execution expression: 
'queryContext => 
{
    queryContext.AddParameter(
        name: "__ToLower_0_contains", 
        value: (object)Invoke(queryContext => SqlServerSqlTranslatingExpressionVisitor.ConstructLikePatternParameter(
            queryContext: queryContext, 
            baseParameterName: "__ToLower_0", 
            methodType: Contains), queryContext));
    return SingleQueryingEnumerable.Create<Products>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE Not(p.IsDeleted) && (LOWER(p.Name) LIKE @__ToLower_0_contains ESCAPE N'\')) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE Not(p.IsDeleted) && (LOWER(p.Name) LIKE @__ToLower_0_contains ESCAPE N'\'), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Products entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Products instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Products);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Products)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                            {
                                return 
                                {
                                    Products instance;
                                    instance = new Products();
                                    instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                    instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Name>k__BackingField = dataReader.GetString(9);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                    instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Products)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True);
}'
2025-05-09 01:56:11.966 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:56:11.967 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 01:56:11.968 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:56:11.970 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:56:11.971 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:56:11.972 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:56:11.975 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-09 01:56:11.978 +05:30 [DBG] Executing DbCommand [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND LOWER([p].[Name]) LIKE @__ToLower_0_contains ESCAPE N'\'
2025-05-09 01:56:11.985 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND LOWER([p].[Name]) LIKE @__ToLower_0_contains ESCAPE N'\'
2025-05-09 01:56:11.988 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:56:11.991 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-09 01:56:11.994 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:56:11.997 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 01:56:11.999 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:56:12.003 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:56:12.004 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:56:12.006 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:56:12.010 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:56:12.012 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.ProductResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:56:12.014 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem) in 145.7787ms
2025-05-09 01:56:12.021 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)'
2025-05-09 01:56:12.023 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:56:12.025 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:56:12.027 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 01:56:12.029 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Product/search?keyword=fen - 200 null application/json; charset=utf-8 225.6195ms
2025-05-09 01:56:21.754 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Product/search?keyword=fan - null null
2025-05-09 01:56:21.765 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/search'
2025-05-09 01:56:21.767 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)' with route pattern 'api/Product/search' is valid for the request path '/api/Product/search'
2025-05-09 01:56:21.770 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)'
2025-05-09 01:56:21.772 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 01:56:21.775 +05:30 [DBG] Successfully validated the token.
2025-05-09 01:56:21.782 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 01:56:21.784 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)'
2025-05-09 01:56:21.789 +05:30 [INF] Route matched with {action = "SearchProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SearchProducts(System.String) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 01:56:21.798 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 01:56:21.801 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 01:56:21.803 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 01:56:21.805 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 01:56:21.816 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 01:56:21.818 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 01:56:21.821 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 01:56:21.829 +05:30 [DBG] Attempting to bind parameter 'keyword' of type 'System.String' ...
2025-05-09 01:56:21.831 +05:30 [DBG] Attempting to bind parameter 'keyword' of type 'System.String' using the name 'keyword' in request data ...
2025-05-09 01:56:21.833 +05:30 [DBG] Done attempting to bind parameter 'keyword' of type 'System.String'.
2025-05-09 01:56:21.835 +05:30 [DBG] Done attempting to bind parameter 'keyword' of type 'System.String'.
2025-05-09 01:56:21.838 +05:30 [DBG] Attempting to validate the bound parameter 'keyword' of type 'System.String' ...
2025-05-09 01:56:21.849 +05:30 [DBG] Done attempting to validate the bound parameter 'keyword' of type 'System.String'.
2025-05-09 01:56:21.852 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 01:56:21.868 +05:30 [DBG] Creating DbConnection.
2025-05-09 01:56:21.870 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 01:56:21.871 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:56:21.882 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:56:21.884 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 01:56:21.886 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 01:56:21.888 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-09 01:56:21.897 +05:30 [DBG] Executing DbCommand [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND LOWER([p].[Name]) LIKE @__ToLower_0_contains ESCAPE N'\'
2025-05-09 01:56:21.913 +05:30 [INF] Executed DbCommand (17ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND LOWER([p].[Name]) LIKE @__ToLower_0_contains ESCAPE N'\'
2025-05-09 01:56:21.918 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 01:56:21.920 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:56:21.931 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 12ms reading results.
2025-05-09 01:56:21.933 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:56:21.935 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 01:56:21.937 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 01:56:21.948 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 01:56:21.949 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 01:56:21.951 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 01:56:21.952 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 01:56:21.954 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.ProductResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 01:56:21.967 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem) in 148.2116ms
2025-05-09 01:56:21.970 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)'
2025-05-09 01:56:21.977 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 01:56:21.983 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 01:56:21.984 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 01:56:21.987 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Product/search?keyword=fan - 200 null application/json; charset=utf-8 232.5391ms
2025-05-09 10:30:11.931 +05:30 [INF] Starting up the application...
2025-05-09 10:30:12.950 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-09 10:30:13.269 +05:30 [DBG] Hosting starting
2025-05-09 10:30:13.387 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-09 10:30:13.402 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-09 10:30:13.425 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-09 10:30:13.433 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-09 10:30:13.441 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-09 10:30:13.448 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-09 10:30:13.452 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 10:30:13.457 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-09 10:30:13.462 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 10:30:13.471 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-09 10:30:13.475 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-09 10:30:13.479 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-09 10:30:13.481 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-09 10:30:13.495 +05:30 [DBG] Middleware loaded
2025-05-09 10:30:13.499 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-09 10:30:13.503 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-09 10:30:13.679 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-09 10:30:13.828 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-09 10:30:13.830 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-09 10:30:13.832 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-09 10:30:13.833 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-09 10:30:13.834 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-09 10:30:13.835 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-09 10:30:13.954 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-09 10:30:13.956 +05:30 [INF] Hosting environment: Development
2025-05-09 10:30:13.958 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-09 10:30:13.960 +05:30 [DBG] Hosting started
2025-05-09 10:30:14.182 +05:30 [DBG] Connection id "0HNCEMPH5MGB0" accepted.
2025-05-09 10:30:14.184 +05:30 [DBG] Connection id "0HNCEMPH5MGB0" started.
2025-05-09 10:30:14.187 +05:30 [DBG] Connection id "0HNCEMPH5MGB1" accepted.
2025-05-09 10:30:14.188 +05:30 [DBG] Connection id "0HNCEMPH5MGB1" started.
2025-05-09 10:30:14.211 +05:30 [DBG] Connection id "0HNCEMPH5MGB1" received FIN.
2025-05-09 10:30:14.211 +05:30 [DBG] Connection id "0HNCEMPH5MGB0" received FIN.
2025-05-09 10:30:14.235 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 10:30:14.235 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 10:30:14.319 +05:30 [DBG] Connection id "0HNCEMPH5MGB0" stopped.
2025-05-09 10:30:14.319 +05:30 [DBG] Connection id "0HNCEMPH5MGB1" stopped.
2025-05-09 10:30:14.326 +05:30 [DBG] Connection id "0HNCEMPH5MGB0" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 10:30:14.326 +05:30 [DBG] Connection id "0HNCEMPH5MGB1" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 10:30:14.637 +05:30 [DBG] Connection id "0HNCEMPH5MGB2" accepted.
2025-05-09 10:30:14.669 +05:30 [DBG] Connection id "0HNCEMPH5MGB2" started.
2025-05-09 10:30:14.766 +05:30 [DBG] Connection 0HNCEMPH5MGB2 established using the following protocol: "Tls12"
2025-05-09 10:30:14.897 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-09 10:30:15.130 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-09 10:30:15.165 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-09 10:30:15.171 +05:30 [DBG] Request did not match any endpoints
2025-05-09 10:30:15.281 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-09 10:30:15.284 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-09 10:30:15.317 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-09 10:30:15.323 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-09 10:30:15.326 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-09 10:30:15.326 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-09 10:30:15.331 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 452.4909ms
2025-05-09 10:30:15.368 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-09 10:30:15.372 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 46.1103ms
2025-05-09 10:30:15.452 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 126.1914ms
2025-05-09 10:30:15.713 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-09 10:30:15.719 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-09 10:30:15.721 +05:30 [DBG] Request did not match any endpoints
2025-05-09 10:30:15.756 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 42.8606ms
2025-05-09 10:42:20.655 +05:30 [INF] Starting up the application...
2025-05-09 10:42:21.593 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-09 10:42:21.697 +05:30 [DBG] Hosting starting
2025-05-09 10:42:21.742 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-09 10:42:21.754 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-09 10:42:21.764 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-09 10:42:21.769 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-09 10:42:21.773 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-09 10:42:21.780 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-09 10:42:21.784 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 10:42:21.787 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-09 10:42:21.789 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 10:42:21.797 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-09 10:42:21.800 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-09 10:42:21.802 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-09 10:42:21.803 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-09 10:42:21.811 +05:30 [DBG] Middleware loaded
2025-05-09 10:42:21.813 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-09 10:42:21.816 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-09 10:42:21.917 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-09 10:42:22.014 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-09 10:42:22.020 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-09 10:42:22.024 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-09 10:42:22.025 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-09 10:42:22.027 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-09 10:42:22.028 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-09 10:42:22.116 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-09 10:42:22.119 +05:30 [INF] Hosting environment: Development
2025-05-09 10:42:22.119 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-09 10:42:22.121 +05:30 [DBG] Hosting started
2025-05-09 10:42:22.393 +05:30 [DBG] Connection id "0HNCEN0A6EVLG" accepted.
2025-05-09 10:42:22.393 +05:30 [DBG] Connection id "0HNCEN0A6EVLH" accepted.
2025-05-09 10:42:22.396 +05:30 [DBG] Connection id "0HNCEN0A6EVLG" started.
2025-05-09 10:42:22.397 +05:30 [DBG] Connection id "0HNCEN0A6EVLH" started.
2025-05-09 10:42:22.407 +05:30 [DBG] Connection id "0HNCEN0A6EVLH" received FIN.
2025-05-09 10:42:22.407 +05:30 [DBG] Connection id "0HNCEN0A6EVLG" received FIN.
2025-05-09 10:42:22.433 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 10:42:22.433 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 10:42:22.481 +05:30 [DBG] Connection id "0HNCEN0A6EVLH" stopped.
2025-05-09 10:42:22.482 +05:30 [DBG] Connection id "0HNCEN0A6EVLG" stopped.
2025-05-09 10:42:22.489 +05:30 [DBG] Connection id "0HNCEN0A6EVLG" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 10:42:22.489 +05:30 [DBG] Connection id "0HNCEN0A6EVLH" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 10:42:22.749 +05:30 [DBG] Connection id "0HNCEN0A6EVLI" accepted.
2025-05-09 10:42:22.754 +05:30 [DBG] Connection id "0HNCEN0A6EVLI" started.
2025-05-09 10:42:22.832 +05:30 [DBG] Connection 0HNCEN0A6EVLI established using the following protocol: "Tls12"
2025-05-09 10:42:22.944 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-09 10:42:23.073 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-09 10:42:23.098 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-09 10:42:23.099 +05:30 [DBG] Request did not match any endpoints
2025-05-09 10:42:23.164 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-09 10:42:23.168 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-09 10:42:23.189 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-09 10:42:23.193 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-09 10:42:23.200 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 273.3119ms
2025-05-09 10:42:23.221 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-09 10:42:23.221 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-09 10:42:23.234 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-09 10:42:23.238 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 16.9102ms
2025-05-09 10:42:23.301 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 80.6516ms
2025-05-09 10:42:23.503 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-09 10:42:23.514 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-09 10:42:23.516 +05:30 [DBG] Request did not match any endpoints
2025-05-09 10:42:23.555 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 52.574ms
2025-05-09 10:42:38.917 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/register - application/json 114
2025-05-09 10:42:38.935 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/register'
2025-05-09 10:42:38.941 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)' with route pattern 'api/Auth/register' is valid for the request path '/api/Auth/register'
2025-05-09 10:42:38.948 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 10:42:38.952 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 10:42:39.067 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 10:42:39.070 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 10:42:39.104 +05:30 [INF] Route matched with {action = "Register", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(InventoryManagementSystem.Models.Request.UserRegisterRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-09 10:42:39.108 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 10:42:39.111 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 10:42:39.113 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 10:42:39.116 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 10:42:39.117 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 10:42:39.120 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 10:42:39.310 +05:30 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-05-09 10:42:39.337 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 10:42:39.354 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' ...
2025-05-09 10:42:39.357 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' using the name '' in request data ...
2025-05-09 10:42:39.361 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 10:42:39.372 +05:30 [DBG] Connection id "0HNCEN0A6EVLI", Request id "0HNCEN0A6EVLI:00000009": started reading request body.
2025-05-09 10:42:39.373 +05:30 [DBG] Connection id "0HNCEN0A6EVLI", Request id "0HNCEN0A6EVLI:00000009": done reading request body.
2025-05-09 10:42:39.388 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'
2025-05-09 10:42:39.390 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 10:42:39.393 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 10:42:39.394 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' ...
2025-05-09 10:42:39.450 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 10:42:39.455 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 10:42:39.458 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 10:42:39.463 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 10:42:39.466 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 10:42:39.467 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 10:42:39.470 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 10:42:39.472 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 10:42:39.494 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem) in 372.3137ms
2025-05-09 10:42:39.498 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 10:42:39.502 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/register - 400 null application/problem+json; charset=utf-8 584.832ms
2025-05-09 11:08:16.922 +05:30 [INF] Starting up the application...
2025-05-09 11:08:17.942 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-09 11:08:18.039 +05:30 [DBG] Hosting starting
2025-05-09 11:08:18.086 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-09 11:08:18.107 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-09 11:08:18.117 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-09 11:08:18.127 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-09 11:08:18.134 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-09 11:08:18.142 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-09 11:08:18.146 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 11:08:18.150 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-09 11:08:18.152 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 11:08:18.158 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-09 11:08:18.160 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-09 11:08:18.162 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-09 11:08:18.163 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-09 11:08:18.169 +05:30 [DBG] Middleware loaded
2025-05-09 11:08:18.171 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-09 11:08:18.173 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-09 11:08:18.253 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-09 11:08:18.366 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-09 11:08:18.372 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-09 11:08:18.375 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-09 11:08:18.376 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-09 11:08:18.377 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-09 11:08:18.378 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-09 11:08:18.588 +05:30 [DBG] Connection id "0HNCENEPVFPTO" accepted.
2025-05-09 11:08:18.588 +05:30 [DBG] Connection id "0HNCENEPVFPTN" accepted.
2025-05-09 11:08:18.597 +05:30 [DBG] Connection id "0HNCENEPVFPTO" started.
2025-05-09 11:08:18.598 +05:30 [DBG] Connection id "0HNCENEPVFPTN" started.
2025-05-09 11:08:18.598 +05:30 [DBG] Connection id "0HNCENEPVFPTN" received FIN.
2025-05-09 11:08:18.598 +05:30 [DBG] Connection id "0HNCENEPVFPTO" received FIN.
2025-05-09 11:08:18.619 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 11:08:18.619 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 11:08:18.662 +05:30 [DBG] Connection id "0HNCENEPVFPTN" stopped.
2025-05-09 11:08:18.662 +05:30 [DBG] Connection id "0HNCENEPVFPTO" stopped.
2025-05-09 11:08:18.668 +05:30 [DBG] Connection id "0HNCENEPVFPTO" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 11:08:18.668 +05:30 [DBG] Connection id "0HNCENEPVFPTN" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 11:08:18.696 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-09 11:08:18.697 +05:30 [INF] Hosting environment: Development
2025-05-09 11:08:18.698 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-09 11:08:18.699 +05:30 [DBG] Hosting started
2025-05-09 11:08:19.180 +05:30 [DBG] Connection id "0HNCENEPVFPTP" accepted.
2025-05-09 11:08:19.188 +05:30 [DBG] Connection id "0HNCENEPVFPTP" started.
2025-05-09 11:08:19.270 +05:30 [DBG] Connection 0HNCENEPVFPTP established using the following protocol: "Tls12"
2025-05-09 11:08:19.413 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-09 11:08:19.540 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-09 11:08:19.559 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-09 11:08:19.561 +05:30 [DBG] Request did not match any endpoints
2025-05-09 11:08:19.618 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-09 11:08:19.624 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-09 11:08:19.642 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-09 11:08:19.645 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-09 11:08:19.652 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 256.2452ms
2025-05-09 11:08:19.662 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-09 11:08:19.662 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-09 11:08:19.683 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-09 11:08:19.685 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 22.5357ms
2025-05-09 11:08:19.734 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 71.8064ms
2025-05-09 11:08:19.842 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-09 11:08:19.846 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-09 11:08:19.847 +05:30 [DBG] Request did not match any endpoints
2025-05-09 11:08:19.876 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 34.0786ms
2025-05-09 11:08:29.216 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Category/all - null null
2025-05-09 11:08:29.231 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/all'
2025-05-09 11:08:29.238 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)' with route pattern 'api/Category/all' is valid for the request path '/api/Category/all'
2025-05-09 11:08:29.242 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 11:08:29.246 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 11:08:29.379 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/8/2025 8:37:49 PM', Current time (UTC): '5/9/2025 5:38:29 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-09 11:08:29.384 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/8/2025 8:37:49 PM', Current time (UTC): '5/9/2025 5:38:29 AM'.
2025-05-09 11:08:29.390 +05:30 [DBG] Policy authentication schemes  did not succeed
2025-05-09 11:08:29.394 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-05-09 11:08:29.399 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-09 11:08:29.400 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Category/all - 401 0 null 184.8247ms
2025-05-09 11:08:40.850 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Category/all - null null
2025-05-09 11:08:40.861 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/all'
2025-05-09 11:08:40.864 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)' with route pattern 'api/Category/all' is valid for the request path '/api/Category/all'
2025-05-09 11:08:40.869 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 11:08:40.873 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 11:08:40.877 +05:30 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/8/2025 8:37:49 PM', Current time (UTC): '5/9/2025 5:38:40 AM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2025-05-09 11:08:40.882 +05:30 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '5/8/2025 8:37:49 PM', Current time (UTC): '5/9/2025 5:38:40 AM'.
2025-05-09 11:08:40.884 +05:30 [DBG] Policy authentication schemes  did not succeed
2025-05-09 11:08:40.885 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-05-09 11:08:40.886 +05:30 [INF] AuthenticationScheme: Bearer was challenged.
2025-05-09 11:08:40.888 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Category/all - 401 0 null 37.9645ms
2025-05-09 11:10:17.674 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/login - application/json 57
2025-05-09 11:10:17.687 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/login'
2025-05-09 11:10:17.689 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-05-09 11:10:17.692 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 11:10:17.694 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 11:10:17.697 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 11:10:17.699 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 11:10:17.742 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(InventoryManagementSystem.Models.Request.UserLoginRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-09 11:10:17.746 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 11:10:17.748 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 11:10:17.750 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 11:10:17.752 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 11:10:17.753 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 11:10:17.756 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 11:10:17.872 +05:30 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-05-09 11:10:17.896 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 11:10:17.914 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-09 11:10:17.917 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' using the name '' in request data ...
2025-05-09 11:10:17.920 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 11:10:17.928 +05:30 [DBG] Connection id "0HNCENEPVFPTP", Request id "0HNCENEPVFPTP:0000000D": started reading request body.
2025-05-09 11:10:17.930 +05:30 [DBG] Connection id "0HNCENEPVFPTP", Request id "0HNCENEPVFPTP:0000000D": done reading request body.
2025-05-09 11:10:17.941 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserLoginRequest'
2025-05-09 11:10:17.943 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 11:10:17.944 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 11:10:17.946 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-09 11:10:17.981 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 11:10:18.804 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 11:10:18.920 +05:30 [DBG] Compiling query expression: 
'DbSet<Users>()
    .Include(u => u.Role)
    .FirstOrDefault(u => u.Email == __email_0 && u.IsDeleted == False)'
2025-05-09 11:10:18.982 +05:30 [DBG] Including navigation: 'Users.Role'.
2025-05-09 11:10:19.240 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Users>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Users>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Users.UserId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Users.CreatedBy (int) Required, 1], [Property: Users.CreatedDate (DateTime) Required, 2], [Property: Users.Email (string) Required MaxLength(100), 3], [Property: Users.IsDeleted (bool) Required, 4], [Property: Users.Name (string) Required MaxLength(100), 5], [Property: Users.Password (string) Required MaxLength(255), 6], [Property: Users.Phone (string) Required MaxLength(15), 7], [Property: Users.RoleId (int) Required FK Index, 8], [Property: Users.UpdatedBy (int) Required, 9], [Property: Users.UpdatedDate (DateTime) Required, 10] }
                1 -> Dictionary<IProperty, int> { [Property: Roles.RoleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Roles.Name (string) Required MaxLength(50), 12] }
            SELECT TOP(1) u.UserId, u.CreatedBy, u.CreatedDate, u.Email, u.IsDeleted, u.Name, u.Password, u.Phone, u.RoleId, u.UpdatedBy, u.UpdatedDate, r.RoleId, r.Name
            FROM Users AS u
            INNER JOIN Roles AS r ON u.RoleId == r.RoleId
            WHERE (u.Email == @__email_0) && (u.IsDeleted == CAST(0 AS bit))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Users.UserId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Users.CreatedBy (int) Required, 1], [Property: Users.CreatedDate (DateTime) Required, 2], [Property: Users.Email (string) Required MaxLength(100), 3], [Property: Users.IsDeleted (bool) Required, 4], [Property: Users.Name (string) Required MaxLength(100), 5], [Property: Users.Password (string) Required MaxLength(255), 6], [Property: Users.Phone (string) Required MaxLength(15), 7], [Property: Users.RoleId (int) Required FK Index, 8], [Property: Users.UpdatedBy (int) Required, 9], [Property: Users.UpdatedDate (DateTime) Required, 10] }
                1 -> Dictionary<IProperty, int> { [Property: Roles.RoleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Roles.Name (string) Required MaxLength(50), 12] }
            SELECT TOP(1) u.UserId, u.CreatedBy, u.CreatedDate, u.Email, u.IsDeleted, u.Name, u.Password, u.Phone, u.RoleId, u.UpdatedBy, u.UpdatedDate, r.RoleId, r.Name
            FROM Users AS u
            INNER JOIN Roles AS r ON u.RoleId == r.RoleId
            WHERE (u.Email == @__email_0) && (u.IsDeleted == CAST(0 AS bit)), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Users entity;
            Roles entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Users instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Users);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Users.UserId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Users)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")]: 
                            {
                                return 
                                {
                                    Users instance;
                                    instance = new Users();
                                    instance.<UserId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CreatedDate>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Email>k__BackingField = dataReader.GetString(3);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    instance.<Password>k__BackingField = dataReader.GetString(6);
                                    instance.<Phone>k__BackingField = dataReader.GetString(7);
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(8);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt32(9);
                                    instance.<UpdatedDate>k__BackingField = dataReader.GetDateTime(10);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Users)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Roles instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Roles);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Roles.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(11) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Roles)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")]: 
                            {
                                return 
                                {
                                    Roles instance;
                                    instance = new Roles();
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(11);
                                    instance.<Name>k__BackingField = dataReader.GetString(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Roles)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Users, Users, Roles>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Users.Role (Roles) ToPrincipal Roles Inverse: Users | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users").FindNavigation("Role")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Roles.Users (ICollection<Users>) Collection ToDependent Users Inverse: Role | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindNavigation("Users")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Role>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Roles, ICollection<Users>, Users> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindNavigation("Users").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 11:10:19.308 +05:30 [DBG] Creating DbConnection.
2025-05-09 11:10:19.334 +05:30 [DBG] Created DbConnection. (26ms).
2025-05-09 11:10:19.340 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 11:10:19.605 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 11:10:19.610 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 11:10:19.618 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-05-09 11:10:19.626 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (15ms).
2025-05-09 11:10:19.635 +05:30 [DBG] Executing DbCommand [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 11:10:19.701 +05:30 [INF] Executed DbCommand (69ms) [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 11:10:19.772 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Users' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 11:10:19.818 +05:30 [DBG] The navigation 'Users.Role' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 11:10:19.826 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Roles' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 11:10:19.838 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 11:10:19.848 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 128ms reading results.
2025-05-09 11:10:19.852 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 11:10:19.857 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (5ms).
2025-05-09 11:10:19.966 +05:30 [INF] User logged in successfully: harsh@gmail.com
2025-05-09 11:10:19.972 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 11:10:19.977 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 11:10:19.978 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 11:10:19.980 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 11:10:19.982 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 11:10:19.984 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.UserLoginResponce, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-09 11:10:20.007 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem) in 2248.8562ms
2025-05-09 11:10:20.011 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 11:10:20.018 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 11:10:20.022 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 11:10:20.024 +05:30 [DBG] Disposed connection to database '' on server '' (2ms).
2025-05-09 11:10:20.025 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/login - 200 null application/json; charset=utf-8 2351.7776ms
2025-05-09 11:10:48.045 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Product/delete-product - application/json 19
2025-05-09 11:10:48.075 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/delete-product'
2025-05-09 11:10:48.077 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.SoftDeleteProduct (InventoryManagementSystem)' with route pattern 'api/Product/delete-product' is valid for the request path '/api/Product/delete-product'
2025-05-09 11:10:48.080 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.SoftDeleteProduct (InventoryManagementSystem)'
2025-05-09 11:10:48.084 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 11:10:48.092 +05:30 [DBG] Successfully validated the token.
2025-05-09 11:10:48.095 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 11:10:48.100 +05:30 [DBG] Authorization was successful.
2025-05-09 11:10:48.102 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.SoftDeleteProduct (InventoryManagementSystem)'
2025-05-09 11:10:48.118 +05:30 [INF] Route matched with {action = "SoftDeleteProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SoftDeleteProduct(InventoryManagementSystem.Models.Request.DeleteProductRequest) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 11:10:48.120 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 11:10:48.123 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 11:10:48.125 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 11:10:48.127 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 11:10:48.128 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 11:10:48.130 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 11:10:48.135 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 11:10:48.137 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.DeleteProductRequest' ...
2025-05-09 11:10:48.138 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.DeleteProductRequest' using the name '' in request data ...
2025-05-09 11:10:48.140 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 11:10:48.143 +05:30 [DBG] Connection id "0HNCENEPVFPTP", Request id "0HNCENEPVFPTP:0000000F": started reading request body.
2025-05-09 11:10:48.144 +05:30 [DBG] Connection id "0HNCENEPVFPTP", Request id "0HNCENEPVFPTP:0000000F": done reading request body.
2025-05-09 11:10:48.154 +05:30 [DBG] JSON input formatter threw an exception: '}' is an invalid start of a value. Path: $.productId | LineNumber: 2 | BytePositionInLine: 0.
2025-05-09 11:10:48.155 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.DeleteProductRequest'.
2025-05-09 11:10:48.156 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.DeleteProductRequest'.
2025-05-09 11:10:48.158 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.DeleteProductRequest' ...
2025-05-09 11:10:48.161 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.DeleteProductRequest'.
2025-05-09 11:10:48.164 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 11:10:48.168 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 11:10:48.170 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 11:10:48.172 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 11:10:48.173 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 11:10:48.177 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 11:10:48.178 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 11:10:48.216 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.SoftDeleteProduct (InventoryManagementSystem) in 85.3821ms
2025-05-09 11:10:48.226 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.SoftDeleteProduct (InventoryManagementSystem)'
2025-05-09 11:10:48.229 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Product/delete-product - 400 null application/problem+json; charset=utf-8 187.7078ms
2025-05-09 11:11:13.739 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Product/delete-product - application/json 21
2025-05-09 11:11:13.757 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/delete-product'
2025-05-09 11:11:13.759 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.SoftDeleteProduct (InventoryManagementSystem)' with route pattern 'api/Product/delete-product' is valid for the request path '/api/Product/delete-product'
2025-05-09 11:11:13.762 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.SoftDeleteProduct (InventoryManagementSystem)'
2025-05-09 11:11:13.764 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 11:11:13.765 +05:30 [DBG] Successfully validated the token.
2025-05-09 11:11:13.767 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 11:11:13.772 +05:30 [DBG] Authorization was successful.
2025-05-09 11:11:13.773 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.SoftDeleteProduct (InventoryManagementSystem)'
2025-05-09 11:11:13.774 +05:30 [INF] Route matched with {action = "SoftDeleteProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SoftDeleteProduct(InventoryManagementSystem.Models.Request.DeleteProductRequest) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 11:11:13.777 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 11:11:13.778 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 11:11:13.779 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 11:11:13.783 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 11:11:13.786 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 11:11:13.788 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 11:11:13.791 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 11:11:13.793 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.DeleteProductRequest' ...
2025-05-09 11:11:13.794 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.DeleteProductRequest' using the name '' in request data ...
2025-05-09 11:11:13.796 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 11:11:13.797 +05:30 [DBG] Connection id "0HNCENEPVFPTP", Request id "0HNCENEPVFPTP:00000011": started reading request body.
2025-05-09 11:11:13.799 +05:30 [DBG] Connection id "0HNCENEPVFPTP", Request id "0HNCENEPVFPTP:00000011": done reading request body.
2025-05-09 11:11:13.803 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.DeleteProductRequest'
2025-05-09 11:11:13.805 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.DeleteProductRequest'.
2025-05-09 11:11:13.806 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.DeleteProductRequest'.
2025-05-09 11:11:13.807 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.DeleteProductRequest' ...
2025-05-09 11:11:13.810 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.DeleteProductRequest'.
2025-05-09 11:11:13.829 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 11:11:13.832 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .FirstOrDefault(p => p.ProductId == __productId_0 && !(p.IsDeleted))'
2025-05-09 11:11:13.844 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Products>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Products>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE (p.ProductId == @__productId_0) && Not(p.IsDeleted)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE (p.ProductId == @__productId_0) && Not(p.IsDeleted), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Products entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Products instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Products);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Products)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                            {
                                return 
                                {
                                    Products instance;
                                    instance = new Products();
                                    instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                    instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Name>k__BackingField = dataReader.GetString(9);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                    instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Products)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 11:11:13.874 +05:30 [DBG] Creating DbConnection.
2025-05-09 11:11:13.875 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 11:11:13.876 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 11:11:13.878 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 11:11:13.879 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 11:11:13.880 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 11:11:13.883 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 11:11:13.887 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 11:11:13.900 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 11:11:13.905 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 11:11:13.907 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 11:11:13.908 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 11:11:13.909 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 11:11:13.911 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 11:11:13.913 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 11:11:13.914 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 11:11:13.916 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 11:11:13.917 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 11:11:13.919 +05:30 [INF] Executing NotFoundObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 11:11:13.923 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.SoftDeleteProduct (InventoryManagementSystem) in 135.1833ms
2025-05-09 11:11:13.930 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.SoftDeleteProduct (InventoryManagementSystem)'
2025-05-09 11:11:13.931 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 11:11:13.933 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 11:11:13.935 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 11:11:13.937 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Product/delete-product - 404 null application/json; charset=utf-8 197.5799ms
2025-05-09 11:13:56.235 +05:30 [DBG] Connection id "0HNCENEPVFPTP" received FIN.
2025-05-09 11:13:56.245 +05:30 [DBG] Connection id "0HNCENEPVFPTP" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 11:13:56.248 +05:30 [DBG] Connection id "0HNCENEPVFPTP" is closed. The last processed stream ID was 17.
2025-05-09 11:13:56.250 +05:30 [DBG] The connection queue processing loop for 0HNCENEPVFPTP completed.
2025-05-09 11:13:56.252 +05:30 [DBG] Connection id "0HNCENEPVFPTP" stopped.
2025-05-09 12:06:17.625 +05:30 [INF] Starting up the application...
2025-05-09 12:06:18.331 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-09 12:06:18.470 +05:30 [DBG] Hosting starting
2025-05-09 12:06:18.594 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-09 12:06:18.623 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-09 12:06:18.637 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-09 12:06:18.645 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-09 12:06:18.651 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-09 12:06:18.673 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-09 12:06:18.681 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 12:06:18.688 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-09 12:06:18.696 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 12:06:18.705 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-09 12:06:18.708 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-09 12:06:18.710 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-09 12:06:18.711 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-09 12:06:18.717 +05:30 [DBG] Middleware loaded
2025-05-09 12:06:18.719 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-09 12:06:18.720 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-09 12:06:18.799 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-09 12:06:18.890 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-09 12:06:18.895 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-09 12:06:18.896 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-09 12:06:18.897 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-09 12:06:18.897 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-09 12:06:18.898 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-09 12:06:18.981 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-09 12:06:18.984 +05:30 [INF] Hosting environment: Development
2025-05-09 12:06:18.991 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-09 12:06:18.992 +05:30 [DBG] Hosting started
2025-05-09 12:06:19.321 +05:30 [DBG] Connection id "0HNCEOF7AB8D8" accepted.
2025-05-09 12:06:19.321 +05:30 [DBG] Connection id "0HNCEOF7AB8D7" accepted.
2025-05-09 12:06:19.326 +05:30 [DBG] Connection id "0HNCEOF7AB8D8" started.
2025-05-09 12:06:19.328 +05:30 [DBG] Connection id "0HNCEOF7AB8D7" started.
2025-05-09 12:06:19.344 +05:30 [DBG] Connection id "0HNCEOF7AB8D7" received FIN.
2025-05-09 12:06:19.344 +05:30 [DBG] Connection id "0HNCEOF7AB8D8" received FIN.
2025-05-09 12:06:19.355 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 12:06:19.356 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 12:06:19.389 +05:30 [DBG] Connection id "0HNCEOF7AB8D7" stopped.
2025-05-09 12:06:19.389 +05:30 [DBG] Connection id "0HNCEOF7AB8D8" stopped.
2025-05-09 12:06:19.392 +05:30 [DBG] Connection id "0HNCEOF7AB8D8" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 12:06:19.392 +05:30 [DBG] Connection id "0HNCEOF7AB8D7" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 12:06:19.813 +05:30 [DBG] Connection id "0HNCEOF7AB8D9" accepted.
2025-05-09 12:06:19.816 +05:30 [DBG] Connection id "0HNCEOF7AB8D9" started.
2025-05-09 12:06:19.897 +05:30 [DBG] Connection 0HNCEOF7AB8D9 established using the following protocol: "Tls12"
2025-05-09 12:06:20.013 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-09 12:06:20.180 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-09 12:06:20.198 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-09 12:06:20.200 +05:30 [DBG] Request did not match any endpoints
2025-05-09 12:06:20.267 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-09 12:06:20.270 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-09 12:06:20.297 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-09 12:06:20.301 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-09 12:06:20.311 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 310.0153ms
2025-05-09 12:06:20.321 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-09 12:06:20.323 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-09 12:06:20.334 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-09 12:06:20.337 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 16.2427ms
2025-05-09 12:06:20.400 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 77.0342ms
2025-05-09 12:06:20.517 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-09 12:06:20.520 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-09 12:06:20.521 +05:30 [DBG] Request did not match any endpoints
2025-05-09 12:06:20.549 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 32.2015ms
2025-05-09 12:06:34.741 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Category/all - null null
2025-05-09 12:06:34.755 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/all'
2025-05-09 12:06:34.764 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)' with route pattern 'api/Category/all' is valid for the request path '/api/Category/all'
2025-05-09 12:06:34.768 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 12:06:34.772 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 12:06:34.912 +05:30 [DBG] Successfully validated the token.
2025-05-09 12:06:34.920 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 12:06:34.929 +05:30 [DBG] Authorization was successful.
2025-05-09 12:06:34.931 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 12:06:34.954 +05:30 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 12:06:34.960 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 12:06:34.962 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 12:06:34.963 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 12:06:34.965 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 12:06:34.966 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 12:06:34.969 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 12:06:35.084 +05:30 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-05-09 12:06:35.107 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 12:06:35.899 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 12:06:35.954 +05:30 [DBG] Compiling query expression: 
'DbSet<Category>()
    .Where(c => !(c.IsDeleted))
    .OrderBy(c => c.Name)'
2025-05-09 12:06:36.216 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Category>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
        SELECT c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
        FROM Category AS c
        WHERE Not(c.IsDeleted)
        ORDER BY c.Name ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
        SELECT c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
        FROM Category AS c
        WHERE Not(c.IsDeleted)
        ORDER BY c.Name ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Category entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Category instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Category);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Category.CategoryId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Category)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]: 
                        {
                            return 
                            {
                                Category instance;
                                instance = new Category();
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(0);
                                instance.<ActiveStatus>k__BackingField = dataReader.GetBoolean(1);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CreatedBy>k__BackingField = dataReader.GetInt64(3);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                instance.<Name>k__BackingField = dataReader.GetString(5);
                                instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(6);
                                instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Category)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 12:06:36.262 +05:30 [DBG] Creating DbConnection.
2025-05-09 12:06:36.285 +05:30 [DBG] Created DbConnection. (19ms).
2025-05-09 12:06:36.291 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 12:06:36.509 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 12:06:36.514 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 12:06:36.521 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-05-09 12:06:36.524 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-05-09 12:06:36.532 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 12:06:36.581 +05:30 [INF] Executed DbCommand (48ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 12:06:36.631 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 12:06:36.671 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 12:06:36.679 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 12:06:36.689 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 12:06:36.696 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 107ms reading results.
2025-05-09 12:06:36.701 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 12:06:36.707 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (5ms).
2025-05-09 12:06:36.710 +05:30 [INF] Fetched 3 categories.
2025-05-09 12:06:36.715 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 12:06:36.719 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 12:06:36.720 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 12:06:36.721 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 12:06:36.722 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 12:06:36.725 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Entity.Category, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 12:06:36.752 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem) in 1780.9555ms
2025-05-09 12:06:36.754 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 12:06:36.759 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 12:06:36.764 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 12:06:36.767 +05:30 [DBG] Disposed connection to database '' on server '' (2ms).
2025-05-09 12:06:36.768 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Category/all - 200 null application/json; charset=utf-8 2027.6547ms
2025-05-09 14:46:28.723 +05:30 [INF] Starting up the application...
2025-05-09 14:46:30.063 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-09 14:46:30.170 +05:30 [DBG] Hosting starting
2025-05-09 14:46:30.229 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-09 14:46:30.242 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-09 14:46:30.252 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-09 14:46:30.260 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-09 14:46:30.265 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-09 14:46:30.273 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-09 14:46:30.280 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 14:46:30.284 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-09 14:46:30.287 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 14:46:30.294 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-09 14:46:30.296 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-09 14:46:30.299 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-09 14:46:30.301 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-09 14:46:30.309 +05:30 [DBG] Middleware loaded
2025-05-09 14:46:30.312 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-09 14:46:30.314 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-09 14:46:30.439 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-09 14:46:30.566 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-09 14:46:30.569 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-09 14:46:30.569 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-09 14:46:30.570 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-09 14:46:30.572 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-09 14:46:30.573 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-09 14:46:30.654 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-09 14:46:30.657 +05:30 [INF] Hosting environment: Development
2025-05-09 14:46:30.658 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-09 14:46:30.659 +05:30 [DBG] Hosting started
2025-05-09 14:46:31.029 +05:30 [DBG] Connection id "0HNCER8NQNRM5" accepted.
2025-05-09 14:46:31.032 +05:30 [DBG] Connection id "0HNCER8NQNRM5" started.
2025-05-09 14:46:31.035 +05:30 [DBG] Connection id "0HNCER8NQNRM6" accepted.
2025-05-09 14:46:31.036 +05:30 [DBG] Connection id "0HNCER8NQNRM6" started.
2025-05-09 14:46:31.047 +05:30 [DBG] Connection id "0HNCER8NQNRM5" received FIN.
2025-05-09 14:46:31.047 +05:30 [DBG] Connection id "0HNCER8NQNRM6" received FIN.
2025-05-09 14:46:31.058 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 14:46:31.059 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 14:46:31.108 +05:30 [DBG] Connection id "0HNCER8NQNRM5" stopped.
2025-05-09 14:46:31.108 +05:30 [DBG] Connection id "0HNCER8NQNRM6" stopped.
2025-05-09 14:46:31.113 +05:30 [DBG] Connection id "0HNCER8NQNRM6" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 14:46:31.113 +05:30 [DBG] Connection id "0HNCER8NQNRM5" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 14:46:31.468 +05:30 [DBG] Connection id "0HNCER8NQNRM7" accepted.
2025-05-09 14:46:31.476 +05:30 [DBG] Connection id "0HNCER8NQNRM7" started.
2025-05-09 14:46:31.561 +05:30 [DBG] Connection 0HNCER8NQNRM7 established using the following protocol: "Tls12"
2025-05-09 14:46:31.677 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-09 14:46:31.803 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-09 14:46:31.828 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-09 14:46:31.830 +05:30 [DBG] Request did not match any endpoints
2025-05-09 14:46:31.892 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-09 14:46:31.895 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-09 14:46:31.912 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-09 14:46:31.914 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-09 14:46:31.925 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 255.8558ms
2025-05-09 14:46:31.930 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-09 14:46:31.930 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-09 14:46:31.951 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-09 14:46:31.955 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 23.7239ms
2025-05-09 14:46:32.013 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 83.0267ms
2025-05-09 14:46:32.125 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-09 14:46:32.138 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-09 14:46:32.144 +05:30 [DBG] Request did not match any endpoints
2025-05-09 14:46:32.175 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 50.9747ms
2025-05-09 14:46:47.853 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/register - application/json 113
2025-05-09 14:46:47.867 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/register'
2025-05-09 14:46:47.877 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)' with route pattern 'api/Auth/register' is valid for the request path '/api/Auth/register'
2025-05-09 14:46:47.884 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 14:46:47.892 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:46:47.995 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 14:46:48.003 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 14:46:48.037 +05:30 [INF] Route matched with {action = "Register", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(InventoryManagementSystem.Models.Request.UserRegisterRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-09 14:46:48.043 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 14:46:48.050 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 14:46:48.052 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 14:46:48.054 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 14:46:48.057 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 14:46:48.061 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 14:46:48.219 +05:30 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-05-09 14:46:48.243 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 14:46:48.263 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' ...
2025-05-09 14:46:48.266 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' using the name '' in request data ...
2025-05-09 14:46:48.269 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 14:46:48.280 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000009": started reading request body.
2025-05-09 14:46:48.281 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000009": done reading request body.
2025-05-09 14:46:48.296 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'
2025-05-09 14:46:48.299 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 14:46:48.301 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 14:46:48.302 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' ...
2025-05-09 14:46:48.361 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 14:46:48.364 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 14:46:48.368 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 14:46:48.371 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 14:46:48.375 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 14:46:48.377 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 14:46:48.380 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 14:46:48.382 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 14:46:48.405 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem) in 342.7438ms
2025-05-09 14:46:48.409 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 14:46:48.413 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/register - 400 null application/problem+json; charset=utf-8 559.2156ms
2025-05-09 14:47:30.940 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/register - application/json 117
2025-05-09 14:47:30.956 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/register'
2025-05-09 14:47:30.958 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)' with route pattern 'api/Auth/register' is valid for the request path '/api/Auth/register'
2025-05-09 14:47:30.963 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 14:47:30.966 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:47:30.968 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 14:47:30.974 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 14:47:30.978 +05:30 [INF] Route matched with {action = "Register", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(InventoryManagementSystem.Models.Request.UserRegisterRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-09 14:47:30.983 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 14:47:30.985 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 14:47:30.987 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 14:47:30.989 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 14:47:30.990 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 14:47:30.992 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 14:47:31.002 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 14:47:31.003 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' ...
2025-05-09 14:47:31.004 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' using the name '' in request data ...
2025-05-09 14:47:31.006 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 14:47:31.007 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000000B": started reading request body.
2025-05-09 14:47:31.008 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000000B": done reading request body.
2025-05-09 14:47:31.012 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'
2025-05-09 14:47:31.014 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 14:47:31.015 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 14:47:31.020 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' ...
2025-05-09 14:47:31.029 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 14:47:31.816 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 14:47:31.871 +05:30 [DBG] Compiling query expression: 
'DbSet<Roles>()
    .Any(r => r.RoleId == __roleId_0)'
2025-05-09 14:47:32.106 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleAsync<bool>(
    asyncEnumerable: SingleQueryingEnumerable.Create<bool>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Roles AS r
                WHERE r.RoleId == @__roleId_0)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> 0
            SELECT EXISTS (
                SELECT 1
                FROM Roles AS r
                WHERE r.RoleId == @__roleId_0), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            bool? value1;
            value1 = dataReader.IsDBNull(0) ? default(bool?) : (bool?)dataReader.GetBoolean(0);
            return (bool)value1;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 14:47:32.154 +05:30 [DBG] Creating DbConnection.
2025-05-09 14:47:32.172 +05:30 [DBG] Created DbConnection. (16ms).
2025-05-09 14:47:32.178 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:47:32.458 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:47:32.464 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:47:32.470 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-05-09 14:47:32.479 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (14ms).
2025-05-09 14:47:32.487 +05:30 [DBG] Executing DbCommand [Parameters=[@__roleId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Roles] AS [r]
        WHERE [r].[RoleId] = @__roleId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-09 14:47:32.555 +05:30 [INF] Executed DbCommand (69ms) [Parameters=[@__roleId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Roles] AS [r]
        WHERE [r].[RoleId] = @__roleId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-09 14:47:32.573 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:47:32.581 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 18ms reading results.
2025-05-09 14:47:32.586 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:47:32.593 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (5ms).
2025-05-09 14:47:32.595 +05:30 [WRN] Attempt to register with invalid role ID: 10
2025-05-09 14:47:32.599 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 14:47:32.601 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 14:47:32.602 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 14:47:32.603 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 14:47:32.604 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 14:47:32.606 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 14:47:32.617 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem) in 1625.2592ms
2025-05-09 14:47:32.619 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 14:47:32.622 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 14:47:32.629 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:47:32.632 +05:30 [DBG] Disposed connection to database '' on server '' (3ms).
2025-05-09 14:47:32.634 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/register - 400 null application/json; charset=utf-8 1693.501ms
2025-05-09 14:47:47.034 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/register - application/json 116
2025-05-09 14:47:47.041 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/register'
2025-05-09 14:47:47.042 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)' with route pattern 'api/Auth/register' is valid for the request path '/api/Auth/register'
2025-05-09 14:47:47.069 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 14:47:47.076 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:47:47.083 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 14:47:47.084 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 14:47:47.086 +05:30 [INF] Route matched with {action = "Register", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(InventoryManagementSystem.Models.Request.UserRegisterRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-09 14:47:47.089 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 14:47:47.090 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 14:47:47.092 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 14:47:47.097 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 14:47:47.098 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 14:47:47.100 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 14:47:47.104 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 14:47:47.106 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' ...
2025-05-09 14:47:47.107 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' using the name '' in request data ...
2025-05-09 14:47:47.110 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 14:47:47.114 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000000D": started reading request body.
2025-05-09 14:47:47.115 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000000D": done reading request body.
2025-05-09 14:47:47.117 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'
2025-05-09 14:47:47.119 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 14:47:47.122 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 14:47:47.124 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest' ...
2025-05-09 14:47:47.129 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserRegisterRequest'.
2025-05-09 14:47:47.142 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 14:47:47.150 +05:30 [DBG] Creating DbConnection.
2025-05-09 14:47:47.152 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 14:47:47.153 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:47:47.155 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:47:47.156 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:47:47.157 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 14:47:47.158 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 14:47:47.159 +05:30 [DBG] Executing DbCommand [Parameters=[@__roleId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Roles] AS [r]
        WHERE [r].[RoleId] = @__roleId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-09 14:47:47.168 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__roleId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Roles] AS [r]
        WHERE [r].[RoleId] = @__roleId_0) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-05-09 14:47:47.170 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:47:47.171 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 14:47:47.173 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:47:47.174 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:47:47.184 +05:30 [DBG] Compiling query expression: 
'DbSet<Users>()
    .Include(u => u.Role)
    .FirstOrDefault(u => u.Email == __email_0 && u.IsDeleted == False)'
2025-05-09 14:47:47.204 +05:30 [DBG] Including navigation: 'Users.Role'.
2025-05-09 14:47:47.314 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Users>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Users>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Users.UserId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Users.CreatedBy (int) Required, 1], [Property: Users.CreatedDate (DateTime) Required, 2], [Property: Users.Email (string) Required MaxLength(100), 3], [Property: Users.IsDeleted (bool) Required, 4], [Property: Users.Name (string) Required MaxLength(100), 5], [Property: Users.Password (string) Required MaxLength(255), 6], [Property: Users.Phone (string) Required MaxLength(15), 7], [Property: Users.RoleId (int) Required FK Index, 8], [Property: Users.UpdatedBy (int) Required, 9], [Property: Users.UpdatedDate (DateTime) Required, 10] }
                1 -> Dictionary<IProperty, int> { [Property: Roles.RoleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Roles.Name (string) Required MaxLength(50), 12] }
            SELECT TOP(1) u.UserId, u.CreatedBy, u.CreatedDate, u.Email, u.IsDeleted, u.Name, u.Password, u.Phone, u.RoleId, u.UpdatedBy, u.UpdatedDate, r.RoleId, r.Name
            FROM Users AS u
            INNER JOIN Roles AS r ON u.RoleId == r.RoleId
            WHERE (u.Email == @__email_0) && (u.IsDeleted == CAST(0 AS bit))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Users.UserId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Users.CreatedBy (int) Required, 1], [Property: Users.CreatedDate (DateTime) Required, 2], [Property: Users.Email (string) Required MaxLength(100), 3], [Property: Users.IsDeleted (bool) Required, 4], [Property: Users.Name (string) Required MaxLength(100), 5], [Property: Users.Password (string) Required MaxLength(255), 6], [Property: Users.Phone (string) Required MaxLength(15), 7], [Property: Users.RoleId (int) Required FK Index, 8], [Property: Users.UpdatedBy (int) Required, 9], [Property: Users.UpdatedDate (DateTime) Required, 10] }
                1 -> Dictionary<IProperty, int> { [Property: Roles.RoleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Roles.Name (string) Required MaxLength(50), 12] }
            SELECT TOP(1) u.UserId, u.CreatedBy, u.CreatedDate, u.Email, u.IsDeleted, u.Name, u.Password, u.Phone, u.RoleId, u.UpdatedBy, u.UpdatedDate, r.RoleId, r.Name
            FROM Users AS u
            INNER JOIN Roles AS r ON u.RoleId == r.RoleId
            WHERE (u.Email == @__email_0) && (u.IsDeleted == CAST(0 AS bit)), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Users entity;
            Roles entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Users instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Users);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Users.UserId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Users)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")]: 
                            {
                                return 
                                {
                                    Users instance;
                                    instance = new Users();
                                    instance.<UserId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CreatedDate>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Email>k__BackingField = dataReader.GetString(3);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    instance.<Password>k__BackingField = dataReader.GetString(6);
                                    instance.<Phone>k__BackingField = dataReader.GetString(7);
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(8);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt32(9);
                                    instance.<UpdatedDate>k__BackingField = dataReader.GetDateTime(10);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Users)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Roles instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Roles);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Roles.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(11) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Roles)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")]: 
                            {
                                return 
                                {
                                    Roles instance;
                                    instance = new Roles();
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(11);
                                    instance.<Name>k__BackingField = dataReader.GetString(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Roles)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Users, Users, Roles>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Users.Role (Roles) ToPrincipal Roles Inverse: Users | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users").FindNavigation("Role")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Roles.Users (ICollection<Users>) Collection ToDependent Users Inverse: Role | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindNavigation("Users")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Role>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Roles, ICollection<Users>, Users> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindNavigation("Users").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 14:47:47.368 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:47:47.370 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:47:47.372 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:47:47.373 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:47:47.375 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 14:47:47.376 +05:30 [DBG] Executing DbCommand [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:47:47.387 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:47:47.394 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:47:47.395 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 4ms reading results.
2025-05-09 14:47:47.397 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:47:47.398 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:47:47.534 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Users.UserId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:47:47.601 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Users' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:47:47.608 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 14:47:47.614 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 14:47:47.629 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 14:47:47.688 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:47:47.691 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:47:47.695 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:47:47.697 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-05-09 14:47:47.699 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-09 14:47:47.700 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (Size = 100), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (Size = 255), @p6='?' (Size = 15), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Users] ([CreatedBy], [CreatedDate], [Email], [IsDeleted], [Name], [Password], [Phone], [RoleId], [UpdatedBy], [UpdatedDate])
OUTPUT INSERTED.[UserId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2025-05-09 14:47:47.707 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (Size = 100), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (Size = 255), @p6='?' (Size = 15), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Users] ([CreatedBy], [CreatedDate], [Email], [IsDeleted], [Name], [Password], [Phone], [RoleId], [UpdatedBy], [UpdatedDate])
OUTPUT INSERTED.[UserId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9);
2025-05-09 14:47:47.720 +05:30 [DBG] The foreign key property 'Users.UserId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 14:47:47.727 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:47:47.729 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 18ms reading results.
2025-05-09 14:47:47.732 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:47:47.733 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:47:47.744 +05:30 [DBG] An entity of type 'Users' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:47:47.748 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 14:47:47.751 +05:30 [INF] New user registered: user@example.com
2025-05-09 14:47:47.754 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 14:47:47.757 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 14:47:47.757 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 14:47:47.759 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 14:47:47.759 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 14:47:47.761 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 14:47:47.763 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem) in 662.8943ms
2025-05-09 14:47:47.764 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Register (InventoryManagementSystem)'
2025-05-09 14:47:47.765 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 14:47:47.767 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:47:47.768 +05:30 [DBG] Disposed connection to database '' on server '' (0ms).
2025-05-09 14:47:47.769 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/register - 201 null application/json; charset=utf-8 735.0548ms
2025-05-09 14:48:34.280 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/login - application/json 62
2025-05-09 14:48:34.289 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/login'
2025-05-09 14:48:34.292 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-05-09 14:48:34.294 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 14:48:34.297 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:48:34.298 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 14:48:34.300 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 14:48:34.305 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(InventoryManagementSystem.Models.Request.UserLoginRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-09 14:48:34.307 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 14:48:34.309 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 14:48:34.310 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 14:48:34.312 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 14:48:34.315 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 14:48:34.317 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 14:48:34.319 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 14:48:34.321 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-09 14:48:34.323 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' using the name '' in request data ...
2025-05-09 14:48:34.324 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 14:48:34.327 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000000F": started reading request body.
2025-05-09 14:48:34.328 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000000F": done reading request body.
2025-05-09 14:48:34.331 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserLoginRequest'
2025-05-09 14:48:34.333 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 14:48:34.335 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 14:48:34.336 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-09 14:48:34.340 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 14:48:34.410 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 14:48:34.414 +05:30 [DBG] Creating DbConnection.
2025-05-09 14:48:34.415 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 14:48:34.416 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:48:34.418 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:48:34.419 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:48:34.421 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:48:34.422 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 14:48:34.424 +05:30 [DBG] Executing DbCommand [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:48:34.443 +05:30 [INF] Executed DbCommand (19ms) [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:48:34.446 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:48:34.447 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 14:48:34.449 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:48:34.451 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:48:34.452 +05:30 [WRN] Login failed: Invalid credentials for user@example Email already exists
2025-05-09 14:48:34.453 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 14:48:34.456 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 14:48:34.456 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 14:48:34.457 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 14:48:34.458 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 14:48:34.459 +05:30 [INF] Executing UnauthorizedObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.UserLoginResponce, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-09 14:48:34.465 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem) in 148.163ms
2025-05-09 14:48:34.468 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 14:48:34.469 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 14:48:34.482 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:48:34.484 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 14:48:34.485 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/login - 401 null application/json; charset=utf-8 205.5223ms
2025-05-09 14:48:52.862 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/login - application/json 65
2025-05-09 14:48:52.870 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/login'
2025-05-09 14:48:52.873 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-05-09 14:48:52.897 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 14:48:52.900 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:48:52.903 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 14:48:52.904 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 14:48:52.906 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(InventoryManagementSystem.Models.Request.UserLoginRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-09 14:48:52.908 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 14:48:52.909 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 14:48:52.911 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 14:48:52.912 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 14:48:52.914 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 14:48:52.916 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 14:48:52.918 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 14:48:52.919 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-09 14:48:52.921 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' using the name '' in request data ...
2025-05-09 14:48:52.922 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 14:48:52.924 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000011": started reading request body.
2025-05-09 14:48:52.925 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000011": done reading request body.
2025-05-09 14:48:52.926 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserLoginRequest'
2025-05-09 14:48:52.927 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 14:48:52.929 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 14:48:52.930 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-09 14:48:52.933 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 14:48:52.934 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 14:48:52.935 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 14:48:52.936 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 14:48:52.939 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 14:48:52.939 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 14:48:52.942 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 14:48:52.944 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 14:48:52.945 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem) in 29.1609ms
2025-05-09 14:48:52.947 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 14:48:52.949 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/login - 400 null application/problem+json; charset=utf-8 86.6934ms
2025-05-09 14:49:02.379 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/login - application/json 66
2025-05-09 14:49:02.387 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/login'
2025-05-09 14:49:02.391 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-05-09 14:49:02.395 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 14:49:02.396 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:49:02.397 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 14:49:02.398 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 14:49:02.400 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(InventoryManagementSystem.Models.Request.UserLoginRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-09 14:49:02.402 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 14:49:02.404 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 14:49:02.406 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 14:49:02.409 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 14:49:02.410 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 14:49:02.412 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 14:49:02.414 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 14:49:02.416 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-09 14:49:02.418 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' using the name '' in request data ...
2025-05-09 14:49:02.421 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 14:49:02.423 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000013": started reading request body.
2025-05-09 14:49:02.425 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000013": done reading request body.
2025-05-09 14:49:02.427 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserLoginRequest'
2025-05-09 14:49:02.429 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 14:49:02.431 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 14:49:02.433 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-09 14:49:02.435 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 14:49:02.438 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 14:49:02.440 +05:30 [DBG] Creating DbConnection.
2025-05-09 14:49:02.441 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 14:49:02.442 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:49:02.443 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:49:02.445 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:49:02.446 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:49:02.447 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 14:49:02.449 +05:30 [DBG] Executing DbCommand [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:49:02.454 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:49:02.461 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Users' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:49:02.473 +05:30 [DBG] The navigation 'Users.Role' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:49:02.478 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Roles' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:49:02.484 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:49:02.485 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 27ms reading results.
2025-05-09 14:49:02.486 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:49:02.487 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:49:02.616 +05:30 [INF] User logged in successfully: user@example.com
2025-05-09 14:49:02.618 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 14:49:02.621 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 14:49:02.622 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 14:49:02.623 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 14:49:02.625 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 14:49:02.626 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.UserLoginResponce, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-09 14:49:02.629 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem) in 217.2943ms
2025-05-09 14:49:02.631 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 14:49:02.633 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 14:49:02.634 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:49:02.636 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 14:49:02.637 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/login - 200 null application/json; charset=utf-8 259.3028ms
2025-05-09 14:49:37.217 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Category/add-category - application/json 22
2025-05-09 14:49:37.253 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/add-category'
2025-05-09 14:49:37.261 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)' with route pattern 'api/Category/add-category' is valid for the request path '/api/Category/add-category'
2025-05-09 14:49:37.263 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 14:49:37.265 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:49:37.315 +05:30 [DBG] Successfully validated the token.
2025-05-09 14:49:37.322 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 14:49:37.330 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-05-09 14:49:37.335 +05:30 [INF] AuthenticationScheme: Bearer was forbidden.
2025-05-09 14:49:37.338 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Category/add-category - 403 0 null 122.6508ms
2025-05-09 14:49:37.343 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000015": started reading request body.
2025-05-09 14:49:37.345 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000015": done reading request body.
2025-05-09 14:50:10.543 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Order/customer-order - application/json 96
2025-05-09 14:50:10.557 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/customer-order'
2025-05-09 14:50:10.562 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)' with route pattern 'api/Order/customer-order' is valid for the request path '/api/Order/customer-order'
2025-05-09 14:50:10.565 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 14:50:10.567 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:50:10.568 +05:30 [DBG] Successfully validated the token.
2025-05-09 14:50:10.570 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 14:50:10.578 +05:30 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)
2025-05-09 14:50:10.581 +05:30 [INF] AuthenticationScheme: Bearer was forbidden.
2025-05-09 14:50:10.582 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Order/customer-order - 403 0 null 40.005ms
2025-05-09 14:50:10.594 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000017": started reading request body.
2025-05-09 14:50:10.597 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000017": done reading request body.
2025-05-09 14:50:46.924 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/login - application/json 66
2025-05-09 14:50:46.965 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/login'
2025-05-09 14:50:46.967 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-05-09 14:50:46.968 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 14:50:46.970 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:50:46.971 +05:30 [DBG] Successfully validated the token.
2025-05-09 14:50:46.972 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 14:50:46.974 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 14:50:46.977 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(InventoryManagementSystem.Models.Request.UserLoginRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-09 14:50:46.979 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 14:50:46.980 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 14:50:46.982 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 14:50:46.984 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 14:50:46.985 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 14:50:46.987 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 14:50:46.989 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 14:50:46.992 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-09 14:50:46.993 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' using the name '' in request data ...
2025-05-09 14:50:46.995 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 14:50:46.996 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000019": started reading request body.
2025-05-09 14:50:46.997 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000019": done reading request body.
2025-05-09 14:50:46.999 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserLoginRequest'
2025-05-09 14:50:47.000 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 14:50:47.002 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 14:50:47.003 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-09 14:50:47.011 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 14:50:47.013 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 14:50:47.016 +05:30 [DBG] Creating DbConnection.
2025-05-09 14:50:47.016 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 14:50:47.017 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:50:47.019 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:50:47.024 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:50:47.027 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-05-09 14:50:47.030 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-05-09 14:50:47.032 +05:30 [DBG] Executing DbCommand [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:50:47.047 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:50:47.050 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Users' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:50:47.052 +05:30 [DBG] The navigation 'Users.Role' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:50:47.054 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Roles' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:50:47.055 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:50:47.057 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 7ms reading results.
2025-05-09 14:50:47.059 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:50:47.060 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:50:47.152 +05:30 [INF] User logged in successfully: harsh@gmail.com
2025-05-09 14:50:47.155 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 14:50:47.160 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 14:50:47.161 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 14:50:47.162 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 14:50:47.163 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 14:50:47.164 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.UserLoginResponce, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-09 14:50:47.166 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem) in 178.6688ms
2025-05-09 14:50:47.167 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 14:50:47.168 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 14:50:47.170 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:50:47.171 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 14:50:47.174 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/login - 200 null application/json; charset=utf-8 253.9292ms
2025-05-09 14:51:22.860 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Category/add-category - application/json 22
2025-05-09 14:51:22.880 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/add-category'
2025-05-09 14:51:22.882 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)' with route pattern 'api/Category/add-category' is valid for the request path '/api/Category/add-category'
2025-05-09 14:51:22.884 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 14:51:22.885 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:51:22.887 +05:30 [DBG] Successfully validated the token.
2025-05-09 14:51:22.888 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 14:51:22.891 +05:30 [DBG] Authorization was successful.
2025-05-09 14:51:22.892 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 14:51:22.899 +05:30 [INF] Route matched with {action = "AddCategory", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategory(InventoryManagementSystem.Models.Request.AddCategoryRequest) on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 14:51:22.902 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 14:51:22.903 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 14:51:22.904 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 14:51:22.907 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 14:51:22.908 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 14:51:22.911 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 14:51:22.913 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 14:51:22.915 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' ...
2025-05-09 14:51:22.916 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' using the name '' in request data ...
2025-05-09 14:51:22.918 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 14:51:22.920 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000001B": started reading request body.
2025-05-09 14:51:22.921 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000001B": done reading request body.
2025-05-09 14:51:22.923 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'
2025-05-09 14:51:22.924 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 14:51:22.926 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 14:51:22.929 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' ...
2025-05-09 14:51:22.931 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 14:51:22.936 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 14:51:22.939 +05:30 [DBG] Compiling query expression: 
'DbSet<Category>()
    .FirstOrDefault(c => c.Name == __name_0 && !(c.IsDeleted))'
2025-05-09 14:51:22.950 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Category>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Category>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
            SELECT TOP(1) c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
            FROM Category AS c
            WHERE (c.Name == @__name_0) && Not(c.IsDeleted)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
            SELECT TOP(1) c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
            FROM Category AS c
            WHERE (c.Name == @__name_0) && Not(c.IsDeleted), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Category instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Category);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.CategoryId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Category)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(0);
                                    instance.<ActiveStatus>k__BackingField = dataReader.GetBoolean(1);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(3);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(6);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 14:51:22.970 +05:30 [DBG] Creating DbConnection.
2025-05-09 14:51:22.971 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 14:51:22.972 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:22.973 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:22.973 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:51:22.975 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:51:22.977 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 14:51:22.978 +05:30 [DBG] Executing DbCommand [Parameters=[@__name_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[Name] = @__name_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:51:22.984 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__name_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[Name] = @__name_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:51:22.994 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:51:23.006 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:23.007 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 19ms reading results.
2025-05-09 14:51:23.010 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:23.011 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:51:23.013 +05:30 [WRN] AddCategoryAsync failed: Category 'String' already exists.
2025-05-09 14:51:23.014 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 14:51:23.016 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 14:51:23.017 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 14:51:23.018 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 14:51:23.019 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 14:51:23.021 +05:30 [INF] Executing ConflictObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 14:51:23.023 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem) in 112.9301ms
2025-05-09 14:51:23.026 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 14:51:23.029 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 14:51:23.030 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:23.032 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 14:51:23.034 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Category/add-category - 409 null application/json; charset=utf-8 175.3459ms
2025-05-09 14:51:38.308 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Category/add-category - application/json 26
2025-05-09 14:51:38.314 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/add-category'
2025-05-09 14:51:38.317 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)' with route pattern 'api/Category/add-category' is valid for the request path '/api/Category/add-category'
2025-05-09 14:51:38.350 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 14:51:38.355 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:51:38.358 +05:30 [DBG] Successfully validated the token.
2025-05-09 14:51:38.360 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 14:51:38.365 +05:30 [DBG] Authorization was successful.
2025-05-09 14:51:38.367 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 14:51:38.369 +05:30 [INF] Route matched with {action = "AddCategory", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategory(InventoryManagementSystem.Models.Request.AddCategoryRequest) on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 14:51:38.372 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 14:51:38.375 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 14:51:38.378 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 14:51:38.383 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 14:51:38.384 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 14:51:38.386 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 14:51:38.388 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 14:51:38.390 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' ...
2025-05-09 14:51:38.391 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' using the name '' in request data ...
2025-05-09 14:51:38.393 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 14:51:38.397 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000001D": started reading request body.
2025-05-09 14:51:38.398 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000001D": done reading request body.
2025-05-09 14:51:38.399 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'
2025-05-09 14:51:38.400 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 14:51:38.402 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 14:51:38.404 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' ...
2025-05-09 14:51:38.406 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 14:51:38.408 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 14:51:38.412 +05:30 [DBG] Creating DbConnection.
2025-05-09 14:51:38.414 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 14:51:38.415 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:38.416 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:38.418 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:51:38.419 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:51:38.421 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 14:51:38.422 +05:30 [DBG] Executing DbCommand [Parameters=[@__name_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[Name] = @__name_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:51:38.426 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__name_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[Name] = @__name_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:51:38.432 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:38.433 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 14:51:38.435 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:38.437 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:51:38.443 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Category.CategoryId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:51:38.449 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:51:38.451 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 14:51:38.452 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 14:51:38.456 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 14:51:38.461 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:38.463 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:38.465 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:51:38.466 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:51:38.467 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 14:51:38.468 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Category] ([ActiveStatus], [CreatedAt], [CreatedBy], [IsDeleted], [Name], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[CategoryId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-05-09 14:51:38.481 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Category] ([ActiveStatus], [CreatedAt], [CreatedBy], [IsDeleted], [Name], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[CategoryId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-05-09 14:51:38.487 +05:30 [DBG] The foreign key property 'Category.CategoryId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 14:51:38.491 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:38.492 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 6ms reading results.
2025-05-09 14:51:38.496 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:38.498 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:51:38.501 +05:30 [DBG] An entity of type 'Category' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:51:38.504 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 14:51:38.506 +05:30 [INF] Category 'Decoration' added successfully by UserId 2.
2025-05-09 14:51:38.507 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 14:51:38.511 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 14:51:38.513 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 14:51:38.514 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 14:51:38.515 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 14:51:38.516 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 14:51:38.518 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem) in 131.986ms
2025-05-09 14:51:38.519 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 14:51:38.521 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 14:51:38.522 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:38.524 +05:30 [DBG] Disposed connection to database '' on server '' (2ms).
2025-05-09 14:51:38.527 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Category/add-category - 201 null application/json; charset=utf-8 219.4138ms
2025-05-09 14:51:44.420 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Category/all - null null
2025-05-09 14:51:44.426 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/all'
2025-05-09 14:51:44.432 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)' with route pattern 'api/Category/all' is valid for the request path '/api/Category/all'
2025-05-09 14:51:44.435 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 14:51:44.437 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:51:44.438 +05:30 [DBG] Successfully validated the token.
2025-05-09 14:51:44.439 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 14:51:44.441 +05:30 [DBG] Authorization was successful.
2025-05-09 14:51:44.442 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 14:51:44.450 +05:30 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 14:51:44.453 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 14:51:44.455 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 14:51:44.457 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 14:51:44.462 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 14:51:44.464 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 14:51:44.465 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 14:51:44.469 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 14:51:44.474 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 14:51:44.482 +05:30 [DBG] Compiling query expression: 
'DbSet<Category>()
    .Where(c => !(c.IsDeleted))
    .OrderBy(c => c.Name)'
2025-05-09 14:51:44.493 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Category>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
        SELECT c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
        FROM Category AS c
        WHERE Not(c.IsDeleted)
        ORDER BY c.Name ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
        SELECT c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
        FROM Category AS c
        WHERE Not(c.IsDeleted)
        ORDER BY c.Name ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Category entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Category instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Category);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Category.CategoryId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Category)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]: 
                        {
                            return 
                            {
                                Category instance;
                                instance = new Category();
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(0);
                                instance.<ActiveStatus>k__BackingField = dataReader.GetBoolean(1);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CreatedBy>k__BackingField = dataReader.GetInt64(3);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                instance.<Name>k__BackingField = dataReader.GetString(5);
                                instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(6);
                                instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Category)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 14:51:44.520 +05:30 [DBG] Creating DbConnection.
2025-05-09 14:51:44.522 +05:30 [DBG] Created DbConnection. (2ms).
2025-05-09 14:51:44.524 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:44.527 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:44.529 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:51:44.531 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:51:44.533 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 14:51:44.536 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 14:51:44.545 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 14:51:44.549 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:51:44.552 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:51:44.555 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:51:44.557 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:51:44.559 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:44.561 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 12ms reading results.
2025-05-09 14:51:44.564 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:44.565 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:51:44.567 +05:30 [INF] Fetched 4 categories.
2025-05-09 14:51:44.570 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 14:51:44.581 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 14:51:44.582 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 14:51:44.583 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 14:51:44.585 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 14:51:44.587 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Entity.Category, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 14:51:44.602 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem) in 136.4139ms
2025-05-09 14:51:44.604 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 14:51:44.606 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 14:51:44.608 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:44.609 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 14:51:44.611 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Category/all - 200 null application/json; charset=utf-8 191.7038ms
2025-05-09 14:51:56.513 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:7150/api/Category/status?id=4 - null null
2025-05-09 14:51:56.520 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/status'
2025-05-09 14:51:56.523 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.UpdateCategoryStatus (InventoryManagementSystem)' with route pattern 'api/Category/status' is valid for the request path '/api/Category/status'
2025-05-09 14:51:56.527 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.UpdateCategoryStatus (InventoryManagementSystem)'
2025-05-09 14:51:56.530 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:51:56.532 +05:30 [DBG] Successfully validated the token.
2025-05-09 14:51:56.533 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 14:51:56.535 +05:30 [DBG] Authorization was successful.
2025-05-09 14:51:56.536 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.UpdateCategoryStatus (InventoryManagementSystem)'
2025-05-09 14:51:56.545 +05:30 [INF] Route matched with {action = "UpdateCategoryStatus", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateCategoryStatus(Int32) on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 14:51:56.548 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 14:51:56.549 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 14:51:56.550 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 14:51:56.552 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 14:51:56.554 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 14:51:56.555 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 14:51:56.557 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 14:51:56.563 +05:30 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-05-09 14:51:56.566 +05:30 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-05-09 14:51:56.569 +05:30 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-05-09 14:51:56.570 +05:30 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-05-09 14:51:56.572 +05:30 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-05-09 14:51:56.573 +05:30 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-05-09 14:51:56.577 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 14:51:56.580 +05:30 [DBG] Compiling query expression: 
'DbSet<Category>()
    .FirstOrDefault(c => c.CategoryId == __categoryId_0 && !(c.IsDeleted))'
2025-05-09 14:51:56.587 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Category>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Category>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
            SELECT TOP(1) c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
            FROM Category AS c
            WHERE (c.CategoryId == @__categoryId_0) && Not(c.IsDeleted)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
            SELECT TOP(1) c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
            FROM Category AS c
            WHERE (c.CategoryId == @__categoryId_0) && Not(c.IsDeleted), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Category instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Category);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.CategoryId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Category)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(0);
                                    instance.<ActiveStatus>k__BackingField = dataReader.GetBoolean(1);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(3);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(6);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 14:51:56.605 +05:30 [DBG] Creating DbConnection.
2025-05-09 14:51:56.606 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 14:51:56.607 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:56.609 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:56.610 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:51:56.611 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:51:56.613 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 14:51:56.614 +05:30 [DBG] Executing DbCommand [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:51:56.626 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:51:56.630 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:51:56.634 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:56.636 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 5ms reading results.
2025-05-09 14:51:56.638 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:56.639 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:51:56.642 +05:30 [DBG] An entity of type 'Category' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:51:56.643 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 14:51:56.644 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 14:51:56.646 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 14:51:56.651 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:56.652 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:56.653 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:51:56.654 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:51:56.655 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 14:51:56.656 +05:30 [DBG] Executing DbCommand [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Category] SET [ActiveStatus] = @p0, [CreatedAt] = @p1, [CreatedBy] = @p2, [IsDeleted] = @p3, [Name] = @p4, [UpdatedAt] = @p5, [UpdatedBy] = @p6
OUTPUT 1
WHERE [CategoryId] = @p7;
2025-05-09 14:51:56.664 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Category] SET [ActiveStatus] = @p0, [CreatedAt] = @p1, [CreatedBy] = @p2, [IsDeleted] = @p3, [Name] = @p4, [UpdatedAt] = @p5, [UpdatedBy] = @p6
OUTPUT 1
WHERE [CategoryId] = @p7;
2025-05-09 14:51:56.669 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:56.670 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 14:51:56.672 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:56.673 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:51:56.675 +05:30 [DBG] An entity of type 'Category' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:51:56.676 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 14:51:56.679 +05:30 [INF] CategoryId 4 status updated to false by UserId 2.
2025-05-09 14:51:56.682 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 14:51:56.684 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 14:51:56.685 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 14:51:56.686 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 14:51:56.687 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 14:51:56.688 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 14:51:56.690 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.UpdateCategoryStatus (InventoryManagementSystem) in 134.6133ms
2025-05-09 14:51:56.692 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.UpdateCategoryStatus (InventoryManagementSystem)'
2025-05-09 14:51:56.693 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 14:51:56.695 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:51:56.697 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 14:51:56.698 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:7150/api/Category/status?id=4 - 200 null application/json; charset=utf-8 185.0452ms
2025-05-09 14:52:10.703 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:7150/api/Category/delete?id=4 - null null
2025-05-09 14:52:10.710 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/delete'
2025-05-09 14:52:10.713 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.DeleteCategory (InventoryManagementSystem)' with route pattern 'api/Category/delete' is valid for the request path '/api/Category/delete'
2025-05-09 14:52:10.715 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.DeleteCategory (InventoryManagementSystem)'
2025-05-09 14:52:10.718 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:52:10.720 +05:30 [DBG] Successfully validated the token.
2025-05-09 14:52:10.721 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 14:52:10.722 +05:30 [DBG] Authorization was successful.
2025-05-09 14:52:10.723 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.DeleteCategory (InventoryManagementSystem)'
2025-05-09 14:52:10.728 +05:30 [INF] Route matched with {action = "DeleteCategory", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCategory(Int32) on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 14:52:10.737 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 14:52:10.739 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 14:52:10.740 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 14:52:10.743 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 14:52:10.744 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 14:52:10.747 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 14:52:10.749 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 14:52:10.751 +05:30 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-05-09 14:52:10.752 +05:30 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-05-09 14:52:10.754 +05:30 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-05-09 14:52:10.755 +05:30 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-05-09 14:52:10.757 +05:30 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-05-09 14:52:10.758 +05:30 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-05-09 14:52:10.761 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 14:52:10.765 +05:30 [DBG] Creating DbConnection.
2025-05-09 14:52:10.766 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 14:52:10.767 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:52:10.768 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:52:10.770 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:52:10.771 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:52:10.773 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 14:52:10.774 +05:30 [DBG] Executing DbCommand [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:52:10.778 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:52:10.782 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:52:10.784 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:52:10.785 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-09 14:52:10.788 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:52:10.789 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:52:10.791 +05:30 [DBG] An entity of type 'Category' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:52:10.794 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 14:52:10.795 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 14:52:10.798 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 14:52:10.804 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:52:10.807 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:52:10.809 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:52:10.811 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:52:10.813 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 14:52:10.815 +05:30 [DBG] Executing DbCommand [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Category] SET [ActiveStatus] = @p0, [CreatedAt] = @p1, [CreatedBy] = @p2, [IsDeleted] = @p3, [Name] = @p4, [UpdatedAt] = @p5, [UpdatedBy] = @p6
OUTPUT 1
WHERE [CategoryId] = @p7;
2025-05-09 14:52:10.819 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Category] SET [ActiveStatus] = @p0, [CreatedAt] = @p1, [CreatedBy] = @p2, [IsDeleted] = @p3, [Name] = @p4, [UpdatedAt] = @p5, [UpdatedBy] = @p6
OUTPUT 1
WHERE [CategoryId] = @p7;
2025-05-09 14:52:10.823 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:52:10.824 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 14:52:10.825 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:52:10.827 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:52:10.828 +05:30 [DBG] An entity of type 'Category' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:52:10.831 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 14:52:10.833 +05:30 [INF] CategoryId 4 deleted by UserId 2.
2025-05-09 14:52:10.834 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 14:52:10.837 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 14:52:10.838 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 14:52:10.839 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 14:52:10.840 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 14:52:10.841 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 14:52:10.843 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.DeleteCategory (InventoryManagementSystem) in 96.6998ms
2025-05-09 14:52:10.845 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.DeleteCategory (InventoryManagementSystem)'
2025-05-09 14:52:10.848 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 14:52:10.851 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:52:10.853 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 14:52:10.854 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:7150/api/Category/delete?id=4 - 200 null application/json; charset=utf-8 151.1092ms
2025-05-09 14:52:15.678 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Category/all - null null
2025-05-09 14:52:15.682 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/all'
2025-05-09 14:52:15.687 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)' with route pattern 'api/Category/all' is valid for the request path '/api/Category/all'
2025-05-09 14:52:15.691 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 14:52:15.693 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:52:15.694 +05:30 [DBG] Successfully validated the token.
2025-05-09 14:52:15.695 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 14:52:15.696 +05:30 [DBG] Authorization was successful.
2025-05-09 14:52:15.697 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 14:52:15.700 +05:30 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 14:52:15.703 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 14:52:15.704 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 14:52:15.705 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 14:52:15.707 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 14:52:15.708 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 14:52:15.710 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 14:52:15.711 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 14:52:15.714 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 14:52:15.717 +05:30 [DBG] Creating DbConnection.
2025-05-09 14:52:15.718 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 14:52:15.719 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:52:15.720 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:52:15.721 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:52:15.722 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:52:15.724 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 14:52:15.725 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 14:52:15.731 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 14:52:15.734 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:52:15.736 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:52:15.737 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:52:15.739 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:52:15.740 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 5ms reading results.
2025-05-09 14:52:15.742 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:52:15.743 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:52:15.745 +05:30 [INF] Fetched 3 categories.
2025-05-09 14:52:15.747 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 14:52:15.750 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 14:52:15.750 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 14:52:15.752 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 14:52:15.753 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 14:52:15.754 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Entity.Category, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 14:52:15.756 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem) in 46.4709ms
2025-05-09 14:52:15.758 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 14:52:15.759 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 14:52:15.761 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:52:15.763 +05:30 [DBG] Disposed connection to database '' on server '' (2ms).
2025-05-09 14:52:15.765 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Category/all - 200 null application/json; charset=utf-8 87.8082ms
2025-05-09 14:53:33.394 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Order/customer-order - application/json 147
2025-05-09 14:53:33.414 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/customer-order'
2025-05-09 14:53:33.417 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)' with route pattern 'api/Order/customer-order' is valid for the request path '/api/Order/customer-order'
2025-05-09 14:53:33.430 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 14:53:33.432 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:53:33.437 +05:30 [DBG] Successfully validated the token.
2025-05-09 14:53:33.439 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 14:53:33.442 +05:30 [DBG] Authorization was successful.
2025-05-09 14:53:33.445 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 14:53:33.449 +05:30 [INF] Route matched with {action = "PlaceOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PlaceOrder(InventoryManagementSystem.Models.Request.CustomerOrderRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 14:53:33.455 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 14:53:33.457 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 14:53:33.458 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 14:53:33.460 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 14:53:33.461 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 14:53:33.463 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 14:53:33.465 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 14:53:33.467 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' ...
2025-05-09 14:53:33.469 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' using the name '' in request data ...
2025-05-09 14:53:33.472 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 14:53:33.475 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000027": started reading request body.
2025-05-09 14:53:33.476 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000027": done reading request body.
2025-05-09 14:53:33.483 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'
2025-05-09 14:53:33.486 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 14:53:33.490 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 14:53:33.492 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' ...
2025-05-09 14:53:33.523 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 14:53:33.528 +05:30 [INF] Starting order placement for userId: 2
2025-05-09 14:53:33.532 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 14:53:33.535 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .FirstOrDefault(p => p.ProductId == __productId_0 && !(p.IsDeleted))'
2025-05-09 14:53:33.550 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Products>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Products>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE (p.ProductId == @__productId_0) && Not(p.IsDeleted)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE (p.ProductId == @__productId_0) && Not(p.IsDeleted), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Products entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Products instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Products);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Products)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                            {
                                return 
                                {
                                    Products instance;
                                    instance = new Products();
                                    instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                    instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Name>k__BackingField = dataReader.GetString(9);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                    instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Products)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 14:53:33.577 +05:30 [DBG] Creating DbConnection.
2025-05-09 14:53:33.578 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 14:53:33.579 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.580 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.581 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:53:33.582 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 14:53:33.583 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:53:33.584 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:53:33.594 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:53:33.604 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.621 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.623 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 25ms reading results.
2025-05-09 14:53:33.624 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.625 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:53:33.628 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.630 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 14:53:33.631 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 14:53:33.637 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 14:53:33.646 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.648 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.649 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:53:33.650 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:53:33.654 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-09 14:53:33.655 +05:30 [DBG] Executing DbCommand [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
2025-05-09 14:53:33.667 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
2025-05-09 14:53:33.671 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.672 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 14:53:33.674 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.675 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:53:33.676 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.678 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 14:53:33.681 +05:30 [INF] Starting stock movement for ProductId: 1, UserId: 2, Status: "Completed"
2025-05-09 14:53:33.686 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .FirstOrDefault(p => p.ProductId == __productId_0)'
2025-05-09 14:53:33.692 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Products>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Products>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__productId_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__productId_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Products entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Products instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Products);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Products)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                            {
                                return 
                                {
                                    Products instance;
                                    instance = new Products();
                                    instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                    instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Name>k__BackingField = dataReader.GetString(9);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                    instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Products)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 14:53:33.713 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.714 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.715 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:53:33.715 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 14:53:33.716 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:53:33.717 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 14:53:33.722 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 14:53:33.724 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.725 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 14:53:33.726 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.727 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 14:53:33.729 +05:30 [INF] 'SellOut' movement for ProductId: 1
2025-05-09 14:53:33.732 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.744 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.747 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.749 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 14:53:33.750 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 14:53:33.755 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 14:53:33.757 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.758 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.759 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:53:33.761 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:53:33.762 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 14:53:33.764 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 14:53:33.773 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 14:53:33.777 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 14:53:33.780 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.781 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 4ms reading results.
2025-05-09 14:53:33.782 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.783 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 14:53:33.785 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.787 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 14:53:33.788 +05:30 [INF] Stock movement successfully for ProductId: 1
2025-05-09 14:53:33.789 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.790 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.792 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:53:33.792 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 14:53:33.793 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:53:33.794 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:53:33.797 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 14:53:33.800 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.801 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 14:53:33.803 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.804 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 14:53:33.805 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.807 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 14:53:33.808 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 14:53:33.809 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 14:53:33.810 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.811 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.812 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:53:33.813 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 14:53:33.814 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:53:33.815 +05:30 [DBG] Executing DbCommand [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
2025-05-09 14:53:33.819 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
2025-05-09 14:53:33.823 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.824 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 14:53:33.825 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.826 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 14:53:33.827 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.829 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 14:53:33.830 +05:30 [INF] Starting stock movement for ProductId: 1, UserId: 2, Status: "Completed"
2025-05-09 14:53:33.831 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.832 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.833 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:53:33.834 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 14:53:33.835 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 14:53:33.837 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 14:53:33.840 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 14:53:33.842 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.843 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 0ms reading results.
2025-05-09 14:53:33.845 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.846 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 14:53:33.847 +05:30 [INF] 'SellOut' movement for ProductId: 1
2025-05-09 14:53:33.848 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.850 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.851 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.853 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 14:53:33.856 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 14:53:33.857 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 14:53:33.858 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.859 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.860 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:53:33.861 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 14:53:33.862 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:53:33.863 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 14:53:33.866 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 14:53:33.871 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 14:53:33.873 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.874 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-09 14:53:33.875 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.876 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:53:33.878 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.879 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 14:53:33.880 +05:30 [INF] Stock movement successfully for ProductId: 1
2025-05-09 14:53:33.886 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Orders.OrderId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.910 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Orders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.916 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'OrderItems.OrderItemId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.929 +05:30 [DBG] The navigation 'OrderItems.Order' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.933 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.937 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.938 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'OrderItems.OrderItemId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.940 +05:30 [DBG] The navigation 'OrderItems.Order' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.942 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.943 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:33.944 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 14:53:33.945 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 14:53:33.958 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 14:53:33.968 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.970 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:33.973 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-09 14:53:33.979 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-09 14:53:33.981 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:53:33.982 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 14:53:33.984 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 14:53:33.985 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p8='?' (DbType = Int32), @p9='?' (DbType = Int64), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Orders] ([NumberOfItems], [OrderDate], [OrderStatus], [PaymentDate], [PaymentMethod], [PaymentStatus], [PaymentType], [TotalCost], [TotalQuantity], [UpdatedBy], [UpdatedDate], [UserId])
OUTPUT INSERTED.[OrderId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11);
2025-05-09 14:53:33.998 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p8='?' (DbType = Int32), @p9='?' (DbType = Int64), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Orders] ([NumberOfItems], [OrderDate], [OrderStatus], [PaymentDate], [PaymentMethod], [PaymentStatus], [PaymentType], [TotalCost], [TotalQuantity], [UpdatedBy], [UpdatedDate], [UserId])
OUTPUT INSERTED.[OrderId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11);
2025-05-09 14:53:34.003 +05:30 [DBG] The foreign key property 'Orders.OrderId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 14:53:34.008 +05:30 [DBG] The foreign key property 'OrderItems.OrderId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 14:53:34.011 +05:30 [DBG] The foreign key property 'OrderItems.OrderId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 14:53:34.013 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:34.014 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 13ms reading results.
2025-05-09 14:53:34.017 +05:30 [DBG] Executing 2 update commands as a batch.
2025-05-09 14:53:34.022 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:53:34.023 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:53:34.025 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 14:53:34.025 +05:30 [DBG] Executing DbCommand [Parameters=[@p12='?' (DbType = DateTime2), @p13='?' (DbType = Int64), @p14='?' (DbType = Int32), @p15='?' (DbType = Int64), @p16='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p17='?' (DbType = Int32), @p18='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Int64), @p21='?' (DbType = Int32), @p22='?' (DbType = Int64), @p23='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p24='?' (DbType = Int32), @p25='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [OrderItems] USING (
VALUES (@p12, @p13, @p14, @p15, @p16, @p17, @p18, 0),
(@p19, @p20, @p21, @p22, @p23, @p24, @p25, 1)) AS i ([OrderDate], [OrderId], [OrderItemStatus], [ProductId], [ProductPrice], [Quantity], [TotalPrice], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([OrderDate], [OrderId], [OrderItemStatus], [ProductId], [ProductPrice], [Quantity], [TotalPrice])
VALUES (i.[OrderDate], i.[OrderId], i.[OrderItemStatus], i.[ProductId], i.[ProductPrice], i.[Quantity], i.[TotalPrice])
OUTPUT INSERTED.[OrderItemId], i._Position;
2025-05-09 14:53:34.040 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@p12='?' (DbType = DateTime2), @p13='?' (DbType = Int64), @p14='?' (DbType = Int32), @p15='?' (DbType = Int64), @p16='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p17='?' (DbType = Int32), @p18='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Int64), @p21='?' (DbType = Int32), @p22='?' (DbType = Int64), @p23='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p24='?' (DbType = Int32), @p25='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [OrderItems] USING (
VALUES (@p12, @p13, @p14, @p15, @p16, @p17, @p18, 0),
(@p19, @p20, @p21, @p22, @p23, @p24, @p25, 1)) AS i ([OrderDate], [OrderId], [OrderItemStatus], [ProductId], [ProductPrice], [Quantity], [TotalPrice], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([OrderDate], [OrderId], [OrderItemStatus], [ProductId], [ProductPrice], [Quantity], [TotalPrice])
VALUES (i.[OrderDate], i.[OrderId], i.[OrderItemStatus], i.[ProductId], i.[ProductPrice], i.[Quantity], i.[TotalPrice])
OUTPUT INSERTED.[OrderItemId], i._Position;
2025-05-09 14:53:34.043 +05:30 [DBG] The foreign key property 'OrderItems.OrderItemId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 14:53:34.045 +05:30 [DBG] The foreign key property 'OrderItems.OrderItemId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 14:53:34.046 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:34.047 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 4ms reading results.
2025-05-09 14:53:34.051 +05:30 [DBG] Committing transaction.
2025-05-09 14:53:34.058 +05:30 [DBG] Committed transaction.
2025-05-09 14:53:34.060 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:34.062 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:53:34.064 +05:30 [DBG] Disposing transaction.
2025-05-09 14:53:34.065 +05:30 [DBG] An entity of type 'Orders' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:34.067 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:34.071 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:53:34.073 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 3 entities written to the database.
2025-05-09 14:53:34.074 +05:30 [INF] Order successfully placed for userId: 2
2025-05-09 14:53:34.074 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 14:53:34.076 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 14:53:34.077 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 14:53:34.078 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 14:53:34.078 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 14:53:34.080 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 14:53:34.081 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem) in 618.2461ms
2025-05-09 14:53:34.089 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 14:53:34.090 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 14:53:34.091 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:53:34.092 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 14:53:34.093 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Order/customer-order - 201 null application/json; charset=utf-8 699.8815ms
2025-05-09 14:53:45.430 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Order/customer-order - application/json 145
2025-05-09 14:53:45.433 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/customer-order'
2025-05-09 14:53:45.434 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)' with route pattern 'api/Order/customer-order' is valid for the request path '/api/Order/customer-order'
2025-05-09 14:53:45.440 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 14:53:45.442 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:53:45.464 +05:30 [DBG] Successfully validated the token.
2025-05-09 14:53:45.468 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 14:53:45.473 +05:30 [DBG] Authorization was successful.
2025-05-09 14:53:45.475 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 14:53:45.477 +05:30 [INF] Route matched with {action = "PlaceOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PlaceOrder(InventoryManagementSystem.Models.Request.CustomerOrderRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 14:53:45.487 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 14:53:45.492 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 14:53:45.495 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 14:53:45.497 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 14:53:45.499 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 14:53:45.500 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 14:53:45.503 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 14:53:45.506 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' ...
2025-05-09 14:53:45.508 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' using the name '' in request data ...
2025-05-09 14:53:45.509 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 14:53:45.511 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000029": started reading request body.
2025-05-09 14:53:45.512 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000029": done reading request body.
2025-05-09 14:53:45.518 +05:30 [DBG] JSON input formatter threw an exception: ',' is an invalid start of a value. Path: $.items[1].productId | LineNumber: 7 | BytePositionInLine: 19.
2025-05-09 14:53:45.525 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 14:53:45.530 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 14:53:45.532 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' ...
2025-05-09 14:53:45.534 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 14:53:45.536 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 14:53:45.539 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 14:53:45.541 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 14:53:45.544 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 14:53:45.545 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 14:53:45.548 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 14:53:45.549 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 14:53:45.551 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem) in 50.4702ms
2025-05-09 14:53:45.552 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 14:53:45.555 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Order/customer-order - 400 null application/problem+json; charset=utf-8 125.4051ms
2025-05-09 14:54:09.534 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Order/customer-order - application/json 97
2025-05-09 14:54:09.543 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/customer-order'
2025-05-09 14:54:09.547 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)' with route pattern 'api/Order/customer-order' is valid for the request path '/api/Order/customer-order'
2025-05-09 14:54:09.551 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 14:54:09.553 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:54:09.554 +05:30 [DBG] Successfully validated the token.
2025-05-09 14:54:09.555 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 14:54:09.558 +05:30 [DBG] Authorization was successful.
2025-05-09 14:54:09.559 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 14:54:09.560 +05:30 [INF] Route matched with {action = "PlaceOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PlaceOrder(InventoryManagementSystem.Models.Request.CustomerOrderRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 14:54:09.562 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 14:54:09.563 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 14:54:09.565 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 14:54:09.567 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 14:54:09.568 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 14:54:09.570 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 14:54:09.578 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 14:54:09.580 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' ...
2025-05-09 14:54:09.583 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' using the name '' in request data ...
2025-05-09 14:54:09.584 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 14:54:09.586 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000002B": started reading request body.
2025-05-09 14:54:09.589 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000002B": done reading request body.
2025-05-09 14:54:09.593 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'
2025-05-09 14:54:09.594 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 14:54:09.596 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 14:54:09.598 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' ...
2025-05-09 14:54:09.600 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 14:54:09.602 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 14:54:09.603 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 14:54:09.607 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 14:54:09.610 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 14:54:09.611 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 14:54:09.613 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 14:54:09.615 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 14:54:09.616 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem) in 46.0215ms
2025-05-09 14:54:09.624 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 14:54:09.625 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Order/customer-order - 400 null application/problem+json; charset=utf-8 91.0709ms
2025-05-09 14:56:11.825 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Order/customer-order/2 - null null
2025-05-09 14:56:11.838 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/customer-order/2'
2025-05-09 14:56:11.840 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)' with route pattern 'api/Order/customer-order/{orderId}' is valid for the request path '/api/Order/customer-order/2'
2025-05-09 14:56:11.842 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)'
2025-05-09 14:56:11.844 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:56:11.846 +05:30 [DBG] Successfully validated the token.
2025-05-09 14:56:11.847 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 14:56:11.849 +05:30 [DBG] Authorization was successful.
2025-05-09 14:56:11.850 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)'
2025-05-09 14:56:11.855 +05:30 [INF] Route matched with {action = "GetCustomerOrderById", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerOrderById(Int64) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 14:56:11.857 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 14:56:11.859 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 14:56:11.861 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 14:56:11.864 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 14:56:11.866 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 14:56:11.868 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 14:56:11.870 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 14:56:11.872 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' ...
2025-05-09 14:56:11.874 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' using the name 'orderId' in request data ...
2025-05-09 14:56:11.876 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-09 14:56:11.877 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-09 14:56:11.879 +05:30 [DBG] Attempting to validate the bound parameter 'orderId' of type 'System.Int64' ...
2025-05-09 14:56:11.882 +05:30 [DBG] Done attempting to validate the bound parameter 'orderId' of type 'System.Int64'.
2025-05-09 14:56:11.885 +05:30 [INF] Fetching order details for OrderId 2, UserId 2
2025-05-09 14:56:11.889 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 14:56:11.893 +05:30 [DBG] Compiling query expression: 
'DbSet<Orders>()
    .Include(o => o.OrderItems)
    .ThenInclude(oi => oi.Product)
    .Include(o => o.OrderStatusNavigation)
    .Include(o => o.PaymentTypeNavigation)
    .Include(o => o.PaymentMethodNavigation)
    .Include(o => o.PaymentStatusNavigation)
    .FirstOrDefault(o => o.OrderId == __orderId_0 && o.UserId == __userId_1)'
2025-05-09 14:56:11.899 +05:30 [DBG] Including navigation: 'Orders.OrderItems'.
2025-05-09 14:56:11.901 +05:30 [DBG] Including navigation: 'Orders.OrderStatusNavigation'.
2025-05-09 14:56:11.903 +05:30 [DBG] Including navigation: 'Orders.PaymentTypeNavigation'.
2025-05-09 14:56:11.906 +05:30 [DBG] Including navigation: 'Orders.PaymentMethodNavigation'.
2025-05-09 14:56:11.909 +05:30 [DBG] Including navigation: 'Orders.PaymentStatusNavigation'.
2025-05-09 14:56:11.911 +05:30 [DBG] Including navigation: 'OrderItems.Product'.
2025-05-09 14:56:11.979 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Orders>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Orders>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Orders.OrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Orders.NumberOfItems (int) Required, 1], [Property: Orders.OrderDate (DateTime) Required ValueGenerated.OnAdd, 2], [Property: Orders.OrderStatus (int) Required FK Index, 3], [Property: Orders.PaymentDate (DateTime) Required, 4], [Property: Orders.PaymentMethod (int) Required FK Index, 5], [Property: Orders.PaymentStatus (int) Required FK Index, 6], [Property: Orders.PaymentType (int) Required FK Index, 7], [Property: Orders.TotalCost (decimal) Required, 8], [Property: Orders.TotalQuantity (int) Required, 9], [Property: Orders.UpdatedBy (long) Required FK Index, 10], [Property: Orders.UpdatedDate (DateTime) Required ValueGenerated.OnAdd, 11], [Property: Orders.UserId (long) Required FK Index, 12] }
                1 -> 0
                2 -> 13
                3 -> 14
                4 -> 15
                5 -> 16
                6 -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 18], [Property: OrderItems.OrderId (long) Required FK Index, 19], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 20], [Property: OrderItems.ProductId (long) Required FK Index, 21], [Property: OrderItems.ProductPrice (decimal) Required, 22], [Property: OrderItems.Quantity (int) Required, 23], [Property: OrderItems.TotalPrice (decimal) Required, 24] }
                7 -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Products.AvailableQuantity (int) Required, 26], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 27], [Property: Products.CreatedAt (DateTime) Required, 28], [Property: Products.CreatedBy (long) Required FK Index, 29], [Property: Products.Description (string) MaxLength(225), 30], [Property: Products.IsDeleted (bool) Required, 31], [Property: Products.LastRestockAt (DateTime) Required, 32], [Property: Products.MinimumRequiredQuantity (int) Required, 33], [Property: Products.Name (string) Required MaxLength(100), 34], [Property: Products.Price (decimal) Required, 35], [Property: Products.ProductStatus (int) Required, 36], [Property: Products.UpdatedAt (DateTime) Required, 37], [Property: Products.UpdatedBy (long) Required FK Index, 38] }
                8 -> 17
                9 -> 25
                10 -> Dictionary<IProperty, int> { [Property: OrderStatus.StatusId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: OrderStatus.Name (string) Required MaxLength(100), 39] }
                11 -> Dictionary<IProperty, int> { [Property: PaymentType.PaymentTypeId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 14], [Property: PaymentType.Name (string) Required MaxLength(100), 40] }
                12 -> Dictionary<IProperty, int> { [Property: PaymentMethod.PaymentMethodId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: PaymentMethod.Name (string) Required MaxLength(100), 41] }
                13 -> Dictionary<IProperty, int> { [Property: PaymentStatus.PaymentStatusId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 16], [Property: PaymentStatus.Name (string) Required MaxLength(100), 42] }
            SELECT s.OrderId, s.NumberOfItems, s.OrderDate, s.OrderStatus, s.PaymentDate, s.PaymentMethod, s.PaymentStatus, s.PaymentType, s.TotalCost, s.TotalQuantity, s.UpdatedBy, s.UpdatedDate, s.UserId, s.StatusId, s.PaymentTypeId, s.PaymentMethodId, s.PaymentStatusId, s0.OrderItemId, s0.OrderDate, s0.OrderId, s0.OrderItemStatus, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.TotalPrice, s0.ProductId0, s0.AvailableQuantity, s0.CategoryId, s0.CreatedAt, s0.CreatedBy, s0.Description, s0.IsDeleted, s0.LastRestockAt, s0.MinimumRequiredQuantity, s0.Name, s0.Price, s0.ProductStatus, s0.UpdatedAt, s0.UpdatedBy, s.Name, s.Name0, s.Name1, s.Name2
            FROM 
            (
                SELECT TOP(1) o.OrderId, o.NumberOfItems, o.OrderDate, o.OrderStatus, o.PaymentDate, o.PaymentMethod, o.PaymentStatus, o.PaymentType, o.TotalCost, o.TotalQuantity, o.UpdatedBy, o.UpdatedDate, o.UserId, o0.StatusId, o0.Name, p.PaymentTypeId, p.Name AS Name0, p0.PaymentMethodId, p0.Name AS Name1, p1.PaymentStatusId, p1.Name AS Name2
                FROM Orders AS o
                INNER JOIN OrderStatus AS o0 ON o.OrderStatus == o0.StatusId
                INNER JOIN PaymentType AS p ON o.PaymentType == p.PaymentTypeId
                INNER JOIN PaymentMethod AS p0 ON o.PaymentMethod == p0.PaymentMethodId
                INNER JOIN PaymentStatus AS p1 ON o.PaymentStatus == p1.PaymentStatusId
                WHERE (o.OrderId == @__orderId_0) && (o.UserId == @__userId_1)
            ) AS s
            LEFT JOIN 
            (
                SELECT o1.OrderItemId, o1.OrderDate, o1.OrderId, o1.OrderItemStatus, o1.ProductId, o1.ProductPrice, o1.Quantity, o1.TotalPrice, p2.ProductId AS ProductId0, p2.AvailableQuantity, p2.CategoryId, p2.CreatedAt, p2.CreatedBy, p2.Description, p2.IsDeleted, p2.LastRestockAt, p2.MinimumRequiredQuantity, p2.Name, p2.Price, p2.ProductStatus, p2.UpdatedAt, p2.UpdatedBy
                FROM OrderItems AS o1
                INNER JOIN Products AS p2 ON o1.ProductId == p2.ProductId
            ) AS s0 ON s.OrderId == s0.OrderId
            ORDER BY s.OrderId ASC, s.StatusId ASC, s.PaymentTypeId ASC, s.PaymentMethodId ASC, s.PaymentStatusId ASC, s0.OrderItemId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Orders.OrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Orders.NumberOfItems (int) Required, 1], [Property: Orders.OrderDate (DateTime) Required ValueGenerated.OnAdd, 2], [Property: Orders.OrderStatus (int) Required FK Index, 3], [Property: Orders.PaymentDate (DateTime) Required, 4], [Property: Orders.PaymentMethod (int) Required FK Index, 5], [Property: Orders.PaymentStatus (int) Required FK Index, 6], [Property: Orders.PaymentType (int) Required FK Index, 7], [Property: Orders.TotalCost (decimal) Required, 8], [Property: Orders.TotalQuantity (int) Required, 9], [Property: Orders.UpdatedBy (long) Required FK Index, 10], [Property: Orders.UpdatedDate (DateTime) Required ValueGenerated.OnAdd, 11], [Property: Orders.UserId (long) Required FK Index, 12] }
                1 -> 0
                2 -> 13
                3 -> 14
                4 -> 15
                5 -> 16
                6 -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 18], [Property: OrderItems.OrderId (long) Required FK Index, 19], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 20], [Property: OrderItems.ProductId (long) Required FK Index, 21], [Property: OrderItems.ProductPrice (decimal) Required, 22], [Property: OrderItems.Quantity (int) Required, 23], [Property: OrderItems.TotalPrice (decimal) Required, 24] }
                7 -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Products.AvailableQuantity (int) Required, 26], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 27], [Property: Products.CreatedAt (DateTime) Required, 28], [Property: Products.CreatedBy (long) Required FK Index, 29], [Property: Products.Description (string) MaxLength(225), 30], [Property: Products.IsDeleted (bool) Required, 31], [Property: Products.LastRestockAt (DateTime) Required, 32], [Property: Products.MinimumRequiredQuantity (int) Required, 33], [Property: Products.Name (string) Required MaxLength(100), 34], [Property: Products.Price (decimal) Required, 35], [Property: Products.ProductStatus (int) Required, 36], [Property: Products.UpdatedAt (DateTime) Required, 37], [Property: Products.UpdatedBy (long) Required FK Index, 38] }
                8 -> 17
                9 -> 25
                10 -> Dictionary<IProperty, int> { [Property: OrderStatus.StatusId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: OrderStatus.Name (string) Required MaxLength(100), 39] }
                11 -> Dictionary<IProperty, int> { [Property: PaymentType.PaymentTypeId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 14], [Property: PaymentType.Name (string) Required MaxLength(100), 40] }
                12 -> Dictionary<IProperty, int> { [Property: PaymentMethod.PaymentMethodId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: PaymentMethod.Name (string) Required MaxLength(100), 41] }
                13 -> Dictionary<IProperty, int> { [Property: PaymentStatus.PaymentStatusId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 16], [Property: PaymentStatus.Name (string) Required MaxLength(100), 42] }
            SELECT s.OrderId, s.NumberOfItems, s.OrderDate, s.OrderStatus, s.PaymentDate, s.PaymentMethod, s.PaymentStatus, s.PaymentType, s.TotalCost, s.TotalQuantity, s.UpdatedBy, s.UpdatedDate, s.UserId, s.StatusId, s.PaymentTypeId, s.PaymentMethodId, s.PaymentStatusId, s0.OrderItemId, s0.OrderDate, s0.OrderId, s0.OrderItemStatus, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.TotalPrice, s0.ProductId0, s0.AvailableQuantity, s0.CategoryId, s0.CreatedAt, s0.CreatedBy, s0.Description, s0.IsDeleted, s0.LastRestockAt, s0.MinimumRequiredQuantity, s0.Name, s0.Price, s0.ProductStatus, s0.UpdatedAt, s0.UpdatedBy, s.Name, s.Name0, s.Name1, s.Name2
            FROM 
            (
                SELECT TOP(1) o.OrderId, o.NumberOfItems, o.OrderDate, o.OrderStatus, o.PaymentDate, o.PaymentMethod, o.PaymentStatus, o.PaymentType, o.TotalCost, o.TotalQuantity, o.UpdatedBy, o.UpdatedDate, o.UserId, o0.StatusId, o0.Name, p.PaymentTypeId, p.Name AS Name0, p0.PaymentMethodId, p0.Name AS Name1, p1.PaymentStatusId, p1.Name AS Name2
                FROM Orders AS o
                INNER JOIN OrderStatus AS o0 ON o.OrderStatus == o0.StatusId
                INNER JOIN PaymentType AS p ON o.PaymentType == p.PaymentTypeId
                INNER JOIN PaymentMethod AS p0 ON o.PaymentMethod == p0.PaymentMethodId
                INNER JOIN PaymentStatus AS p1 ON o.PaymentStatus == p1.PaymentStatusId
                WHERE (o.OrderId == @__orderId_0) && (o.UserId == @__userId_1)
            ) AS s
            LEFT JOIN 
            (
                SELECT o1.OrderItemId, o1.OrderDate, o1.OrderId, o1.OrderItemStatus, o1.ProductId, o1.ProductPrice, o1.Quantity, o1.TotalPrice, p2.ProductId AS ProductId0, p2.AvailableQuantity, p2.CategoryId, p2.CreatedAt, p2.CreatedBy, p2.Description, p2.IsDeleted, p2.LastRestockAt, p2.MinimumRequiredQuantity, p2.Name, p2.Price, p2.ProductStatus, p2.UpdatedAt, p2.UpdatedBy
                FROM OrderItems AS o1
                INNER JOIN Products AS p2 ON o1.ProductId == p2.ProductId
            ) AS s0 ON s.OrderId == s0.OrderId
            ORDER BY s.OrderId ASC, s.StatusId ASC, s.PaymentTypeId ASC, s.PaymentMethodId ASC, s.PaymentStatusId ASC, s0.OrderItemId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Orders entity;
                OrderStatus entity;
                PaymentType entity;
                PaymentMethod entity;
                PaymentStatus entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Orders instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Orders);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Orders.OrderId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Orders)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")]: 
                                {
                                    return 
                                    {
                                        Orders instance;
                                        instance = new Orders();
                                        instance.<OrderId>k__BackingField = dataReader.GetInt64(0);
                                        instance.<NumberOfItems>k__BackingField = dataReader.GetInt32(1);
                                        instance.<OrderDate>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<OrderStatus>k__BackingField = dataReader.GetInt32(3);
                                        instance.<PaymentDate>k__BackingField = dataReader.GetDateTime(4);
                                        instance.<PaymentMethod>k__BackingField = dataReader.GetInt32(5);
                                        instance.<PaymentStatus>k__BackingField = dataReader.GetInt32(6);
                                        instance.<PaymentType>k__BackingField = dataReader.GetInt32(7);
                                        instance.<TotalCost>k__BackingField = dataReader.GetDecimal(8);
                                        instance.<TotalQuantity>k__BackingField = dataReader.GetInt32(9);
                                        instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(10);
                                        instance.<UpdatedDate>k__BackingField = dataReader.GetDateTime(11);
                                        instance.<UserId>k__BackingField = dataReader.GetInt64(12);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Orders)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                entity = 
                {
                    MaterializationContext materializationContext4;
                    IEntityType entityType4;
                    OrderStatus instance4;
                    InternalEntityEntry entry4;
                    bool hasNullKey4;
                    materializationContext4 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance4 = default(OrderStatus);
                    entry4 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: OrderStatus.StatusId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(13) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey4);
                    !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
                    {
                        entityType4 = entry4.EntityType;
                        return instance4 = (OrderStatus)entry4.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot4;
                        shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType4 = [LIFTABLE Constant: EntityType: OrderStatus | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus")];
                        instance4 = switch (entityType4)
                        {
                            case [LIFTABLE Constant: EntityType: OrderStatus | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus")]: 
                                {
                                    return 
                                    {
                                        OrderStatus instance;
                                        instance = new OrderStatus();
                                        instance.<StatusId>k__BackingField = dataReader.GetInt32(13);
                                        instance.<Name>k__BackingField = dataReader.GetString(39);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext4.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: OrderStatus | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(OrderStatus)
                        }
                        ;
                        entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType4, 
                            entity: instance4, 
                            snapshot: shadowSnapshot4);
                        return instance4;
                    } : default(void);
                    return instance4;
                };
                entity = 
                {
                    MaterializationContext materializationContext5;
                    IEntityType entityType5;
                    PaymentType instance5;
                    InternalEntityEntry entry5;
                    bool hasNullKey5;
                    materializationContext5 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance5 = default(PaymentType);
                    entry5 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: PaymentType.PaymentTypeId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentType").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(14) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey5);
                    !(hasNullKey5) ? entry5 != default(InternalEntityEntry) ? 
                    {
                        entityType5 = entry5.EntityType;
                        return instance5 = (PaymentType)entry5.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot5;
                        shadowSnapshot5 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType5 = [LIFTABLE Constant: EntityType: PaymentType | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentType")];
                        instance5 = switch (entityType5)
                        {
                            case [LIFTABLE Constant: EntityType: PaymentType | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentType")]: 
                                {
                                    return 
                                    {
                                        PaymentType instance;
                                        instance = new PaymentType();
                                        instance.<PaymentTypeId>k__BackingField = dataReader.GetInt32(14);
                                        instance.<Name>k__BackingField = dataReader.GetString(40);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext5.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: PaymentType | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentType")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(PaymentType)
                        }
                        ;
                        entry5 = entityType5 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType5, 
                            entity: instance5, 
                            snapshot: shadowSnapshot5);
                        return instance5;
                    } : default(void);
                    return instance5;
                };
                entity = 
                {
                    MaterializationContext materializationContext6;
                    IEntityType entityType6;
                    PaymentMethod instance6;
                    InternalEntityEntry entry6;
                    bool hasNullKey6;
                    materializationContext6 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance6 = default(PaymentMethod);
                    entry6 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: PaymentMethod.PaymentMethodId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentMethod").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(15) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey6);
                    !(hasNullKey6) ? entry6 != default(InternalEntityEntry) ? 
                    {
                        entityType6 = entry6.EntityType;
                        return instance6 = (PaymentMethod)entry6.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot6;
                        shadowSnapshot6 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType6 = [LIFTABLE Constant: EntityType: PaymentMethod | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentMethod")];
                        instance6 = switch (entityType6)
                        {
                            case [LIFTABLE Constant: EntityType: PaymentMethod | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentMethod")]: 
                                {
                                    return 
                                    {
                                        PaymentMethod instance;
                                        instance = new PaymentMethod();
                                        instance.<PaymentMethodId>k__BackingField = dataReader.GetInt32(15);
                                        instance.<Name>k__BackingField = dataReader.GetString(41);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext6.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: PaymentMethod | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentMethod")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(PaymentMethod)
                        }
                        ;
                        entry6 = entityType6 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType6, 
                            entity: instance6, 
                            snapshot: shadowSnapshot6);
                        return instance6;
                    } : default(void);
                    return instance6;
                };
                entity = 
                {
                    MaterializationContext materializationContext7;
                    IEntityType entityType7;
                    PaymentStatus instance7;
                    InternalEntityEntry entry7;
                    bool hasNullKey7;
                    materializationContext7 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance7 = default(PaymentStatus);
                    entry7 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: PaymentStatus.PaymentStatusId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentStatus").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(16) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey7);
                    !(hasNullKey7) ? entry7 != default(InternalEntityEntry) ? 
                    {
                        entityType7 = entry7.EntityType;
                        return instance7 = (PaymentStatus)entry7.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot7;
                        shadowSnapshot7 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType7 = [LIFTABLE Constant: EntityType: PaymentStatus | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentStatus")];
                        instance7 = switch (entityType7)
                        {
                            case [LIFTABLE Constant: EntityType: PaymentStatus | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentStatus")]: 
                                {
                                    return 
                                    {
                                        PaymentStatus instance;
                                        instance = new PaymentStatus();
                                        instance.<PaymentStatusId>k__BackingField = dataReader.GetInt32(16);
                                        instance.<Name>k__BackingField = dataReader.GetString(42);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext7.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: PaymentStatus | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentStatus")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(PaymentStatus)
                        }
                        ;
                        entry7 = entityType7 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType7, 
                            entity: instance7, 
                            snapshot: shadowSnapshot7);
                        return instance7;
                    } : default(void);
                    return instance7;
                };
                resultContext.Values = new object[]
                { 
                    entity, 
                    entity, 
                    entity, 
                    entity, 
                    entity 
                };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Orders, Orders>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Orders)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(long?)dataReader.GetInt64(0), 
                        (object)(int?)dataReader.GetInt32(13), 
                        (object)(int?)dataReader.GetInt32(14), 
                        (object)(int?)dataReader.GetInt32(15), 
                        (object)(int?)dataReader.GetInt32(16) 
                    }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(long?)dataReader.GetInt64(0), 
                        (object)(int?)dataReader.GetInt32(13), 
                        (object)(int?)dataReader.GetInt32(14), 
                        (object)(int?)dataReader.GetInt32(15), 
                        (object)(int?)dataReader.GetInt32(16) 
                    }], 
                    navigation: [LIFTABLE Constant: Navigation: Orders.OrderItems (ICollection<OrderItems>) Collection ToDependent OrderItems Inverse: Order | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("OrderItems")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Orders, ICollection<OrderItems>, OrderItems> | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("OrderItems").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
                ShaperProcessingExpressionVisitor.IncludeReference<Orders, Orders, OrderStatus>(
                    queryContext: queryContext, 
                    entity: (Orders)(resultContext.Values[0]), 
                    relatedEntity: (OrderStatus)(resultContext.Values[1]), 
                    navigation: [LIFTABLE Constant: Navigation: Orders.OrderStatusNavigation (OrderStatus) ToPrincipal OrderStatus | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("OrderStatusNavigation")], 
                    inverseNavigation: default(INavigation), 
                    fixup: (namelessParameter{18}, namelessParameter{19}) => 
                    {
                        return namelessParameter{18}.<OrderStatusNavigation>k__BackingField = namelessParameter{19};
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.IncludeReference<Orders, Orders, PaymentType>(
                    queryContext: queryContext, 
                    entity: (Orders)(resultContext.Values[0]), 
                    relatedEntity: (PaymentType)(resultContext.Values[2]), 
                    navigation: [LIFTABLE Constant: Navigation: Orders.PaymentTypeNavigation (PaymentType) ToPrincipal PaymentType | Resolver: namelessParameter{20} => namelessParameter{20}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("PaymentTypeNavigation")], 
                    inverseNavigation: default(INavigation), 
                    fixup: (namelessParameter{21}, namelessParameter{22}) => 
                    {
                        return namelessParameter{21}.<PaymentTypeNavigation>k__BackingField = namelessParameter{22};
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.IncludeReference<Orders, Orders, PaymentMethod>(
                    queryContext: queryContext, 
                    entity: (Orders)(resultContext.Values[0]), 
                    relatedEntity: (PaymentMethod)(resultContext.Values[3]), 
                    navigation: [LIFTABLE Constant: Navigation: Orders.PaymentMethodNavigation (PaymentMethod) ToPrincipal PaymentMethod | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("PaymentMethodNavigation")], 
                    inverseNavigation: default(INavigation), 
                    fixup: (namelessParameter{24}, namelessParameter{25}) => 
                    {
                        return namelessParameter{24}.<PaymentMethodNavigation>k__BackingField = namelessParameter{25};
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.IncludeReference<Orders, Orders, PaymentStatus>(
                    queryContext: queryContext, 
                    entity: (Orders)(resultContext.Values[0]), 
                    relatedEntity: (PaymentStatus)(resultContext.Values[4]), 
                    navigation: [LIFTABLE Constant: Navigation: Orders.PaymentStatusNavigation (PaymentStatus) ToPrincipal PaymentStatus | Resolver: namelessParameter{26} => namelessParameter{26}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("PaymentStatusNavigation")], 
                    inverseNavigation: default(INavigation), 
                    fixup: (namelessParameter{27}, namelessParameter{28}) => 
                    {
                        return namelessParameter{27}.<PaymentStatusNavigation>k__BackingField = namelessParameter{28};
                    }, 
                    trackingQuery: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Orders, OrderItems>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(long?)dataReader.GetInt64(0), 
                    (object)(int?)dataReader.GetInt32(13), 
                    (object)(int?)dataReader.GetInt32(14), 
                    (object)(int?)dataReader.GetInt32(15), 
                    (object)(int?)dataReader.GetInt32(16) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(long?)dataReader.GetInt64(0), 
                    (object)(int?)dataReader.GetInt32(13), 
                    (object)(int?)dataReader.GetInt32(14), 
                    (object)(int?)dataReader.GetInt32(15), 
                    (object)(int?)dataReader.GetInt32(16) 
                }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)dataReader.IsDBNull(17) ? default(long?) : (long?)dataReader.GetInt64(17), 
                    (object)dataReader.IsDBNull(25) ? default(long?) : (long?)dataReader.GetInt64(25) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right, 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    OrderItems entity;
                    Products entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        OrderItems instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(OrderItems);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: OrderItems.OrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetInt64(17) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (OrderItems)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{29} => namelessParameter{29}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{30} => namelessParameter{30}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]: 
                                    {
                                        return 
                                        {
                                            OrderItems instance;
                                            instance = new OrderItems();
                                            instance.<OrderItemId>k__BackingField = dataReader.IsDBNull(17) ? default(long) : dataReader.GetInt64(17);
                                            instance.<OrderDate>k__BackingField = dataReader.IsDBNull(18) ? default(DateTime) : dataReader.GetDateTime(18);
                                            instance.<OrderId>k__BackingField = dataReader.IsDBNull(19) ? default(long) : dataReader.GetInt64(19);
                                            instance.<OrderItemStatus>k__BackingField = dataReader.IsDBNull(20) ? default(int) : dataReader.GetInt32(20);
                                            instance.<ProductId>k__BackingField = dataReader.IsDBNull(21) ? default(long) : dataReader.GetInt64(21);
                                            instance.<ProductPrice>k__BackingField = dataReader.IsDBNull(22) ? default(decimal) : dataReader.GetDecimal(22);
                                            instance.<Quantity>k__BackingField = dataReader.IsDBNull(23) ? default(int) : dataReader.GetInt32(23);
                                            instance.<TotalPrice>k__BackingField = dataReader.IsDBNull(24) ? default(decimal) : dataReader.GetDecimal(24);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{31} => namelessParameter{31}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(OrderItems)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        Products instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(Products);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(25) ? default(object) : (object)dataReader.GetInt64(25) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (Products)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{32} => namelessParameter{32}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{33} => namelessParameter{33}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                                    {
                                        return 
                                        {
                                            Products instance;
                                            instance = new Products();
                                            instance.<ProductId>k__BackingField = dataReader.IsDBNull(25) ? default(long) : dataReader.GetInt64(25);
                                            instance.<AvailableQuantity>k__BackingField = dataReader.IsDBNull(26) ? default(int) : dataReader.GetInt32(26);
                                            instance.<CategoryId>k__BackingField = dataReader.IsDBNull(27) ? default(int) : dataReader.GetInt32(27);
                                            instance.<CreatedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime) : dataReader.GetDateTime(28);
                                            instance.<CreatedBy>k__BackingField = dataReader.IsDBNull(29) ? default(long) : dataReader.GetInt64(29);
                                            instance.<Description>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                            instance.<IsDeleted>k__BackingField = dataReader.IsDBNull(31) ? default(bool) : dataReader.GetBoolean(31);
                                            instance.<LastRestockAt>k__BackingField = dataReader.IsDBNull(32) ? default(DateTime) : dataReader.GetDateTime(32);
                                            instance.<MinimumRequiredQuantity>k__BackingField = dataReader.IsDBNull(33) ? default(int) : dataReader.GetInt32(33);
                                            instance.<Name>k__BackingField = dataReader.IsDBNull(34) ? default(string) : dataReader.GetString(34);
                                            instance.<Price>k__BackingField = dataReader.IsDBNull(35) ? default(decimal) : dataReader.GetDecimal(35);
                                            instance.<ProductStatus>k__BackingField = dataReader.IsDBNull(36) ? default(int) : dataReader.GetInt32(36);
                                            instance.<UpdatedAt>k__BackingField = dataReader.IsDBNull(37) ? default(DateTime) : dataReader.GetDateTime(37);
                                            instance.<UpdatedBy>k__BackingField = dataReader.IsDBNull(38) ? default(long) : dataReader.GetInt64(38);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{34} => namelessParameter{34}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Products)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    ShaperProcessingExpressionVisitor.IncludeReference<OrderItems, OrderItems, Products>(
                        queryContext: queryContext, 
                        entity: entity, 
                        relatedEntity: entity, 
                        navigation: [LIFTABLE Constant: Navigation: OrderItems.Product (Products) ToPrincipal Products | Resolver: namelessParameter{35} => namelessParameter{35}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindNavigation("Product")], 
                        inverseNavigation: default(INavigation), 
                        fixup: (namelessParameter{36}, namelessParameter{37}) => 
                        {
                            return namelessParameter{36}.<Product>k__BackingField = namelessParameter{37};
                        }, 
                        trackingQuery: True);
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: OrderItems.Order (Orders) ToPrincipal Orders Inverse: OrderItems | Resolver: namelessParameter{38} => namelessParameter{38}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindNavigation("Order")], 
                fixup: (namelessParameter{39}, namelessParameter{40}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Orders, ICollection<OrderItems>, OrderItems> | Resolver: namelessParameter{41} => namelessParameter{41}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("OrderItems").GetCollectionAccessor()].Add(
                        entity: namelessParameter{39}, 
                        value: namelessParameter{40}, 
                        forMaterialization: True);
                    return namelessParameter{40}.<Order>k__BackingField = namelessParameter{39};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Orders)(resultContext.Values[0]) : default(Orders);
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 14:56:12.119 +05:30 [DBG] Creating DbConnection.
2025-05-09 14:56:12.120 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 14:56:12.120 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:56:12.121 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:56:12.122 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:56:12.123 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 14:56:12.124 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 14:56:12.125 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64), @__userId_1='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[OrderId], [s].[NumberOfItems], [s].[OrderDate], [s].[OrderStatus], [s].[PaymentDate], [s].[PaymentMethod], [s].[PaymentStatus], [s].[PaymentType], [s].[TotalCost], [s].[TotalQuantity], [s].[UpdatedBy], [s].[UpdatedDate], [s].[UserId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId], [s0].[OrderDate], [s0].[OrderId], [s0].[OrderItemStatus], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[TotalPrice], [s0].[ProductId0], [s0].[AvailableQuantity], [s0].[CategoryId], [s0].[CreatedAt], [s0].[CreatedBy], [s0].[Description], [s0].[IsDeleted], [s0].[LastRestockAt], [s0].[MinimumRequiredQuantity], [s0].[Name], [s0].[Price], [s0].[ProductStatus], [s0].[UpdatedAt], [s0].[UpdatedBy], [s].[Name], [s].[Name0], [s].[Name1], [s].[Name2]
FROM (
    SELECT TOP(1) [o].[OrderId], [o].[NumberOfItems], [o].[OrderDate], [o].[OrderStatus], [o].[PaymentDate], [o].[PaymentMethod], [o].[PaymentStatus], [o].[PaymentType], [o].[TotalCost], [o].[TotalQuantity], [o].[UpdatedBy], [o].[UpdatedDate], [o].[UserId], [o0].[StatusId], [o0].[Name], [p].[PaymentTypeId], [p].[Name] AS [Name0], [p0].[PaymentMethodId], [p0].[Name] AS [Name1], [p1].[PaymentStatusId], [p1].[Name] AS [Name2]
    FROM [Orders] AS [o]
    INNER JOIN [OrderStatus] AS [o0] ON [o].[OrderStatus] = [o0].[StatusId]
    INNER JOIN [PaymentType] AS [p] ON [o].[PaymentType] = [p].[PaymentTypeId]
    INNER JOIN [PaymentMethod] AS [p0] ON [o].[PaymentMethod] = [p0].[PaymentMethodId]
    INNER JOIN [PaymentStatus] AS [p1] ON [o].[PaymentStatus] = [p1].[PaymentStatusId]
    WHERE [o].[OrderId] = @__orderId_0 AND [o].[UserId] = @__userId_1
) AS [s]
LEFT JOIN (
    SELECT [o1].[OrderItemId], [o1].[OrderDate], [o1].[OrderId], [o1].[OrderItemStatus], [o1].[ProductId], [o1].[ProductPrice], [o1].[Quantity], [o1].[TotalPrice], [p2].[ProductId] AS [ProductId0], [p2].[AvailableQuantity], [p2].[CategoryId], [p2].[CreatedAt], [p2].[CreatedBy], [p2].[Description], [p2].[IsDeleted], [p2].[LastRestockAt], [p2].[MinimumRequiredQuantity], [p2].[Name], [p2].[Price], [p2].[ProductStatus], [p2].[UpdatedAt], [p2].[UpdatedBy]
    FROM [OrderItems] AS [o1]
    INNER JOIN [Products] AS [p2] ON [o1].[ProductId] = [p2].[ProductId]
) AS [s0] ON [s].[OrderId] = [s0].[OrderId]
ORDER BY [s].[OrderId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId]
2025-05-09 14:56:12.145 +05:30 [INF] Executed DbCommand (20ms) [Parameters=[@__orderId_0='?' (DbType = Int64), @__userId_1='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[OrderId], [s].[NumberOfItems], [s].[OrderDate], [s].[OrderStatus], [s].[PaymentDate], [s].[PaymentMethod], [s].[PaymentStatus], [s].[PaymentType], [s].[TotalCost], [s].[TotalQuantity], [s].[UpdatedBy], [s].[UpdatedDate], [s].[UserId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId], [s0].[OrderDate], [s0].[OrderId], [s0].[OrderItemStatus], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[TotalPrice], [s0].[ProductId0], [s0].[AvailableQuantity], [s0].[CategoryId], [s0].[CreatedAt], [s0].[CreatedBy], [s0].[Description], [s0].[IsDeleted], [s0].[LastRestockAt], [s0].[MinimumRequiredQuantity], [s0].[Name], [s0].[Price], [s0].[ProductStatus], [s0].[UpdatedAt], [s0].[UpdatedBy], [s].[Name], [s].[Name0], [s].[Name1], [s].[Name2]
FROM (
    SELECT TOP(1) [o].[OrderId], [o].[NumberOfItems], [o].[OrderDate], [o].[OrderStatus], [o].[PaymentDate], [o].[PaymentMethod], [o].[PaymentStatus], [o].[PaymentType], [o].[TotalCost], [o].[TotalQuantity], [o].[UpdatedBy], [o].[UpdatedDate], [o].[UserId], [o0].[StatusId], [o0].[Name], [p].[PaymentTypeId], [p].[Name] AS [Name0], [p0].[PaymentMethodId], [p0].[Name] AS [Name1], [p1].[PaymentStatusId], [p1].[Name] AS [Name2]
    FROM [Orders] AS [o]
    INNER JOIN [OrderStatus] AS [o0] ON [o].[OrderStatus] = [o0].[StatusId]
    INNER JOIN [PaymentType] AS [p] ON [o].[PaymentType] = [p].[PaymentTypeId]
    INNER JOIN [PaymentMethod] AS [p0] ON [o].[PaymentMethod] = [p0].[PaymentMethodId]
    INNER JOIN [PaymentStatus] AS [p1] ON [o].[PaymentStatus] = [p1].[PaymentStatusId]
    WHERE [o].[OrderId] = @__orderId_0 AND [o].[UserId] = @__userId_1
) AS [s]
LEFT JOIN (
    SELECT [o1].[OrderItemId], [o1].[OrderDate], [o1].[OrderId], [o1].[OrderItemStatus], [o1].[ProductId], [o1].[ProductPrice], [o1].[Quantity], [o1].[TotalPrice], [p2].[ProductId] AS [ProductId0], [p2].[AvailableQuantity], [p2].[CategoryId], [p2].[CreatedAt], [p2].[CreatedBy], [p2].[Description], [p2].[IsDeleted], [p2].[LastRestockAt], [p2].[MinimumRequiredQuantity], [p2].[Name], [p2].[Price], [p2].[ProductStatus], [p2].[UpdatedAt], [p2].[UpdatedBy]
    FROM [OrderItems] AS [o1]
    INNER JOIN [Products] AS [p2] ON [o1].[ProductId] = [p2].[ProductId]
) AS [s0] ON [s].[OrderId] = [s0].[OrderId]
ORDER BY [s].[OrderId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId]
2025-05-09 14:56:12.152 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Orders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:12.156 +05:30 [DBG] The navigation 'Orders.OrderStatusNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:12.157 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderStatus' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:12.163 +05:30 [DBG] The navigation 'Orders.PaymentTypeNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:12.166 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'PaymentType' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:12.171 +05:30 [DBG] The navigation 'Orders.PaymentMethodNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:12.173 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'PaymentMethod' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:12.178 +05:30 [DBG] The navigation 'Orders.PaymentStatusNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:12.179 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'PaymentStatus' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:12.190 +05:30 [DBG] The navigation 'OrderItems.OrderItemStatusNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:12.192 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:12.193 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:12.194 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:12.198 +05:30 [DBG] The navigation 'OrderItems.OrderItemStatusNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:12.199 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:12.201 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:12.203 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:56:12.204 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 53ms reading results.
2025-05-09 14:56:12.207 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:56:12.208 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:56:12.214 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 14:56:12.216 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 14:56:12.217 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 14:56:12.218 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 14:56:12.218 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 14:56:12.219 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.CustomerOrderDetailsResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-09 14:56:12.229 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem) in 360.5217ms
2025-05-09 14:56:12.236 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)'
2025-05-09 14:56:12.237 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 14:56:12.238 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:56:12.239 +05:30 [DBG] Disposed connection to database '' on server '' (0ms).
2025-05-09 14:56:12.240 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Order/customer-order/2 - 200 null application/json; charset=utf-8 414.4852ms
2025-05-09 14:56:32.393 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Order/customer-orders-between - application/json 72
2025-05-09 14:56:32.408 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/customer-orders-between'
2025-05-09 14:56:32.411 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrdersBetweenDates (InventoryManagementSystem)' with route pattern 'api/Order/customer-orders-between' is valid for the request path '/api/Order/customer-orders-between'
2025-05-09 14:56:32.416 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrdersBetweenDates (InventoryManagementSystem)'
2025-05-09 14:56:32.421 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:56:32.422 +05:30 [DBG] Successfully validated the token.
2025-05-09 14:56:32.423 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 14:56:32.425 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrdersBetweenDates (InventoryManagementSystem)'
2025-05-09 14:56:32.430 +05:30 [INF] Route matched with {action = "GetCustomerOrdersBetweenDates", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerOrdersBetweenDates(InventoryManagementSystem.Models.Request.CustomerOrderFilterRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 14:56:32.434 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 14:56:32.436 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 14:56:32.437 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 14:56:32.440 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 14:56:32.441 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 14:56:32.443 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 14:56:32.445 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 14:56:32.446 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderFilterRequest' ...
2025-05-09 14:56:32.448 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderFilterRequest' using the name '' in request data ...
2025-05-09 14:56:32.450 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 14:56:32.453 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000002F": started reading request body.
2025-05-09 14:56:32.455 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000002F": done reading request body.
2025-05-09 14:56:32.458 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.CustomerOrderFilterRequest'
2025-05-09 14:56:32.459 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderFilterRequest'.
2025-05-09 14:56:32.461 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderFilterRequest'.
2025-05-09 14:56:32.462 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderFilterRequest' ...
2025-05-09 14:56:32.465 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderFilterRequest'.
2025-05-09 14:56:32.469 +05:30 [INF] Fetching orders for UserId 2 between 0/0 and 0/0
2025-05-09 14:56:32.471 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 14:56:32.473 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 14:56:32.474 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 14:56:32.475 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 14:56:32.476 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 14:56:32.477 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.CustomerOrderSummaryResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 14:56:32.481 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.GetCustomerOrdersBetweenDates (InventoryManagementSystem) in 38.1065ms
2025-05-09 14:56:32.489 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrdersBetweenDates (InventoryManagementSystem)'
2025-05-09 14:56:32.490 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Order/customer-orders-between - 400 null application/json; charset=utf-8 96.9218ms
2025-05-09 14:56:55.835 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Order/customer-orders-between - application/json 78
2025-05-09 14:56:55.842 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/customer-orders-between'
2025-05-09 14:56:55.848 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrdersBetweenDates (InventoryManagementSystem)' with route pattern 'api/Order/customer-orders-between' is valid for the request path '/api/Order/customer-orders-between'
2025-05-09 14:56:55.856 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrdersBetweenDates (InventoryManagementSystem)'
2025-05-09 14:56:55.858 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 14:56:55.859 +05:30 [DBG] Successfully validated the token.
2025-05-09 14:56:55.860 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 14:56:55.861 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrdersBetweenDates (InventoryManagementSystem)'
2025-05-09 14:56:55.862 +05:30 [INF] Route matched with {action = "GetCustomerOrdersBetweenDates", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerOrdersBetweenDates(InventoryManagementSystem.Models.Request.CustomerOrderFilterRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 14:56:55.864 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 14:56:55.866 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 14:56:55.869 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 14:56:55.872 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 14:56:55.874 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 14:56:55.875 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 14:56:55.877 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 14:56:55.878 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderFilterRequest' ...
2025-05-09 14:56:55.879 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderFilterRequest' using the name '' in request data ...
2025-05-09 14:56:55.881 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 14:56:55.882 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000031": started reading request body.
2025-05-09 14:56:55.886 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000031": done reading request body.
2025-05-09 14:56:55.887 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.CustomerOrderFilterRequest'
2025-05-09 14:56:55.889 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderFilterRequest'.
2025-05-09 14:56:55.890 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderFilterRequest'.
2025-05-09 14:56:55.891 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderFilterRequest' ...
2025-05-09 14:56:55.893 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderFilterRequest'.
2025-05-09 14:56:55.894 +05:30 [INF] Fetching orders for UserId 2 between 2/2025 and 6/2025
2025-05-09 14:56:55.897 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 14:56:55.903 +05:30 [DBG] Compiling query expression: 
'DbSet<Orders>()
    .Include(o => o.OrderStatusNavigation)
    .Where(o => o.UserId == __userId_0 && o.OrderDate >= __startDate_1 && o.OrderDate <= __endDate_2)'
2025-05-09 14:56:55.905 +05:30 [DBG] Including navigation: 'Orders.OrderStatusNavigation'.
2025-05-09 14:56:55.911 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Orders>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Orders.OrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Orders.NumberOfItems (int) Required, 1], [Property: Orders.OrderDate (DateTime) Required ValueGenerated.OnAdd, 2], [Property: Orders.OrderStatus (int) Required FK Index, 3], [Property: Orders.PaymentDate (DateTime) Required, 4], [Property: Orders.PaymentMethod (int) Required FK Index, 5], [Property: Orders.PaymentStatus (int) Required FK Index, 6], [Property: Orders.PaymentType (int) Required FK Index, 7], [Property: Orders.TotalCost (decimal) Required, 8], [Property: Orders.TotalQuantity (int) Required, 9], [Property: Orders.UpdatedBy (long) Required FK Index, 10], [Property: Orders.UpdatedDate (DateTime) Required ValueGenerated.OnAdd, 11], [Property: Orders.UserId (long) Required FK Index, 12] }
            1 -> Dictionary<IProperty, int> { [Property: OrderStatus.StatusId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: OrderStatus.Name (string) Required MaxLength(100), 14] }
        SELECT o.OrderId, o.NumberOfItems, o.OrderDate, o.OrderStatus, o.PaymentDate, o.PaymentMethod, o.PaymentStatus, o.PaymentType, o.TotalCost, o.TotalQuantity, o.UpdatedBy, o.UpdatedDate, o.UserId, o0.StatusId, o0.Name
        FROM Orders AS o
        INNER JOIN OrderStatus AS o0 ON o.OrderStatus == o0.StatusId
        WHERE ((o.UserId == @__userId_0) && (o.OrderDate >= @__startDate_1)) && (o.OrderDate <= @__endDate_2)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: Orders.OrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Orders.NumberOfItems (int) Required, 1], [Property: Orders.OrderDate (DateTime) Required ValueGenerated.OnAdd, 2], [Property: Orders.OrderStatus (int) Required FK Index, 3], [Property: Orders.PaymentDate (DateTime) Required, 4], [Property: Orders.PaymentMethod (int) Required FK Index, 5], [Property: Orders.PaymentStatus (int) Required FK Index, 6], [Property: Orders.PaymentType (int) Required FK Index, 7], [Property: Orders.TotalCost (decimal) Required, 8], [Property: Orders.TotalQuantity (int) Required, 9], [Property: Orders.UpdatedBy (long) Required FK Index, 10], [Property: Orders.UpdatedDate (DateTime) Required ValueGenerated.OnAdd, 11], [Property: Orders.UserId (long) Required FK Index, 12] }
            1 -> Dictionary<IProperty, int> { [Property: OrderStatus.StatusId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: OrderStatus.Name (string) Required MaxLength(100), 14] }
        SELECT o.OrderId, o.NumberOfItems, o.OrderDate, o.OrderStatus, o.PaymentDate, o.PaymentMethod, o.PaymentStatus, o.PaymentType, o.TotalCost, o.TotalQuantity, o.UpdatedBy, o.UpdatedDate, o.UserId, o0.StatusId, o0.Name
        FROM Orders AS o
        INNER JOIN OrderStatus AS o0 ON o.OrderStatus == o0.StatusId
        WHERE ((o.UserId == @__userId_0) && (o.OrderDate >= @__startDate_1)) && (o.OrderDate <= @__endDate_2), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Orders entity;
        OrderStatus entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Orders instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Orders);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Orders.OrderId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Orders)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")]: 
                        {
                            return 
                            {
                                Orders instance;
                                instance = new Orders();
                                instance.<OrderId>k__BackingField = dataReader.GetInt64(0);
                                instance.<NumberOfItems>k__BackingField = dataReader.GetInt32(1);
                                instance.<OrderDate>k__BackingField = dataReader.GetDateTime(2);
                                instance.<OrderStatus>k__BackingField = dataReader.GetInt32(3);
                                instance.<PaymentDate>k__BackingField = dataReader.GetDateTime(4);
                                instance.<PaymentMethod>k__BackingField = dataReader.GetInt32(5);
                                instance.<PaymentStatus>k__BackingField = dataReader.GetInt32(6);
                                instance.<PaymentType>k__BackingField = dataReader.GetInt32(7);
                                instance.<TotalCost>k__BackingField = dataReader.GetDecimal(8);
                                instance.<TotalQuantity>k__BackingField = dataReader.GetInt32(9);
                                instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(10);
                                instance.<UpdatedDate>k__BackingField = dataReader.GetDateTime(11);
                                instance.<UserId>k__BackingField = dataReader.GetInt64(12);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Orders)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            OrderStatus instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(OrderStatus);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: OrderStatus.StatusId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(13) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (OrderStatus)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: OrderStatus | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: OrderStatus | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus")]: 
                        {
                            return 
                            {
                                OrderStatus instance;
                                instance = new OrderStatus();
                                instance.<StatusId>k__BackingField = dataReader.GetInt32(13);
                                instance.<Name>k__BackingField = dataReader.GetString(14);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: OrderStatus | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(OrderStatus)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<Orders, Orders, OrderStatus>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: Orders.OrderStatusNavigation (OrderStatus) ToPrincipal OrderStatus | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("OrderStatusNavigation")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{7}, namelessParameter{8}) => 
            {
                return namelessParameter{7}.<OrderStatusNavigation>k__BackingField = namelessParameter{8};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 14:56:55.954 +05:30 [DBG] Creating DbConnection.
2025-05-09 14:56:55.955 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 14:56:55.955 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:56:55.956 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:56:55.958 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 14:56:55.959 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 14:56:55.960 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 14:56:55.962 +05:30 [DBG] Executing DbCommand [Parameters=[@__userId_0='?' (DbType = Int64), @__startDate_1='?' (DbType = DateTime2), @__endDate_2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderId], [o].[NumberOfItems], [o].[OrderDate], [o].[OrderStatus], [o].[PaymentDate], [o].[PaymentMethod], [o].[PaymentStatus], [o].[PaymentType], [o].[TotalCost], [o].[TotalQuantity], [o].[UpdatedBy], [o].[UpdatedDate], [o].[UserId], [o0].[StatusId], [o0].[Name]
FROM [Orders] AS [o]
INNER JOIN [OrderStatus] AS [o0] ON [o].[OrderStatus] = [o0].[StatusId]
WHERE [o].[UserId] = @__userId_0 AND [o].[OrderDate] >= @__startDate_1 AND [o].[OrderDate] <= @__endDate_2
2025-05-09 14:56:55.987 +05:30 [INF] Executed DbCommand (25ms) [Parameters=[@__userId_0='?' (DbType = Int64), @__startDate_1='?' (DbType = DateTime2), @__endDate_2='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderId], [o].[NumberOfItems], [o].[OrderDate], [o].[OrderStatus], [o].[PaymentDate], [o].[PaymentMethod], [o].[PaymentStatus], [o].[PaymentType], [o].[TotalCost], [o].[TotalQuantity], [o].[UpdatedBy], [o].[UpdatedDate], [o].[UserId], [o0].[StatusId], [o0].[Name]
FROM [Orders] AS [o]
INNER JOIN [OrderStatus] AS [o0] ON [o].[OrderStatus] = [o0].[StatusId]
WHERE [o].[UserId] = @__userId_0 AND [o].[OrderDate] >= @__startDate_1 AND [o].[OrderDate] <= @__endDate_2
2025-05-09 14:56:55.991 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Orders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:55.994 +05:30 [DBG] The navigation 'Orders.OrderStatusNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:55.996 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderStatus' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:55.997 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Orders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 14:56:55.999 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:56:56.001 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 10ms reading results.
2025-05-09 14:56:56.003 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:56:56.004 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 14:56:56.007 +05:30 [INF] Retrieved 2 orders for user 2
2025-05-09 14:56:56.009 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 14:56:56.012 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 14:56:56.012 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 14:56:56.013 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 14:56:56.014 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 14:56:56.016 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.CustomerOrderSummaryResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 14:56:56.020 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.GetCustomerOrdersBetweenDates (InventoryManagementSystem) in 144.4297ms
2025-05-09 14:56:56.021 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrdersBetweenDates (InventoryManagementSystem)'
2025-05-09 14:56:56.023 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 14:56:56.025 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 14:56:56.026 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 14:56:56.027 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Order/customer-orders-between - 200 null application/json; charset=utf-8 193.2126ms
2025-05-09 15:00:45.086 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Order/ReturnOrderItems - application/json 46
2025-05-09 15:00:45.105 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/ReturnOrderItems'
2025-05-09 15:00:45.108 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)' with route pattern 'api/Order/ReturnOrderItems' is valid for the request path '/api/Order/ReturnOrderItems'
2025-05-09 15:00:45.110 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 15:00:45.111 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:00:45.112 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:00:45.113 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:00:45.114 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 15:00:45.123 +05:30 [INF] Route matched with {action = "ReturnOrderItems", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReturnOrderItems(InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 15:00:45.126 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:00:45.128 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:00:45.129 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:00:45.132 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:00:45.134 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:00:45.138 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 15:00:45.140 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 15:00:45.141 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-09 15:00:45.143 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' using the name '' in request data ...
2025-05-09 15:00:45.145 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:00:45.148 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000033": started reading request body.
2025-05-09 15:00:45.150 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000033": done reading request body.
2025-05-09 15:00:45.155 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'
2025-05-09 15:00:45.157 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 15:00:45.158 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 15:00:45.160 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-09 15:00:45.171 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 15:00:45.173 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 15:00:45.174 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 15:00:45.176 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:00:45.179 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:00:45.180 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 15:00:45.184 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 15:00:45.187 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 15:00:45.189 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem) in 50.9799ms
2025-05-09 15:00:45.196 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 15:00:45.198 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Order/ReturnOrderItems - 400 null application/problem+json; charset=utf-8 111.5977ms
2025-05-09 15:00:53.350 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Order/ReturnOrderItems - application/json 46
2025-05-09 15:00:53.358 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/ReturnOrderItems'
2025-05-09 15:00:53.360 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)' with route pattern 'api/Order/ReturnOrderItems' is valid for the request path '/api/Order/ReturnOrderItems'
2025-05-09 15:00:53.372 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 15:00:53.375 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:00:53.377 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:00:53.378 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:00:53.379 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 15:00:53.380 +05:30 [INF] Route matched with {action = "ReturnOrderItems", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReturnOrderItems(InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 15:00:53.383 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:00:53.389 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:00:53.390 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:00:53.393 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:00:53.394 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:00:53.396 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 15:00:53.397 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 15:00:53.400 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-09 15:00:53.403 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' using the name '' in request data ...
2025-05-09 15:00:53.405 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:00:53.406 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000035": started reading request body.
2025-05-09 15:00:53.408 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000035": done reading request body.
2025-05-09 15:00:53.410 +05:30 [DBG] JSON input formatter threw an exception: ',' is an invalid start of a value. Path: $.orderId | LineNumber: 1 | BytePositionInLine: 13.
2025-05-09 15:00:53.411 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 15:00:53.412 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 15:00:53.415 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-09 15:00:53.417 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 15:00:53.420 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 15:00:53.421 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 15:00:53.422 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:00:53.425 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:00:53.426 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 15:00:53.429 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 15:00:53.431 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 15:00:53.433 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem) in 37.2829ms
2025-05-09 15:00:53.436 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 15:00:53.438 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Order/ReturnOrderItems - 400 null application/problem+json; charset=utf-8 87.8062ms
2025-05-09 15:01:02.511 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Order/ReturnOrderItems - application/json 47
2025-05-09 15:01:02.516 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/ReturnOrderItems'
2025-05-09 15:01:02.521 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)' with route pattern 'api/Order/ReturnOrderItems' is valid for the request path '/api/Order/ReturnOrderItems'
2025-05-09 15:01:02.530 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 15:01:02.535 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:01:02.539 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:01:02.540 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:01:02.542 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 15:01:02.544 +05:30 [INF] Route matched with {action = "ReturnOrderItems", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReturnOrderItems(InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 15:01:02.546 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:01:02.548 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:01:02.549 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:01:02.554 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:01:02.555 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:01:02.557 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 15:01:02.559 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 15:01:02.561 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-09 15:01:02.562 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' using the name '' in request data ...
2025-05-09 15:01:02.564 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:01:02.566 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000037": started reading request body.
2025-05-09 15:01:02.568 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000037": done reading request body.
2025-05-09 15:01:02.572 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'
2025-05-09 15:01:02.573 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 15:01:02.575 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 15:01:02.576 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-09 15:01:02.580 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 15:01:02.584 +05:30 [INF] Processing return for OrderId 2
2025-05-09 15:01:02.589 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:01:02.594 +05:30 [DBG] Compiling query expression: 
'DbSet<OrderItems>()
    .Where(x => x.OrderId == __orderId_0 && __productIds_1.Contains(x.ProductId))'
2025-05-09 15:01:02.641 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<OrderItems>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE (o.OrderId == @__orderId_0) && o.ProductId IN (
            SELECT p.value
            FROM OPENJSON(@__productIds_1) WITH (value bigint '') AS p)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE (o.OrderId == @__orderId_0) && o.ProductId IN (
            SELECT p.value
            FROM OPENJSON(@__productIds_1) WITH (value bigint '') AS p), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        OrderItems entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            OrderItems instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(OrderItems);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: OrderItems.OrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (OrderItems)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]: 
                        {
                            return 
                            {
                                OrderItems instance;
                                instance = new OrderItems();
                                instance.<OrderItemId>k__BackingField = dataReader.GetInt64(0);
                                instance.<OrderDate>k__BackingField = dataReader.GetDateTime(1);
                                instance.<OrderId>k__BackingField = dataReader.GetInt64(2);
                                instance.<OrderItemStatus>k__BackingField = dataReader.GetInt32(3);
                                instance.<ProductId>k__BackingField = dataReader.GetInt64(4);
                                instance.<ProductPrice>k__BackingField = dataReader.GetDecimal(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(OrderItems)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 15:01:02.677 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:01:02.678 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 15:01:02.679 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.702 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.705 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:01:02.706 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:01:02.711 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-05-09 15:01:02.713 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-09 15:01:02.723 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-09 15:01:02.727 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.729 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.731 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.732 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 5ms reading results.
2025-05-09 15:01:02.733 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.735 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:01:02.750 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .FirstOrDefault(e => EF.Property<long>(e, "ProductId") == __p_0)'
2025-05-09 15:01:02.757 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Products>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Products>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Products entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Products instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Products);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Products)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                            {
                                return 
                                {
                                    Products instance;
                                    instance = new Products();
                                    instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                    instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Name>k__BackingField = dataReader.GetString(9);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                    instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Products)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 15:01:02.780 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.781 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.782 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:01:02.783 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:01:02.785 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:01:02.787 +05:30 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__p_0
2025-05-09 15:01:02.792 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__p_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__p_0
2025-05-09 15:01:02.795 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.796 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.798 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.800 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.801 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 6ms reading results.
2025-05-09 15:01:02.803 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.805 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:01:02.807 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.809 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 15:01:02.810 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 15:01:02.812 +05:30 [DBG] The unchanged property 'OrderItems.OrderDate' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:01:02.813 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.815 +05:30 [DBG] The unchanged property 'OrderItems.OrderItemStatus' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:01:02.816 +05:30 [DBG] The foreign key property 'OrderItems.OrderItemStatus' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:01:02.820 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 15:01:02.821 +05:30 [DBG] Executing 2 update commands as a batch.
2025-05-09 15:01:02.822 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.824 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.825 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-09 15:01:02.826 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-09 15:01:02.827 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:01:02.828 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:01:02.829 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:01:02.831 +05:30 [DBG] Executing DbCommand [Parameters=[@p2='?' (DbType = Int64), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32), @p16='?' (DbType = Int64), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64), @p7='?' (Size = 225), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Int32), @p11='?' (Size = 100), @p12='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p13='?' (DbType = Int32), @p14='?' (DbType = DateTime2), @p15='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [OrderItems] SET [OrderDate] = @p0, [OrderItemStatus] = @p1
OUTPUT 1
WHERE [OrderItemId] = @p2;
UPDATE [Products] SET [AvailableQuantity] = @p3, [CategoryId] = @p4, [CreatedAt] = @p5, [CreatedBy] = @p6, [Description] = @p7, [IsDeleted] = @p8, [LastRestockAt] = @p9, [MinimumRequiredQuantity] = @p10, [Name] = @p11, [Price] = @p12, [ProductStatus] = @p13, [UpdatedAt] = @p14, [UpdatedBy] = @p15
OUTPUT 1
WHERE [ProductId] = @p16;
2025-05-09 15:01:02.844 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@p2='?' (DbType = Int64), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32), @p16='?' (DbType = Int64), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64), @p7='?' (Size = 225), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Int32), @p11='?' (Size = 100), @p12='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p13='?' (DbType = Int32), @p14='?' (DbType = DateTime2), @p15='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [OrderItems] SET [OrderDate] = @p0, [OrderItemStatus] = @p1
OUTPUT 1
WHERE [OrderItemId] = @p2;
UPDATE [Products] SET [AvailableQuantity] = @p3, [CategoryId] = @p4, [CreatedAt] = @p5, [CreatedBy] = @p6, [Description] = @p7, [IsDeleted] = @p8, [LastRestockAt] = @p9, [MinimumRequiredQuantity] = @p10, [Name] = @p11, [Price] = @p12, [ProductStatus] = @p13, [UpdatedAt] = @p14, [UpdatedBy] = @p15
OUTPUT 1
WHERE [ProductId] = @p16;
2025-05-09 15:01:02.847 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.848 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 15:01:02.850 +05:30 [DBG] Committing transaction.
2025-05-09 15:01:02.852 +05:30 [DBG] Committed transaction.
2025-05-09 15:01:02.852 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.853 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 15:01:02.854 +05:30 [DBG] Disposing transaction.
2025-05-09 15:01:02.855 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.856 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.858 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 2 entities written to the database.
2025-05-09 15:01:02.858 +05:30 [INF] Starting stock movement for ProductId: 1, UserId: 2, Status: "Returned"
2025-05-09 15:01:02.860 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.861 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.861 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:01:02.862 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:01:02.863 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:01:02.864 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 15:01:02.868 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 15:01:02.871 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.872 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 0ms reading results.
2025-05-09 15:01:02.873 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.874 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 15:01:02.875 +05:30 [INF] 'Return' movement for ProductId: 1
2025-05-09 15:01:02.876 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.877 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.878 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.879 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 15:01:02.881 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 15:01:02.882 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 15:01:02.883 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.884 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.885 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:01:02.886 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:01:02.887 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:01:02.888 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 15:01:02.894 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 15:01:02.897 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:01:02.898 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.899 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 15:01:02.900 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.901 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:01:02.903 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.904 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 15:01:02.905 +05:30 [INF] Stock movement successfully for ProductId: 1
2025-05-09 15:01:02.906 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.907 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 15:01:02.908 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 15:01:02.909 +05:30 [DBG] The unchanged property 'OrderItems.OrderDate' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:01:02.910 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.912 +05:30 [DBG] The unchanged property 'OrderItems.OrderItemStatus' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:01:02.913 +05:30 [DBG] The foreign key property 'OrderItems.OrderItemStatus' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:01:02.914 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 15:01:02.915 +05:30 [DBG] Executing 2 update commands as a batch.
2025-05-09 15:01:02.916 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.917 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.918 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-09 15:01:02.919 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-09 15:01:02.920 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:01:02.921 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:01:02.922 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:01:02.923 +05:30 [DBG] Executing DbCommand [Parameters=[@p2='?' (DbType = Int64), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32), @p16='?' (DbType = Int64), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64), @p7='?' (Size = 225), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Int32), @p11='?' (Size = 100), @p12='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p13='?' (DbType = Int32), @p14='?' (DbType = DateTime2), @p15='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [OrderItems] SET [OrderDate] = @p0, [OrderItemStatus] = @p1
OUTPUT 1
WHERE [OrderItemId] = @p2;
UPDATE [Products] SET [AvailableQuantity] = @p3, [CategoryId] = @p4, [CreatedAt] = @p5, [CreatedBy] = @p6, [Description] = @p7, [IsDeleted] = @p8, [LastRestockAt] = @p9, [MinimumRequiredQuantity] = @p10, [Name] = @p11, [Price] = @p12, [ProductStatus] = @p13, [UpdatedAt] = @p14, [UpdatedBy] = @p15
OUTPUT 1
WHERE [ProductId] = @p16;
2025-05-09 15:01:02.926 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p2='?' (DbType = Int64), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32), @p16='?' (DbType = Int64), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64), @p7='?' (Size = 225), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Int32), @p11='?' (Size = 100), @p12='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p13='?' (DbType = Int32), @p14='?' (DbType = DateTime2), @p15='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [OrderItems] SET [OrderDate] = @p0, [OrderItemStatus] = @p1
OUTPUT 1
WHERE [OrderItemId] = @p2;
UPDATE [Products] SET [AvailableQuantity] = @p3, [CategoryId] = @p4, [CreatedAt] = @p5, [CreatedBy] = @p6, [Description] = @p7, [IsDeleted] = @p8, [LastRestockAt] = @p9, [MinimumRequiredQuantity] = @p10, [Name] = @p11, [Price] = @p12, [ProductStatus] = @p13, [UpdatedAt] = @p14, [UpdatedBy] = @p15
OUTPUT 1
WHERE [ProductId] = @p16;
2025-05-09 15:01:02.929 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.930 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 0ms reading results.
2025-05-09 15:01:02.931 +05:30 [DBG] Committing transaction.
2025-05-09 15:01:02.932 +05:30 [DBG] Committed transaction.
2025-05-09 15:01:02.933 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.934 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:01:02.936 +05:30 [DBG] Disposing transaction.
2025-05-09 15:01:02.936 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.938 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.939 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 2 entities written to the database.
2025-05-09 15:01:02.940 +05:30 [INF] Starting stock movement for ProductId: 1, UserId: 2, Status: "Returned"
2025-05-09 15:01:02.941 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.943 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.944 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:01:02.945 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:01:02.945 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:01:02.946 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 15:01:02.949 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 15:01:02.952 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.953 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 15:01:02.954 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.955 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 15:01:02.956 +05:30 [INF] 'Return' movement for ProductId: 1
2025-05-09 15:01:02.957 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.958 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.959 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.960 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 15:01:02.961 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 15:01:02.962 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 15:01:02.963 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.964 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.965 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:01:02.966 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:01:02.967 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:01:02.968 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 15:01:02.972 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 15:01:02.975 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:01:02.977 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.978 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 15:01:02.980 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:02.981 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 15:01:02.982 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:02.983 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 15:01:02.985 +05:30 [INF] Stock movement successfully for ProductId: 1
2025-05-09 15:01:02.987 +05:30 [DBG] Compiling query expression: 
'DbSet<Orders>()
    .FirstOrDefault(e => EF.Property<long>(e, "OrderId") == __p_0)'
2025-05-09 15:01:02.991 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Orders>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Orders>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Orders.OrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Orders.NumberOfItems (int) Required, 1], [Property: Orders.OrderDate (DateTime) Required ValueGenerated.OnAdd, 2], [Property: Orders.OrderStatus (int) Required FK Index, 3], [Property: Orders.PaymentDate (DateTime) Required, 4], [Property: Orders.PaymentMethod (int) Required FK Index, 5], [Property: Orders.PaymentStatus (int) Required FK Index, 6], [Property: Orders.PaymentType (int) Required FK Index, 7], [Property: Orders.TotalCost (decimal) Required, 8], [Property: Orders.TotalQuantity (int) Required, 9], [Property: Orders.UpdatedBy (long) Required FK Index, 10], [Property: Orders.UpdatedDate (DateTime) Required ValueGenerated.OnAdd, 11], [Property: Orders.UserId (long) Required FK Index, 12] }
            SELECT TOP(1) o.OrderId, o.NumberOfItems, o.OrderDate, o.OrderStatus, o.PaymentDate, o.PaymentMethod, o.PaymentStatus, o.PaymentType, o.TotalCost, o.TotalQuantity, o.UpdatedBy, o.UpdatedDate, o.UserId
            FROM Orders AS o
            WHERE o.OrderId == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Orders.OrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Orders.NumberOfItems (int) Required, 1], [Property: Orders.OrderDate (DateTime) Required ValueGenerated.OnAdd, 2], [Property: Orders.OrderStatus (int) Required FK Index, 3], [Property: Orders.PaymentDate (DateTime) Required, 4], [Property: Orders.PaymentMethod (int) Required FK Index, 5], [Property: Orders.PaymentStatus (int) Required FK Index, 6], [Property: Orders.PaymentType (int) Required FK Index, 7], [Property: Orders.TotalCost (decimal) Required, 8], [Property: Orders.TotalQuantity (int) Required, 9], [Property: Orders.UpdatedBy (long) Required FK Index, 10], [Property: Orders.UpdatedDate (DateTime) Required ValueGenerated.OnAdd, 11], [Property: Orders.UserId (long) Required FK Index, 12] }
            SELECT TOP(1) o.OrderId, o.NumberOfItems, o.OrderDate, o.OrderStatus, o.PaymentDate, o.PaymentMethod, o.PaymentStatus, o.PaymentType, o.TotalCost, o.TotalQuantity, o.UpdatedBy, o.UpdatedDate, o.UserId
            FROM Orders AS o
            WHERE o.OrderId == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Orders entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Orders instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Orders);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Orders.OrderId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Orders)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")]: 
                            {
                                return 
                                {
                                    Orders instance;
                                    instance = new Orders();
                                    instance.<OrderId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<NumberOfItems>k__BackingField = dataReader.GetInt32(1);
                                    instance.<OrderDate>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<OrderStatus>k__BackingField = dataReader.GetInt32(3);
                                    instance.<PaymentDate>k__BackingField = dataReader.GetDateTime(4);
                                    instance.<PaymentMethod>k__BackingField = dataReader.GetInt32(5);
                                    instance.<PaymentStatus>k__BackingField = dataReader.GetInt32(6);
                                    instance.<PaymentType>k__BackingField = dataReader.GetInt32(7);
                                    instance.<TotalCost>k__BackingField = dataReader.GetDecimal(8);
                                    instance.<TotalQuantity>k__BackingField = dataReader.GetInt32(9);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(10);
                                    instance.<UpdatedDate>k__BackingField = dataReader.GetDateTime(11);
                                    instance.<UserId>k__BackingField = dataReader.GetInt64(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Orders)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 15:01:03.005 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:03.006 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:03.007 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:01:03.008 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:01:03.009 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:01:03.010 +05:30 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[OrderId], [o].[NumberOfItems], [o].[OrderDate], [o].[OrderStatus], [o].[PaymentDate], [o].[PaymentMethod], [o].[PaymentStatus], [o].[PaymentType], [o].[TotalCost], [o].[TotalQuantity], [o].[UpdatedBy], [o].[UpdatedDate], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[OrderId] = @__p_0
2025-05-09 15:01:03.013 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[OrderId], [o].[NumberOfItems], [o].[OrderDate], [o].[OrderStatus], [o].[PaymentDate], [o].[PaymentMethod], [o].[PaymentStatus], [o].[PaymentType], [o].[TotalCost], [o].[TotalQuantity], [o].[UpdatedBy], [o].[UpdatedDate], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[OrderId] = @__p_0
2025-05-09 15:01:03.015 +05:30 [DBG] The navigation 'OrderItems.Order' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:03.017 +05:30 [DBG] The navigation 'OrderItems.Order' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:03.019 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Orders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:03.020 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:03.021 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 5ms reading results.
2025-05-09 15:01:03.022 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:03.023 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 15:01:03.025 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:03.027 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:03.028 +05:30 [DBG] An entity of type 'Orders' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:03.029 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 15:01:03.030 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 15:01:03.031 +05:30 [DBG] The foreign key property 'Orders.UpdatedBy' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:01:03.032 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 15:01:03.035 +05:30 [DBG] Executing 3 update commands as a batch.
2025-05-09 15:01:03.035 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:03.036 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:03.037 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-09 15:01:03.038 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-09 15:01:03.039 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:01:03.040 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:01:03.041 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:01:03.041 +05:30 [DBG] Executing DbCommand [Parameters=[@p7='?' (DbType = Int64), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int64), @p2='?' (DbType = Int32), @p3='?' (DbType = Int64), @p4='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p5='?' (DbType = Int32), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p15='?' (DbType = Int64), @p8='?' (DbType = DateTime2), @p9='?' (DbType = Int64), @p10='?' (DbType = Int32), @p11='?' (DbType = Int64), @p12='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p13='?' (DbType = Int32), @p14='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p28='?' (DbType = Int64), @p16='?' (DbType = Int32), @p17='?' (DbType = DateTime2), @p18='?' (DbType = Int32), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Int32), @p21='?' (DbType = Int32), @p22='?' (DbType = Int32), @p23='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p24='?' (DbType = Int32), @p25='?' (DbType = Int64), @p26='?' (DbType = DateTime2), @p27='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [OrderItems] SET [OrderDate] = @p0, [OrderId] = @p1, [OrderItemStatus] = @p2, [ProductId] = @p3, [ProductPrice] = @p4, [Quantity] = @p5, [TotalPrice] = @p6
OUTPUT 1
WHERE [OrderItemId] = @p7;
UPDATE [OrderItems] SET [OrderDate] = @p8, [OrderId] = @p9, [OrderItemStatus] = @p10, [ProductId] = @p11, [ProductPrice] = @p12, [Quantity] = @p13, [TotalPrice] = @p14
OUTPUT 1
WHERE [OrderItemId] = @p15;
UPDATE [Orders] SET [NumberOfItems] = @p16, [OrderDate] = @p17, [OrderStatus] = @p18, [PaymentDate] = @p19, [PaymentMethod] = @p20, [PaymentStatus] = @p21, [PaymentType] = @p22, [TotalCost] = @p23, [TotalQuantity] = @p24, [UpdatedBy] = @p25, [UpdatedDate] = @p26, [UserId] = @p27
OUTPUT 1
WHERE [OrderId] = @p28;
2025-05-09 15:01:03.055 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@p7='?' (DbType = Int64), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int64), @p2='?' (DbType = Int32), @p3='?' (DbType = Int64), @p4='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p5='?' (DbType = Int32), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p15='?' (DbType = Int64), @p8='?' (DbType = DateTime2), @p9='?' (DbType = Int64), @p10='?' (DbType = Int32), @p11='?' (DbType = Int64), @p12='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p13='?' (DbType = Int32), @p14='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p28='?' (DbType = Int64), @p16='?' (DbType = Int32), @p17='?' (DbType = DateTime2), @p18='?' (DbType = Int32), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Int32), @p21='?' (DbType = Int32), @p22='?' (DbType = Int32), @p23='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p24='?' (DbType = Int32), @p25='?' (DbType = Int64), @p26='?' (DbType = DateTime2), @p27='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [OrderItems] SET [OrderDate] = @p0, [OrderId] = @p1, [OrderItemStatus] = @p2, [ProductId] = @p3, [ProductPrice] = @p4, [Quantity] = @p5, [TotalPrice] = @p6
OUTPUT 1
WHERE [OrderItemId] = @p7;
UPDATE [OrderItems] SET [OrderDate] = @p8, [OrderId] = @p9, [OrderItemStatus] = @p10, [ProductId] = @p11, [ProductPrice] = @p12, [Quantity] = @p13, [TotalPrice] = @p14
OUTPUT 1
WHERE [OrderItemId] = @p15;
UPDATE [Orders] SET [NumberOfItems] = @p16, [OrderDate] = @p17, [OrderStatus] = @p18, [PaymentDate] = @p19, [PaymentMethod] = @p20, [PaymentStatus] = @p21, [PaymentType] = @p22, [TotalCost] = @p23, [TotalQuantity] = @p24, [UpdatedBy] = @p25, [UpdatedDate] = @p26, [UserId] = @p27
OUTPUT 1
WHERE [OrderId] = @p28;
2025-05-09 15:01:03.059 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:03.060 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 0ms reading results.
2025-05-09 15:01:03.061 +05:30 [DBG] Committing transaction.
2025-05-09 15:01:03.062 +05:30 [DBG] Committed transaction.
2025-05-09 15:01:03.063 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:03.064 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 15:01:03.065 +05:30 [DBG] Disposing transaction.
2025-05-09 15:01:03.066 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:03.068 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:03.070 +05:30 [DBG] An entity of type 'Orders' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:03.071 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 3 entities written to the database.
2025-05-09 15:01:03.072 +05:30 [INF] Return processed successfully for OrderId 2
2025-05-09 15:01:03.073 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:01:03.075 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:01:03.076 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:01:03.076 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:01:03.077 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:01:03.078 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:01:03.079 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem) in 521.9133ms
2025-05-09 15:01:03.081 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 15:01:03.082 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:01:03.083 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:03.085 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 15:01:03.086 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Order/ReturnOrderItems - 200 null application/json; charset=utf-8 575.4338ms
2025-05-09 15:01:23.107 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Order/customer-order/2 - null null
2025-05-09 15:01:23.112 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/customer-order/2'
2025-05-09 15:01:23.113 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)' with route pattern 'api/Order/customer-order/{orderId}' is valid for the request path '/api/Order/customer-order/2'
2025-05-09 15:01:23.115 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)'
2025-05-09 15:01:23.116 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:01:23.117 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:01:23.117 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:01:23.119 +05:30 [DBG] Authorization was successful.
2025-05-09 15:01:23.120 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)'
2025-05-09 15:01:23.122 +05:30 [INF] Route matched with {action = "GetCustomerOrderById", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerOrderById(Int64) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 15:01:23.124 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:01:23.126 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:01:23.128 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:01:23.130 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:01:23.132 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:01:23.134 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 15:01:23.136 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 15:01:23.138 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' ...
2025-05-09 15:01:23.139 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' using the name 'orderId' in request data ...
2025-05-09 15:01:23.141 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-09 15:01:23.142 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-09 15:01:23.144 +05:30 [DBG] Attempting to validate the bound parameter 'orderId' of type 'System.Int64' ...
2025-05-09 15:01:23.146 +05:30 [DBG] Done attempting to validate the bound parameter 'orderId' of type 'System.Int64'.
2025-05-09 15:01:23.147 +05:30 [INF] Fetching order details for OrderId 2, UserId 2
2025-05-09 15:01:23.149 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:01:23.152 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:01:23.153 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 15:01:23.155 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:23.156 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:23.157 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:01:23.159 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:01:23.161 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 15:01:23.162 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64), @__userId_1='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[OrderId], [s].[NumberOfItems], [s].[OrderDate], [s].[OrderStatus], [s].[PaymentDate], [s].[PaymentMethod], [s].[PaymentStatus], [s].[PaymentType], [s].[TotalCost], [s].[TotalQuantity], [s].[UpdatedBy], [s].[UpdatedDate], [s].[UserId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId], [s0].[OrderDate], [s0].[OrderId], [s0].[OrderItemStatus], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[TotalPrice], [s0].[ProductId0], [s0].[AvailableQuantity], [s0].[CategoryId], [s0].[CreatedAt], [s0].[CreatedBy], [s0].[Description], [s0].[IsDeleted], [s0].[LastRestockAt], [s0].[MinimumRequiredQuantity], [s0].[Name], [s0].[Price], [s0].[ProductStatus], [s0].[UpdatedAt], [s0].[UpdatedBy], [s].[Name], [s].[Name0], [s].[Name1], [s].[Name2]
FROM (
    SELECT TOP(1) [o].[OrderId], [o].[NumberOfItems], [o].[OrderDate], [o].[OrderStatus], [o].[PaymentDate], [o].[PaymentMethod], [o].[PaymentStatus], [o].[PaymentType], [o].[TotalCost], [o].[TotalQuantity], [o].[UpdatedBy], [o].[UpdatedDate], [o].[UserId], [o0].[StatusId], [o0].[Name], [p].[PaymentTypeId], [p].[Name] AS [Name0], [p0].[PaymentMethodId], [p0].[Name] AS [Name1], [p1].[PaymentStatusId], [p1].[Name] AS [Name2]
    FROM [Orders] AS [o]
    INNER JOIN [OrderStatus] AS [o0] ON [o].[OrderStatus] = [o0].[StatusId]
    INNER JOIN [PaymentType] AS [p] ON [o].[PaymentType] = [p].[PaymentTypeId]
    INNER JOIN [PaymentMethod] AS [p0] ON [o].[PaymentMethod] = [p0].[PaymentMethodId]
    INNER JOIN [PaymentStatus] AS [p1] ON [o].[PaymentStatus] = [p1].[PaymentStatusId]
    WHERE [o].[OrderId] = @__orderId_0 AND [o].[UserId] = @__userId_1
) AS [s]
LEFT JOIN (
    SELECT [o1].[OrderItemId], [o1].[OrderDate], [o1].[OrderId], [o1].[OrderItemStatus], [o1].[ProductId], [o1].[ProductPrice], [o1].[Quantity], [o1].[TotalPrice], [p2].[ProductId] AS [ProductId0], [p2].[AvailableQuantity], [p2].[CategoryId], [p2].[CreatedAt], [p2].[CreatedBy], [p2].[Description], [p2].[IsDeleted], [p2].[LastRestockAt], [p2].[MinimumRequiredQuantity], [p2].[Name], [p2].[Price], [p2].[ProductStatus], [p2].[UpdatedAt], [p2].[UpdatedBy]
    FROM [OrderItems] AS [o1]
    INNER JOIN [Products] AS [p2] ON [o1].[ProductId] = [p2].[ProductId]
) AS [s0] ON [s].[OrderId] = [s0].[OrderId]
ORDER BY [s].[OrderId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId]
2025-05-09 15:01:23.183 +05:30 [INF] Executed DbCommand (21ms) [Parameters=[@__orderId_0='?' (DbType = Int64), @__userId_1='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[OrderId], [s].[NumberOfItems], [s].[OrderDate], [s].[OrderStatus], [s].[PaymentDate], [s].[PaymentMethod], [s].[PaymentStatus], [s].[PaymentType], [s].[TotalCost], [s].[TotalQuantity], [s].[UpdatedBy], [s].[UpdatedDate], [s].[UserId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId], [s0].[OrderDate], [s0].[OrderId], [s0].[OrderItemStatus], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[TotalPrice], [s0].[ProductId0], [s0].[AvailableQuantity], [s0].[CategoryId], [s0].[CreatedAt], [s0].[CreatedBy], [s0].[Description], [s0].[IsDeleted], [s0].[LastRestockAt], [s0].[MinimumRequiredQuantity], [s0].[Name], [s0].[Price], [s0].[ProductStatus], [s0].[UpdatedAt], [s0].[UpdatedBy], [s].[Name], [s].[Name0], [s].[Name1], [s].[Name2]
FROM (
    SELECT TOP(1) [o].[OrderId], [o].[NumberOfItems], [o].[OrderDate], [o].[OrderStatus], [o].[PaymentDate], [o].[PaymentMethod], [o].[PaymentStatus], [o].[PaymentType], [o].[TotalCost], [o].[TotalQuantity], [o].[UpdatedBy], [o].[UpdatedDate], [o].[UserId], [o0].[StatusId], [o0].[Name], [p].[PaymentTypeId], [p].[Name] AS [Name0], [p0].[PaymentMethodId], [p0].[Name] AS [Name1], [p1].[PaymentStatusId], [p1].[Name] AS [Name2]
    FROM [Orders] AS [o]
    INNER JOIN [OrderStatus] AS [o0] ON [o].[OrderStatus] = [o0].[StatusId]
    INNER JOIN [PaymentType] AS [p] ON [o].[PaymentType] = [p].[PaymentTypeId]
    INNER JOIN [PaymentMethod] AS [p0] ON [o].[PaymentMethod] = [p0].[PaymentMethodId]
    INNER JOIN [PaymentStatus] AS [p1] ON [o].[PaymentStatus] = [p1].[PaymentStatusId]
    WHERE [o].[OrderId] = @__orderId_0 AND [o].[UserId] = @__userId_1
) AS [s]
LEFT JOIN (
    SELECT [o1].[OrderItemId], [o1].[OrderDate], [o1].[OrderId], [o1].[OrderItemStatus], [o1].[ProductId], [o1].[ProductPrice], [o1].[Quantity], [o1].[TotalPrice], [p2].[ProductId] AS [ProductId0], [p2].[AvailableQuantity], [p2].[CategoryId], [p2].[CreatedAt], [p2].[CreatedBy], [p2].[Description], [p2].[IsDeleted], [p2].[LastRestockAt], [p2].[MinimumRequiredQuantity], [p2].[Name], [p2].[Price], [p2].[ProductStatus], [p2].[UpdatedAt], [p2].[UpdatedBy]
    FROM [OrderItems] AS [o1]
    INNER JOIN [Products] AS [p2] ON [o1].[ProductId] = [p2].[ProductId]
) AS [s0] ON [s].[OrderId] = [s0].[OrderId]
ORDER BY [s].[OrderId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId]
2025-05-09 15:01:23.191 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Orders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:23.193 +05:30 [DBG] The navigation 'Orders.OrderStatusNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:23.195 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderStatus' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:23.197 +05:30 [DBG] The navigation 'Orders.PaymentTypeNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:23.198 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'PaymentType' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:23.200 +05:30 [DBG] The navigation 'Orders.PaymentMethodNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:23.201 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'PaymentMethod' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:23.204 +05:30 [DBG] The navigation 'Orders.PaymentStatusNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:23.205 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'PaymentStatus' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:23.207 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:23.208 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:23.210 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:23.211 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:23.212 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:01:23.214 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:23.215 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 23ms reading results.
2025-05-09 15:01:23.216 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:23.217 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:01:23.220 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:01:23.223 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:01:23.224 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:01:23.225 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:01:23.225 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:01:23.227 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.CustomerOrderDetailsResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-09 15:01:23.228 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem) in 94.1964ms
2025-05-09 15:01:23.230 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)'
2025-05-09 15:01:23.231 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:01:23.232 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:01:23.233 +05:30 [DBG] Disposed connection to database '' on server '' (0ms).
2025-05-09 15:01:23.235 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Order/customer-order/2 - 200 null application/json; charset=utf-8 129.9727ms
2025-05-09 15:02:32.678 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Product/add - application/json 137
2025-05-09 15:02:32.715 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/add'
2025-05-09 15:02:32.717 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)' with route pattern 'api/Product/add' is valid for the request path '/api/Product/add'
2025-05-09 15:02:32.719 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 15:02:32.721 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:02:32.724 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:02:32.727 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:02:32.729 +05:30 [DBG] Authorization was successful.
2025-05-09 15:02:32.730 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 15:02:32.734 +05:30 [INF] Route matched with {action = "AddProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddProduct(InventoryManagementSystem.Models.Request.AddProductRequest) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 15:02:32.740 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:02:32.743 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:02:32.744 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:02:32.746 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:02:32.747 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:02:32.749 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 15:02:32.751 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 15:02:32.754 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' ...
2025-05-09 15:02:32.756 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' using the name '' in request data ...
2025-05-09 15:02:32.759 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:02:32.762 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000003B": started reading request body.
2025-05-09 15:02:32.764 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000003B": done reading request body.
2025-05-09 15:02:32.768 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.AddProductRequest'
2025-05-09 15:02:32.770 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 15:02:32.771 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 15:02:32.773 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' ...
2025-05-09 15:02:32.788 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 15:02:32.790 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 15:02:32.791 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 15:02:32.793 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:02:32.797 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:02:32.797 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 15:02:32.800 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 15:02:32.801 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 15:02:32.803 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem) in 53.3896ms
2025-05-09 15:02:32.804 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 15:02:32.806 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Product/add - 400 null application/problem+json; charset=utf-8 128.2164ms
2025-05-09 15:04:03.718 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Category/all - null null
2025-05-09 15:04:03.728 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/all'
2025-05-09 15:04:03.732 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)' with route pattern 'api/Category/all' is valid for the request path '/api/Category/all'
2025-05-09 15:04:03.735 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 15:04:03.736 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:04:03.738 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:04:03.738 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:04:03.740 +05:30 [DBG] Authorization was successful.
2025-05-09 15:04:03.740 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 15:04:03.741 +05:30 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 15:04:03.744 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:04:03.745 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:04:03.746 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:04:03.749 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:04:03.750 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:04:03.752 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 15:04:03.753 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 15:04:03.755 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:04:03.757 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:04:03.757 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 15:04:03.759 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:03.760 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:03.760 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:04:03.761 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:04:03.762 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:04:03.764 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 15:04:03.774 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 15:04:03.776 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:04:03.778 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:04:03.779 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:04:03.781 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:03.783 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 6ms reading results.
2025-05-09 15:04:03.784 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:03.785 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:04:03.787 +05:30 [INF] Fetched 3 categories.
2025-05-09 15:04:03.788 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:04:03.791 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:04:03.791 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:04:03.792 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:04:03.793 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:04:03.794 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Entity.Category, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:04:03.796 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem) in 44.6376ms
2025-05-09 15:04:03.804 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 15:04:03.806 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:04:03.807 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:03.808 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 15:04:03.810 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Category/all - 200 null application/json; charset=utf-8 91.7293ms
2025-05-09 15:04:30.033 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Product/add - application/json 138
2025-05-09 15:04:30.049 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/add'
2025-05-09 15:04:30.054 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)' with route pattern 'api/Product/add' is valid for the request path '/api/Product/add'
2025-05-09 15:04:30.062 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 15:04:30.064 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:04:30.066 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:04:30.070 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:04:30.072 +05:30 [DBG] Authorization was successful.
2025-05-09 15:04:30.074 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 15:04:30.076 +05:30 [INF] Route matched with {action = "AddProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddProduct(InventoryManagementSystem.Models.Request.AddProductRequest) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 15:04:30.079 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:04:30.081 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:04:30.083 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:04:30.089 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:04:30.091 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:04:30.093 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 15:04:30.096 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 15:04:30.097 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' ...
2025-05-09 15:04:30.099 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' using the name '' in request data ...
2025-05-09 15:04:30.103 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:04:30.105 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000003F": started reading request body.
2025-05-09 15:04:30.106 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000003F": done reading request body.
2025-05-09 15:04:30.108 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.AddProductRequest'
2025-05-09 15:04:30.109 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 15:04:30.110 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 15:04:30.112 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' ...
2025-05-09 15:04:30.114 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 15:04:30.121 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:04:30.125 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:04:30.125 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 15:04:30.126 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:30.130 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:30.137 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:04:30.140 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:04:30.141 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-09 15:04:30.143 +05:30 [DBG] Executing DbCommand [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:04:30.148 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:04:30.156 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:30.157 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 15:04:30.159 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:30.161 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:04:30.163 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:04:30.165 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:04:30.168 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:04:30.170 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:04:30.172 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:04:30.174 +05:30 [INF] Executing NotFoundObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:04:30.176 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem) in 82.8865ms
2025-05-09 15:04:30.186 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 15:04:30.188 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:04:30.190 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:30.192 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 15:04:30.194 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Product/add - 404 null application/json; charset=utf-8 162.311ms
2025-05-09 15:04:39.286 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Product/add - application/json 138
2025-05-09 15:04:39.294 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/add'
2025-05-09 15:04:39.297 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)' with route pattern 'api/Product/add' is valid for the request path '/api/Product/add'
2025-05-09 15:04:39.300 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 15:04:39.303 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:04:39.305 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:04:39.306 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:04:39.307 +05:30 [DBG] Authorization was successful.
2025-05-09 15:04:39.308 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 15:04:39.309 +05:30 [INF] Route matched with {action = "AddProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddProduct(InventoryManagementSystem.Models.Request.AddProductRequest) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 15:04:39.311 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:04:39.313 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:04:39.315 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:04:39.319 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:04:39.320 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:04:39.322 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 15:04:39.324 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 15:04:39.326 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' ...
2025-05-09 15:04:39.327 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' using the name '' in request data ...
2025-05-09 15:04:39.329 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:04:39.330 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000041": started reading request body.
2025-05-09 15:04:39.331 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000041": done reading request body.
2025-05-09 15:04:39.333 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.AddProductRequest'
2025-05-09 15:04:39.337 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 15:04:39.340 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 15:04:39.341 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' ...
2025-05-09 15:04:39.344 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 15:04:39.347 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:04:39.349 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:04:39.350 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 15:04:39.354 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:39.356 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:39.357 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:04:39.359 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:04:39.360 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:04:39.361 +05:30 [DBG] Executing DbCommand [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:04:39.365 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:04:39.371 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:04:39.374 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:39.375 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 4ms reading results.
2025-05-09 15:04:39.378 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:39.379 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:04:39.382 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Products.ProductId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:04:39.387 +05:30 [DBG] The navigation 'Products.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:04:39.389 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:04:39.391 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 15:04:39.392 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 15:04:39.393 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 15:04:39.394 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:39.395 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:39.396 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:04:39.397 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:04:39.399 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:04:39.401 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([AvailableQuantity], [CategoryId], [CreatedAt], [CreatedBy], [Description], [IsDeleted], [LastRestockAt], [MinimumRequiredQuantity], [Name], [Price], [ProductStatus], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[ProductId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12);
2025-05-09 15:04:39.416 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([AvailableQuantity], [CategoryId], [CreatedAt], [CreatedBy], [Description], [IsDeleted], [LastRestockAt], [MinimumRequiredQuantity], [Name], [Price], [ProductStatus], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[ProductId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12);
2025-05-09 15:04:39.422 +05:30 [DBG] The foreign key property 'Products.ProductId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:04:39.424 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:39.426 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 5ms reading results.
2025-05-09 15:04:39.427 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:39.429 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:04:39.430 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:04:39.433 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 15:04:39.435 +05:30 [INF] Starting stock movement for ProductId: 3, UserId: 2, Status: "Pending"
2025-05-09 15:04:39.436 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:39.438 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:39.440 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:04:39.440 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:04:39.442 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:04:39.443 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 15:04:39.448 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 15:04:39.453 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:39.454 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 15:04:39.455 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:39.457 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:04:39.458 +05:30 [INF] 'NewProductAdded' movement for ProductId: 3
2025-05-09 15:04:39.459 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:04:39.461 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:04:39.463 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:04:39.465 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 15:04:39.466 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 15:04:39.468 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 15:04:39.469 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:39.470 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:39.471 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:04:39.472 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:04:39.473 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:04:39.474 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 15:04:39.482 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 15:04:39.485 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:04:39.487 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:39.488 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 15:04:39.489 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:39.490 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 15:04:39.491 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:04:39.494 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 15:04:39.495 +05:30 [INF] Stock movement successfully for ProductId: 3
2025-05-09 15:04:39.497 +05:30 [INF] Product added successfully: {"ProductId":3,"Name":"String","Description":"string","CategoryId":1,"Price":10,"AvailableQuantity":0,"MinimumRequiredQuantity":0,"LastRestockAt":"0001-01-01T00:00:00.0000000","CreatedBy":2,"CreatedAt":"2025-05-09T15:04:39.3813646+05:30","UpdatedBy":2,"UpdatedAt":"0001-01-01T00:00:00.0000000","IsDeleted":false,"ProductStatus":3,"CreatedByUser":null,"UpdatedByUser":null,"Category":{"CategoryId":1,"Name":"String","CreatedBy":2,"CreatedAt":"2025-05-09T01:30:56.8476551","UpdatedBy":0,"UpdatedAt":"0001-01-01T00:00:00.0000000","ActiveStatus":true,"IsDeleted":false,"CreatedByUser":null,"$type":"Category"},"StockPurchaseOrderItems":null,"$type":"Products"}
2025-05-09 15:04:39.521 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:04:39.524 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:04:39.525 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:04:39.526 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:04:39.527 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:04:39.528 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:04:39.529 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem) in 207.8768ms
2025-05-09 15:04:39.531 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 15:04:39.532 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:04:39.533 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:04:39.535 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 15:04:39.536 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Product/add - 201 null application/json; charset=utf-8 251.6409ms
2025-05-09 15:05:23.359 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Product/update-product - application/json 132
2025-05-09 15:05:23.375 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/update-product'
2025-05-09 15:05:23.379 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)' with route pattern 'api/Product/update-product' is valid for the request path '/api/Product/update-product'
2025-05-09 15:05:23.382 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)'
2025-05-09 15:05:23.384 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:05:23.387 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:05:23.391 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:05:23.394 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)'
2025-05-09 15:05:23.399 +05:30 [INF] Route matched with {action = "UpdateProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateProduct(InventoryManagementSystem.Models.Request.UpdateProductRequest) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 15:05:23.404 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:05:23.409 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:05:23.410 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:05:23.413 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:05:23.415 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:05:23.418 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 15:05:23.423 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 15:05:23.424 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest' ...
2025-05-09 15:05:23.426 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest' using the name '' in request data ...
2025-05-09 15:05:23.428 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:05:23.433 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000043": started reading request body.
2025-05-09 15:05:23.434 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000043": done reading request body.
2025-05-09 15:05:23.440 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UpdateProductRequest'
2025-05-09 15:05:23.442 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest'.
2025-05-09 15:05:23.444 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest'.
2025-05-09 15:05:23.445 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest' ...
2025-05-09 15:05:23.448 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest'.
2025-05-09 15:05:23.451 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:05:23.456 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:05:23.457 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 15:05:23.458 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:23.459 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:23.460 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:05:23.461 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:05:23.462 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:05:23.464 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:05:23.470 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:05:23.477 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:05:23.479 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:23.480 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-09 15:05:23.483 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:23.484 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:05:23.487 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:23.492 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:23.497 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:05:23.499 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:05:23.500 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 15:05:23.502 +05:30 [DBG] Executing DbCommand [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:05:23.507 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:05:23.510 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:23.511 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 0ms reading results.
2025-05-09 15:05:23.512 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:23.513 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:05:23.515 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:05:23.517 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:05:23.518 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:05:23.520 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:05:23.521 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:05:23.524 +05:30 [INF] Executing NotFoundObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:05:23.526 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem) in 107.6936ms
2025-05-09 15:05:23.528 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)'
2025-05-09 15:05:23.529 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:05:23.530 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:23.531 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 15:05:23.532 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Product/update-product - 404 null application/json; charset=utf-8 173.4324ms
2025-05-09 15:05:40.977 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Product/update-product - application/json 133
2025-05-09 15:05:40.984 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/update-product'
2025-05-09 15:05:40.987 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)' with route pattern 'api/Product/update-product' is valid for the request path '/api/Product/update-product'
2025-05-09 15:05:40.992 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)'
2025-05-09 15:05:40.994 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:05:40.996 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:05:40.997 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:05:40.998 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)'
2025-05-09 15:05:40.999 +05:30 [INF] Route matched with {action = "UpdateProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateProduct(InventoryManagementSystem.Models.Request.UpdateProductRequest) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 15:05:41.000 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:05:41.001 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:05:41.003 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:05:41.009 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:05:41.010 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:05:41.011 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 15:05:41.013 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 15:05:41.014 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest' ...
2025-05-09 15:05:41.015 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest' using the name '' in request data ...
2025-05-09 15:05:41.017 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:05:41.018 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000045": started reading request body.
2025-05-09 15:05:41.019 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000045": done reading request body.
2025-05-09 15:05:41.020 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UpdateProductRequest'
2025-05-09 15:05:41.023 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest'.
2025-05-09 15:05:41.026 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest'.
2025-05-09 15:05:41.028 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest' ...
2025-05-09 15:05:41.029 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest'.
2025-05-09 15:05:41.031 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:05:41.034 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:05:41.035 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 15:05:41.036 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:41.037 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:41.041 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:05:41.042 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:05:41.044 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 15:05:41.046 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:05:41.050 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:05:41.053 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:05:41.056 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:41.059 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 6ms reading results.
2025-05-09 15:05:41.062 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:41.064 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:05:41.065 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:41.066 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:41.067 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:05:41.068 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:05:41.069 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:05:41.072 +05:30 [DBG] Executing DbCommand [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:05:41.077 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:05:41.081 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:41.083 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 15:05:41.085 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:41.086 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 15:05:41.089 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:05:41.091 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:05:41.092 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:05:41.093 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:05:41.093 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:05:41.095 +05:30 [INF] Executing NotFoundObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:05:41.097 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem) in 85.164ms
2025-05-09 15:05:41.098 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)'
2025-05-09 15:05:41.099 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:05:41.100 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:41.101 +05:30 [DBG] Disposed connection to database '' on server '' (0ms).
2025-05-09 15:05:41.103 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Product/update-product - 404 null application/json; charset=utf-8 126.438ms
2025-05-09 15:05:50.055 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Product/update-product - application/json 133
2025-05-09 15:05:50.061 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/update-product'
2025-05-09 15:05:50.064 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)' with route pattern 'api/Product/update-product' is valid for the request path '/api/Product/update-product'
2025-05-09 15:05:50.067 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)'
2025-05-09 15:05:50.068 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:05:50.069 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:05:50.070 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:05:50.072 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)'
2025-05-09 15:05:50.076 +05:30 [INF] Route matched with {action = "UpdateProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateProduct(InventoryManagementSystem.Models.Request.UpdateProductRequest) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 15:05:50.079 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:05:50.081 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:05:50.083 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:05:50.085 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:05:50.086 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:05:50.087 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 15:05:50.089 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 15:05:50.093 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest' ...
2025-05-09 15:05:50.095 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest' using the name '' in request data ...
2025-05-09 15:05:50.097 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:05:50.099 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000047": started reading request body.
2025-05-09 15:05:50.100 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000047": done reading request body.
2025-05-09 15:05:50.102 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UpdateProductRequest'
2025-05-09 15:05:50.103 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest'.
2025-05-09 15:05:50.107 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest'.
2025-05-09 15:05:50.109 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest' ...
2025-05-09 15:05:50.111 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest'.
2025-05-09 15:05:50.113 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:05:50.116 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:05:50.117 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 15:05:50.118 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:50.119 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:50.121 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:05:50.123 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:05:50.124 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 15:05:50.125 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:05:50.129 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:05:50.133 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:05:50.135 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:50.136 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-09 15:05:50.144 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:50.146 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:05:50.149 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:50.150 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:50.151 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:05:50.152 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:05:50.154 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:05:50.155 +05:30 [DBG] Executing DbCommand [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:05:50.159 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:05:50.163 +05:30 [DBG] The navigation 'Products.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:05:50.164 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:05:50.166 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:50.167 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 5ms reading results.
2025-05-09 15:05:50.169 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:50.170 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:05:50.173 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:05:50.174 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 15:05:50.176 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 15:05:50.177 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 15:05:50.178 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:50.179 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:50.180 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:05:50.181 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:05:50.183 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:05:50.184 +05:30 [DBG] Executing DbCommand [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
2025-05-09 15:05:50.195 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
2025-05-09 15:05:50.198 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:50.200 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 15:05:50.201 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:50.202 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:05:50.204 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:05:50.207 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 15:05:50.208 +05:30 [INF] Product updated successfully. ID: 3
2025-05-09 15:05:50.209 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:05:50.211 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:05:50.211 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:05:50.212 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:05:50.213 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:05:50.215 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:05:50.216 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem) in 128.8416ms
2025-05-09 15:05:50.218 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)'
2025-05-09 15:05:50.219 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:05:50.221 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:05:50.223 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 15:05:50.224 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Product/update-product - 200 null application/json; charset=utf-8 169.4744ms
2025-05-09 15:08:12.229 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Product/get-all-products - null null
2025-05-09 15:08:12.240 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/get-all-products'
2025-05-09 15:08:12.242 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)' with route pattern 'api/Product/get-all-products' is valid for the request path '/api/Product/get-all-products'
2025-05-09 15:08:12.244 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 15:08:12.246 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:08:12.247 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:08:12.248 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:08:12.251 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 15:08:12.256 +05:30 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 15:08:12.260 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:08:12.261 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:08:12.263 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:08:12.266 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:08:12.268 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:08:12.269 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 15:08:12.271 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 15:08:12.275 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:08:12.278 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .Where(p => !(p.IsDeleted))'
2025-05-09 15:08:12.285 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Products>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
        SELECT p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
        FROM Products AS p
        WHERE Not(p.IsDeleted)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
        SELECT p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
        FROM Products AS p
        WHERE Not(p.IsDeleted), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Products entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Products instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Products);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Products)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                        {
                            return 
                            {
                                Products instance;
                                instance = new Products();
                                instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                instance.<Name>k__BackingField = dataReader.GetString(9);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Products)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 15:08:12.306 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:08:12.307 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 15:08:12.308 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:08:12.309 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:08:12.310 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:08:12.311 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:08:12.312 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:08:12.313 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:08:12.321 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:08:12.324 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:08:12.326 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:08:12.328 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:08:12.331 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:08:12.333 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 8ms reading results.
2025-05-09 15:08:12.336 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:08:12.337 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:08:12.340 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:08:12.343 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:08:12.343 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:08:12.344 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:08:12.345 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:08:12.347 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.ProductResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:08:12.352 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem) in 83.0304ms
2025-05-09 15:08:12.360 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 15:08:12.361 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:08:12.362 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:08:12.363 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 15:08:12.364 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Product/get-all-products - 200 null application/json; charset=utf-8 135.5944ms
2025-05-09 15:08:49.638 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Product/low-stock-product - null null
2025-05-09 15:08:49.647 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/low-stock-product'
2025-05-09 15:08:49.648 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)' with route pattern 'api/Product/low-stock-product' is valid for the request path '/api/Product/low-stock-product'
2025-05-09 15:08:49.650 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)'
2025-05-09 15:08:49.651 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:08:49.654 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:08:49.655 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:08:49.660 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)'
2025-05-09 15:08:49.664 +05:30 [INF] Route matched with {action = "GetLowStockProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetLowStockProducts() on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 15:08:49.667 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:08:49.670 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:08:49.672 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:08:49.674 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:08:49.676 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:08:49.677 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 15:08:49.679 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 15:08:49.682 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:08:49.687 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .Where(p => !(p.IsDeleted) && p.AvailableQuantity <= p.MinimumRequiredQuantity || p.ProductStatus == 4)'
2025-05-09 15:08:49.694 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Products>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
        SELECT p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
        FROM Products AS p
        WHERE Not(p.IsDeleted) && ((p.AvailableQuantity <= p.MinimumRequiredQuantity) || (p.ProductStatus == 4))) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
        SELECT p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
        FROM Products AS p
        WHERE Not(p.IsDeleted) && ((p.AvailableQuantity <= p.MinimumRequiredQuantity) || (p.ProductStatus == 4)), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Products entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Products instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Products);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Products)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                        {
                            return 
                            {
                                Products instance;
                                instance = new Products();
                                instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                instance.<Name>k__BackingField = dataReader.GetString(9);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Products)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 15:08:49.716 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:08:49.717 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 15:08:49.719 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:08:49.720 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:08:49.721 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:08:49.722 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:08:49.724 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:08:49.725 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND ([p].[AvailableQuantity] <= [p].[MinimumRequiredQuantity] OR [p].[ProductStatus] = 4)
2025-05-09 15:08:49.734 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND ([p].[AvailableQuantity] <= [p].[MinimumRequiredQuantity] OR [p].[ProductStatus] = 4)
2025-05-09 15:08:49.738 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:08:49.739 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:08:49.740 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 15:08:49.742 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:08:49.743 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:08:49.745 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:08:49.747 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:08:49.748 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:08:49.749 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:08:49.750 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:08:49.752 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.ProductResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:08:49.755 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem) in 77.2954ms
2025-05-09 15:08:49.761 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)'
2025-05-09 15:08:49.763 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:08:49.764 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:08:49.766 +05:30 [DBG] Disposed connection to database '' on server '' (2ms).
2025-05-09 15:08:49.768 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Product/low-stock-product - 200 null application/json; charset=utf-8 131.0307ms
2025-05-09 15:09:20.224 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Vendor/add - application/json 199
2025-05-09 15:09:20.229 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Vendor/add'
2025-05-09 15:09:20.230 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem)' with route pattern 'api/Vendor/add' is valid for the request path '/api/Vendor/add'
2025-05-09 15:09:20.233 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem)'
2025-05-09 15:09:20.235 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:09:20.236 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:09:20.237 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:09:20.239 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem)'
2025-05-09 15:09:20.247 +05:30 [INF] Route matched with {action = "AddVendor", controller = "Vendor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddVendor(InventoryManagementSystem.Models.Request.VendorRequest) on controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem).
2025-05-09 15:09:20.249 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:09:20.251 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:09:20.252 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:09:20.254 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:09:20.255 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:09:20.257 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 15:09:20.259 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 15:09:20.260 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest' ...
2025-05-09 15:09:20.262 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest' using the name '' in request data ...
2025-05-09 15:09:20.264 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:09:20.266 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000004D": started reading request body.
2025-05-09 15:09:20.267 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000004D": done reading request body.
2025-05-09 15:09:20.271 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.VendorRequest'
2025-05-09 15:09:20.273 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest'.
2025-05-09 15:09:20.275 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest'.
2025-05-09 15:09:20.276 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest' ...
2025-05-09 15:09:20.282 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest'.
2025-05-09 15:09:20.284 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 15:09:20.285 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 15:09:20.286 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:09:20.290 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:09:20.290 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 15:09:20.293 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 15:09:20.295 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 15:09:20.297 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem) in 39.524ms
2025-05-09 15:09:20.298 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem)'
2025-05-09 15:09:20.299 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Vendor/add - 400 null application/problem+json; charset=utf-8 75.7414ms
2025-05-09 15:10:22.135 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Vendor/add - application/json 215
2025-05-09 15:10:22.179 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Vendor/add'
2025-05-09 15:10:22.185 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem)' with route pattern 'api/Vendor/add' is valid for the request path '/api/Vendor/add'
2025-05-09 15:10:22.189 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem)'
2025-05-09 15:10:22.190 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:10:22.194 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:10:22.195 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:10:22.197 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem)'
2025-05-09 15:10:22.199 +05:30 [INF] Route matched with {action = "AddVendor", controller = "Vendor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddVendor(InventoryManagementSystem.Models.Request.VendorRequest) on controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem).
2025-05-09 15:10:22.201 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:10:22.203 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:10:22.204 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:10:22.206 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:10:22.208 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:10:22.212 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 15:10:22.215 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 15:10:22.217 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest' ...
2025-05-09 15:10:22.218 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest' using the name '' in request data ...
2025-05-09 15:10:22.220 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:10:22.221 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000004F": started reading request body.
2025-05-09 15:10:22.222 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:0000004F": done reading request body.
2025-05-09 15:10:22.224 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.VendorRequest'
2025-05-09 15:10:22.226 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest'.
2025-05-09 15:10:22.230 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest'.
2025-05-09 15:10:22.231 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest' ...
2025-05-09 15:10:22.235 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest'.
2025-05-09 15:10:22.238 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 15:10:22.239 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 15:10:22.240 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:10:22.246 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:10:22.246 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 15:10:22.250 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 15:10:22.251 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 15:10:22.253 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem) in 41.5454ms
2025-05-09 15:10:22.263 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem)'
2025-05-09 15:10:22.265 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Vendor/add - 400 null application/problem+json; charset=utf-8 131.1334ms
2025-05-09 15:10:41.854 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Vendor/add - application/json 213
2025-05-09 15:10:41.869 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Vendor/add'
2025-05-09 15:10:41.877 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem)' with route pattern 'api/Vendor/add' is valid for the request path '/api/Vendor/add'
2025-05-09 15:10:41.883 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem)'
2025-05-09 15:10:41.887 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:10:41.889 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:10:41.890 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:10:41.892 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem)'
2025-05-09 15:10:41.896 +05:30 [INF] Route matched with {action = "AddVendor", controller = "Vendor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddVendor(InventoryManagementSystem.Models.Request.VendorRequest) on controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem).
2025-05-09 15:10:41.900 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:10:41.902 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:10:41.903 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:10:41.905 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:10:41.907 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:10:41.910 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 15:10:41.919 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 15:10:41.922 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest' ...
2025-05-09 15:10:41.924 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest' using the name '' in request data ...
2025-05-09 15:10:41.928 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:10:41.930 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000051": started reading request body.
2025-05-09 15:10:41.931 +05:30 [DBG] Connection id "0HNCER8NQNRM7", Request id "0HNCER8NQNRM7:00000051": done reading request body.
2025-05-09 15:10:41.933 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.VendorRequest'
2025-05-09 15:10:41.934 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest'.
2025-05-09 15:10:41.936 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest'.
2025-05-09 15:10:41.938 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest' ...
2025-05-09 15:10:41.940 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.VendorRequest'.
2025-05-09 15:10:41.945 +05:30 [INF] Adding new vendor: string
2025-05-09 15:10:41.949 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:10:41.953 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'VendorDetails.VendorId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:10:41.979 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'VendorDetails' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:10:41.982 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 15:10:41.983 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 15:10:41.990 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 15:10:41.992 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:10:41.993 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 15:10:41.997 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:10:41.998 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:10:42.000 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:10:42.001 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:10:42.002 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:10:42.003 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 500), @p1='?' (Size = 50), @p2='?' (Size = 50), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int64), @p5='?' (Size = 100), @p6='?' (DbType = Boolean), @p7='?' (Size = 50), @p8='?' (Size = 15), @p9='?' (Size = 10), @p10='?' (Size = 50), @p11='?' (Size = 100), @p12='?' (DbType = DateTime2), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [VendorDetails] ([Address], [City], [Country], [CreatedAt], [CreatedBy], [Email], [IsDeleted], [Name], [Phone], [Pincode], [State], [StoreName], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[VendorId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13);
2025-05-09 15:10:42.012 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (Size = 500), @p1='?' (Size = 50), @p2='?' (Size = 50), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int64), @p5='?' (Size = 100), @p6='?' (DbType = Boolean), @p7='?' (Size = 50), @p8='?' (Size = 15), @p9='?' (Size = 10), @p10='?' (Size = 50), @p11='?' (Size = 100), @p12='?' (DbType = DateTime2), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [VendorDetails] ([Address], [City], [Country], [CreatedAt], [CreatedBy], [Email], [IsDeleted], [Name], [Phone], [Pincode], [State], [StoreName], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[VendorId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13);
2025-05-09 15:10:42.018 +05:30 [DBG] The foreign key property 'VendorDetails.VendorId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:10:42.020 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:10:42.021 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 4ms reading results.
2025-05-09 15:10:42.022 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:10:42.024 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:10:42.025 +05:30 [DBG] An entity of type 'VendorDetails' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:10:42.030 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 15:10:42.032 +05:30 [INF] Vendor added successfully: string
2025-05-09 15:10:42.033 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:10:42.036 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:10:42.037 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:10:42.038 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:10:42.039 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:10:42.040 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:10:42.042 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem) in 132.6554ms
2025-05-09 15:10:42.047 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.VendorController.AddVendor (InventoryManagementSystem)'
2025-05-09 15:10:42.049 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:10:42.051 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:10:42.052 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 15:10:42.054 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Vendor/add - 201 null application/json; charset=utf-8 200.9468ms
2025-05-09 15:10:58.999 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Vendor/get-all-vendors - null null
2025-05-09 15:10:59.004 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Vendor/get-all-vendors'
2025-05-09 15:10:59.027 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.VendorController.GetAllVendors (InventoryManagementSystem)' with route pattern 'api/Vendor/get-all-vendors' is valid for the request path '/api/Vendor/get-all-vendors'
2025-05-09 15:10:59.038 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.VendorController.GetAllVendors (InventoryManagementSystem)'
2025-05-09 15:10:59.045 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:10:59.047 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:10:59.048 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:10:59.049 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.VendorController.GetAllVendors (InventoryManagementSystem)'
2025-05-09 15:10:59.053 +05:30 [INF] Route matched with {action = "GetAllVendors", controller = "Vendor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllVendors() on controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem).
2025-05-09 15:10:59.056 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:10:59.057 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:10:59.058 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:10:59.061 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:10:59.063 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:10:59.064 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 15:10:59.066 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 15:10:59.068 +05:30 [INF] Fetching all vendors
2025-05-09 15:10:59.071 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:10:59.074 +05:30 [DBG] Compiling query expression: 
'DbSet<VendorDetails>()
    .Where(v => !(v.IsDeleted))
    .OrderBy(v => v.Name)'
2025-05-09 15:10:59.082 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<VendorDetails>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: VendorDetails.VendorId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: VendorDetails.Address (string) Required MaxLength(500), 1], [Property: VendorDetails.City (string) Required MaxLength(50), 2], [Property: VendorDetails.Country (string) Required MaxLength(50), 3], [Property: VendorDetails.CreatedAt (DateTime) Required, 4], [Property: VendorDetails.CreatedBy (long) Required FK Index, 5], [Property: VendorDetails.Email (string) Required MaxLength(100), 6], [Property: VendorDetails.IsDeleted (bool) Required, 7], [Property: VendorDetails.Name (string) Required MaxLength(50), 8], [Property: VendorDetails.Phone (string) Required MaxLength(15), 9], [Property: VendorDetails.Pincode (string) Required MaxLength(10), 10], [Property: VendorDetails.State (string) Required MaxLength(50), 11], [Property: VendorDetails.StoreName (string) Required MaxLength(100), 12], [Property: VendorDetails.UpdatedAt (DateTime) Required, 13], [Property: VendorDetails.UpdatedBy (long) Required, 14] }
        SELECT v.VendorId, v.Address, v.City, v.Country, v.CreatedAt, v.CreatedBy, v.Email, v.IsDeleted, v.Name, v.Phone, v.Pincode, v.State, v.StoreName, v.UpdatedAt, v.UpdatedBy
        FROM VendorDetails AS v
        WHERE Not(v.IsDeleted)
        ORDER BY v.Name ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: VendorDetails.VendorId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: VendorDetails.Address (string) Required MaxLength(500), 1], [Property: VendorDetails.City (string) Required MaxLength(50), 2], [Property: VendorDetails.Country (string) Required MaxLength(50), 3], [Property: VendorDetails.CreatedAt (DateTime) Required, 4], [Property: VendorDetails.CreatedBy (long) Required FK Index, 5], [Property: VendorDetails.Email (string) Required MaxLength(100), 6], [Property: VendorDetails.IsDeleted (bool) Required, 7], [Property: VendorDetails.Name (string) Required MaxLength(50), 8], [Property: VendorDetails.Phone (string) Required MaxLength(15), 9], [Property: VendorDetails.Pincode (string) Required MaxLength(10), 10], [Property: VendorDetails.State (string) Required MaxLength(50), 11], [Property: VendorDetails.StoreName (string) Required MaxLength(100), 12], [Property: VendorDetails.UpdatedAt (DateTime) Required, 13], [Property: VendorDetails.UpdatedBy (long) Required, 14] }
        SELECT v.VendorId, v.Address, v.City, v.Country, v.CreatedAt, v.CreatedBy, v.Email, v.IsDeleted, v.Name, v.Phone, v.Pincode, v.State, v.StoreName, v.UpdatedAt, v.UpdatedBy
        FROM VendorDetails AS v
        WHERE Not(v.IsDeleted)
        ORDER BY v.Name ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        VendorDetails entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            VendorDetails instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(VendorDetails);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: VendorDetails.VendorId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (VendorDetails)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")]: 
                        {
                            return 
                            {
                                VendorDetails instance;
                                instance = new VendorDetails();
                                instance.<VendorId>k__BackingField = dataReader.GetInt64(0);
                                instance.<Address>k__BackingField = dataReader.GetString(1);
                                instance.<City>k__BackingField = dataReader.GetString(2);
                                instance.<Country>k__BackingField = dataReader.GetString(3);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(4);
                                instance.<CreatedBy>k__BackingField = dataReader.GetInt64(5);
                                instance.<Email>k__BackingField = dataReader.GetString(6);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Phone>k__BackingField = dataReader.GetString(9);
                                instance.<Pincode>k__BackingField = dataReader.GetString(10);
                                instance.<State>k__BackingField = dataReader.GetString(11);
                                instance.<StoreName>k__BackingField = dataReader.GetString(12);
                                instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(13);
                                instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(14);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(VendorDetails)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 15:10:59.111 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:10:59.113 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 15:10:59.114 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:10:59.116 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:10:59.118 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:10:59.119 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:10:59.120 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:10:59.122 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [VendorDetails] AS [v]
WHERE [v].[IsDeleted] = CAST(0 AS bit)
ORDER BY [v].[Name]
2025-05-09 15:10:59.132 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [VendorDetails] AS [v]
WHERE [v].[IsDeleted] = CAST(0 AS bit)
ORDER BY [v].[Name]
2025-05-09 15:10:59.136 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'VendorDetails' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:10:59.138 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'VendorDetails' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:10:59.140 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:10:59.141 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 5ms reading results.
2025-05-09 15:10:59.143 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:10:59.144 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:10:59.148 +05:30 [INF] Fetched 2 vendors
2025-05-09 15:10:59.149 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:10:59.152 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:10:59.153 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:10:59.154 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:10:59.155 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:10:59.157 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Entity.VendorDetails, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:10:59.167 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.VendorController.GetAllVendors (InventoryManagementSystem) in 102.4936ms
2025-05-09 15:10:59.168 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.VendorController.GetAllVendors (InventoryManagementSystem)'
2025-05-09 15:10:59.169 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:10:59.170 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:10:59.171 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 15:10:59.173 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Vendor/get-all-vendors - 200 null application/json; charset=utf-8 173.8398ms
2025-05-09 15:11:05.840 +05:30 [DBG] Connection id "0HNCER8NQNRM7" received FIN.
2025-05-09 15:11:05.844 +05:30 [DBG] Connection id "0HNCER8NQNRM7" is closed. The last processed stream ID was 83.
2025-05-09 15:11:05.844 +05:30 [DBG] The connection queue processing loop for 0HNCER8NQNRM7 completed.
2025-05-09 15:11:05.845 +05:30 [DBG] Connection id "0HNCER8NQNRM7" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 15:11:05.850 +05:30 [DBG] Connection id "0HNCER8NQNRM7" stopped.
2025-05-09 15:11:35.956 +05:30 [DBG] Connection id "0HNCER8NQNRM8" accepted.
2025-05-09 15:11:35.969 +05:30 [DBG] Connection id "0HNCER8NQNRM8" started.
2025-05-09 15:11:36.068 +05:30 [DBG] Connection 0HNCER8NQNRM8 established using the following protocol: "Tls12"
2025-05-09 15:11:36.075 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Vendor/update-vendor - application/json 216
2025-05-09 15:11:36.078 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Vendor/update-vendor'
2025-05-09 15:11:36.080 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.VendorController.UpdateVendor (InventoryManagementSystem)' with route pattern 'api/Vendor/update-vendor' is valid for the request path '/api/Vendor/update-vendor'
2025-05-09 15:11:36.086 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.VendorController.UpdateVendor (InventoryManagementSystem)'
2025-05-09 15:11:36.088 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:11:36.090 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:11:36.091 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:11:36.092 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.VendorController.UpdateVendor (InventoryManagementSystem)'
2025-05-09 15:11:36.096 +05:30 [INF] Route matched with {action = "UpdateVendor", controller = "Vendor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateVendor(InventoryManagementSystem.Models.Request.UpdateVendorRequest) on controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem).
2025-05-09 15:11:36.104 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:11:36.106 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:11:36.108 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:11:36.112 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:11:36.114 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:11:36.117 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 15:11:36.119 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 15:11:36.121 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest' ...
2025-05-09 15:11:36.122 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest' using the name '' in request data ...
2025-05-09 15:11:36.124 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:11:36.126 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:00000001": started reading request body.
2025-05-09 15:11:36.128 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:00000001": done reading request body.
2025-05-09 15:11:36.134 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest'
2025-05-09 15:11:36.135 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest'.
2025-05-09 15:11:36.137 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest'.
2025-05-09 15:11:36.138 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest' ...
2025-05-09 15:11:36.155 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest'.
2025-05-09 15:11:36.158 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 15:11:36.158 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 15:11:36.160 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:11:36.163 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:11:36.165 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 15:11:36.169 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 15:11:36.171 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 15:11:36.174 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.VendorController.UpdateVendor (InventoryManagementSystem) in 56.8391ms
2025-05-09 15:11:36.176 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.VendorController.UpdateVendor (InventoryManagementSystem)'
2025-05-09 15:11:36.178 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Vendor/update-vendor - 400 null application/problem+json; charset=utf-8 102.2413ms
2025-05-09 15:11:50.081 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Vendor/update-vendor - application/json 43
2025-05-09 15:11:50.089 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Vendor/update-vendor'
2025-05-09 15:11:50.091 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.VendorController.UpdateVendor (InventoryManagementSystem)' with route pattern 'api/Vendor/update-vendor' is valid for the request path '/api/Vendor/update-vendor'
2025-05-09 15:11:50.093 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.VendorController.UpdateVendor (InventoryManagementSystem)'
2025-05-09 15:11:50.094 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:11:50.096 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:11:50.096 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:11:50.097 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.VendorController.UpdateVendor (InventoryManagementSystem)'
2025-05-09 15:11:50.101 +05:30 [INF] Route matched with {action = "UpdateVendor", controller = "Vendor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateVendor(InventoryManagementSystem.Models.Request.UpdateVendorRequest) on controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem).
2025-05-09 15:11:50.106 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:11:50.108 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:11:50.110 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:11:50.113 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:11:50.117 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:11:50.119 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 15:11:50.121 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 15:11:50.123 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest' ...
2025-05-09 15:11:50.124 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest' using the name '' in request data ...
2025-05-09 15:11:50.126 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:11:50.127 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:00000003": started reading request body.
2025-05-09 15:11:50.129 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:00000003": done reading request body.
2025-05-09 15:11:50.132 +05:30 [DBG] JSON input formatter threw an exception: The JSON object contains a trailing comma at the end which is not supported in this mode. Change the reader options. Path: $ | LineNumber: 4 | BytePositionInLine: 0.
2025-05-09 15:11:50.136 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest'.
2025-05-09 15:11:50.138 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest'.
2025-05-09 15:11:50.139 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest' ...
2025-05-09 15:11:50.140 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest'.
2025-05-09 15:11:50.141 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 15:11:50.142 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 15:11:50.143 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:11:50.146 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:11:50.146 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 15:11:50.151 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 15:11:50.153 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 15:11:50.159 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.VendorController.UpdateVendor (InventoryManagementSystem) in 39.5714ms
2025-05-09 15:11:50.160 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.VendorController.UpdateVendor (InventoryManagementSystem)'
2025-05-09 15:11:50.161 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Vendor/update-vendor - 400 null application/problem+json; charset=utf-8 80.5775ms
2025-05-09 15:12:01.779 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Vendor/update-vendor - application/json 42
2025-05-09 15:12:01.787 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Vendor/update-vendor'
2025-05-09 15:12:01.789 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.VendorController.UpdateVendor (InventoryManagementSystem)' with route pattern 'api/Vendor/update-vendor' is valid for the request path '/api/Vendor/update-vendor'
2025-05-09 15:12:01.791 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.VendorController.UpdateVendor (InventoryManagementSystem)'
2025-05-09 15:12:01.792 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:12:01.793 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:12:01.794 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:12:01.794 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.VendorController.UpdateVendor (InventoryManagementSystem)'
2025-05-09 15:12:01.796 +05:30 [INF] Route matched with {action = "UpdateVendor", controller = "Vendor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateVendor(InventoryManagementSystem.Models.Request.UpdateVendorRequest) on controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem).
2025-05-09 15:12:01.799 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:12:01.802 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:12:01.804 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:12:01.806 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:12:01.807 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:12:01.808 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 15:12:01.809 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 15:12:01.811 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest' ...
2025-05-09 15:12:01.812 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest' using the name '' in request data ...
2025-05-09 15:12:01.816 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:12:01.818 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:00000005": started reading request body.
2025-05-09 15:12:01.819 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:00000005": done reading request body.
2025-05-09 15:12:01.821 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest'
2025-05-09 15:12:01.822 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest'.
2025-05-09 15:12:01.824 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest'.
2025-05-09 15:12:01.825 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest' ...
2025-05-09 15:12:01.827 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateVendorRequest'.
2025-05-09 15:12:01.830 +05:30 [INF] Updating vendor: ID 2
2025-05-09 15:12:01.833 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:12:01.836 +05:30 [DBG] Compiling query expression: 
'DbSet<VendorDetails>()
    .FirstOrDefault(v => v.VendorId == __vendorId_0 && !(v.IsDeleted))'
2025-05-09 15:12:01.842 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<VendorDetails>(
    asyncEnumerable: SingleQueryingEnumerable.Create<VendorDetails>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: VendorDetails.VendorId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: VendorDetails.Address (string) Required MaxLength(500), 1], [Property: VendorDetails.City (string) Required MaxLength(50), 2], [Property: VendorDetails.Country (string) Required MaxLength(50), 3], [Property: VendorDetails.CreatedAt (DateTime) Required, 4], [Property: VendorDetails.CreatedBy (long) Required FK Index, 5], [Property: VendorDetails.Email (string) Required MaxLength(100), 6], [Property: VendorDetails.IsDeleted (bool) Required, 7], [Property: VendorDetails.Name (string) Required MaxLength(50), 8], [Property: VendorDetails.Phone (string) Required MaxLength(15), 9], [Property: VendorDetails.Pincode (string) Required MaxLength(10), 10], [Property: VendorDetails.State (string) Required MaxLength(50), 11], [Property: VendorDetails.StoreName (string) Required MaxLength(100), 12], [Property: VendorDetails.UpdatedAt (DateTime) Required, 13], [Property: VendorDetails.UpdatedBy (long) Required, 14] }
            SELECT TOP(1) v.VendorId, v.Address, v.City, v.Country, v.CreatedAt, v.CreatedBy, v.Email, v.IsDeleted, v.Name, v.Phone, v.Pincode, v.State, v.StoreName, v.UpdatedAt, v.UpdatedBy
            FROM VendorDetails AS v
            WHERE (v.VendorId == @__vendorId_0) && Not(v.IsDeleted)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: VendorDetails.VendorId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: VendorDetails.Address (string) Required MaxLength(500), 1], [Property: VendorDetails.City (string) Required MaxLength(50), 2], [Property: VendorDetails.Country (string) Required MaxLength(50), 3], [Property: VendorDetails.CreatedAt (DateTime) Required, 4], [Property: VendorDetails.CreatedBy (long) Required FK Index, 5], [Property: VendorDetails.Email (string) Required MaxLength(100), 6], [Property: VendorDetails.IsDeleted (bool) Required, 7], [Property: VendorDetails.Name (string) Required MaxLength(50), 8], [Property: VendorDetails.Phone (string) Required MaxLength(15), 9], [Property: VendorDetails.Pincode (string) Required MaxLength(10), 10], [Property: VendorDetails.State (string) Required MaxLength(50), 11], [Property: VendorDetails.StoreName (string) Required MaxLength(100), 12], [Property: VendorDetails.UpdatedAt (DateTime) Required, 13], [Property: VendorDetails.UpdatedBy (long) Required, 14] }
            SELECT TOP(1) v.VendorId, v.Address, v.City, v.Country, v.CreatedAt, v.CreatedBy, v.Email, v.IsDeleted, v.Name, v.Phone, v.Pincode, v.State, v.StoreName, v.UpdatedAt, v.UpdatedBy
            FROM VendorDetails AS v
            WHERE (v.VendorId == @__vendorId_0) && Not(v.IsDeleted), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            VendorDetails entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                VendorDetails instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(VendorDetails);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: VendorDetails.VendorId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (VendorDetails)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")]: 
                            {
                                return 
                                {
                                    VendorDetails instance;
                                    instance = new VendorDetails();
                                    instance.<VendorId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<Address>k__BackingField = dataReader.GetString(1);
                                    instance.<City>k__BackingField = dataReader.GetString(2);
                                    instance.<Country>k__BackingField = dataReader.GetString(3);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(4);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(5);
                                    instance.<Email>k__BackingField = dataReader.GetString(6);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<Name>k__BackingField = dataReader.GetString(8);
                                    instance.<Phone>k__BackingField = dataReader.GetString(9);
                                    instance.<Pincode>k__BackingField = dataReader.GetString(10);
                                    instance.<State>k__BackingField = dataReader.GetString(11);
                                    instance.<StoreName>k__BackingField = dataReader.GetString(12);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(13);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(14);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(VendorDetails)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 15:12:01.864 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:12:01.865 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 15:12:01.867 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:01.868 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:01.869 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:12:01.870 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:12:01.871 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:12:01.872 +05:30 [DBG] Executing DbCommand [Parameters=[@__vendorId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [VendorDetails] AS [v]
WHERE [v].[VendorId] = @__vendorId_0 AND [v].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:12:01.890 +05:30 [INF] Executed DbCommand (18ms) [Parameters=[@__vendorId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [VendorDetails] AS [v]
WHERE [v].[VendorId] = @__vendorId_0 AND [v].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:12:01.893 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'VendorDetails' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:12:01.894 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:01.895 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 15:12:01.897 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:01.898 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:12:01.901 +05:30 [DBG] An entity of type 'VendorDetails' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:12:01.903 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 15:12:01.904 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 15:12:01.905 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 15:12:01.906 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:01.907 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:01.909 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:12:01.909 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:12:01.911 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:12:01.912 +05:30 [DBG] Executing DbCommand [Parameters=[@p14='?' (DbType = Int64), @p0='?' (Size = 500), @p1='?' (Size = 50), @p2='?' (Size = 50), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int64), @p5='?' (Size = 100), @p6='?' (DbType = Boolean), @p7='?' (Size = 50), @p8='?' (Size = 15), @p9='?' (Size = 10), @p10='?' (Size = 50), @p11='?' (Size = 100), @p12='?' (DbType = DateTime2), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [VendorDetails] SET [Address] = @p0, [City] = @p1, [Country] = @p2, [CreatedAt] = @p3, [CreatedBy] = @p4, [Email] = @p5, [IsDeleted] = @p6, [Name] = @p7, [Phone] = @p8, [Pincode] = @p9, [State] = @p10, [StoreName] = @p11, [UpdatedAt] = @p12, [UpdatedBy] = @p13
OUTPUT 1
WHERE [VendorId] = @p14;
2025-05-09 15:12:01.922 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@p14='?' (DbType = Int64), @p0='?' (Size = 500), @p1='?' (Size = 50), @p2='?' (Size = 50), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int64), @p5='?' (Size = 100), @p6='?' (DbType = Boolean), @p7='?' (Size = 50), @p8='?' (Size = 15), @p9='?' (Size = 10), @p10='?' (Size = 50), @p11='?' (Size = 100), @p12='?' (DbType = DateTime2), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [VendorDetails] SET [Address] = @p0, [City] = @p1, [Country] = @p2, [CreatedAt] = @p3, [CreatedBy] = @p4, [Email] = @p5, [IsDeleted] = @p6, [Name] = @p7, [Phone] = @p8, [Pincode] = @p9, [State] = @p10, [StoreName] = @p11, [UpdatedAt] = @p12, [UpdatedBy] = @p13
OUTPUT 1
WHERE [VendorId] = @p14;
2025-05-09 15:12:01.925 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:01.926 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 15:12:01.927 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:01.929 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:12:01.930 +05:30 [DBG] An entity of type 'VendorDetails' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:12:01.933 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 15:12:01.934 +05:30 [INF] Vendor updated successfully: ID 2
2025-05-09 15:12:01.936 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:12:01.938 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:12:01.939 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:12:01.940 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:12:01.941 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:12:01.942 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:12:01.943 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.VendorController.UpdateVendor (InventoryManagementSystem) in 135.1761ms
2025-05-09 15:12:01.945 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.VendorController.UpdateVendor (InventoryManagementSystem)'
2025-05-09 15:12:01.946 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:12:01.947 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:01.948 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 15:12:01.950 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Vendor/update-vendor - 200 null application/json; charset=utf-8 171.7762ms
2025-05-09 15:12:34.499 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Vendor/get-all-vendors - null null
2025-05-09 15:12:34.508 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Vendor/get-all-vendors'
2025-05-09 15:12:34.509 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.VendorController.GetAllVendors (InventoryManagementSystem)' with route pattern 'api/Vendor/get-all-vendors' is valid for the request path '/api/Vendor/get-all-vendors'
2025-05-09 15:12:34.511 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.VendorController.GetAllVendors (InventoryManagementSystem)'
2025-05-09 15:12:34.512 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:12:34.513 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:12:34.513 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:12:34.515 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.VendorController.GetAllVendors (InventoryManagementSystem)'
2025-05-09 15:12:34.516 +05:30 [INF] Route matched with {action = "GetAllVendors", controller = "Vendor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllVendors() on controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem).
2025-05-09 15:12:34.520 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:12:34.522 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:12:34.523 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:12:34.525 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:12:34.526 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:12:34.528 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 15:12:34.529 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 15:12:34.531 +05:30 [INF] Fetching all vendors
2025-05-09 15:12:34.532 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:12:34.534 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:12:34.536 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 15:12:34.537 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:34.538 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:34.539 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:12:34.540 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:12:34.541 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:12:34.542 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [VendorDetails] AS [v]
WHERE [v].[IsDeleted] = CAST(0 AS bit)
ORDER BY [v].[Name]
2025-05-09 15:12:34.548 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [VendorDetails] AS [v]
WHERE [v].[IsDeleted] = CAST(0 AS bit)
ORDER BY [v].[Name]
2025-05-09 15:12:34.555 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'VendorDetails' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:12:34.557 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'VendorDetails' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:12:34.559 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:34.561 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 6ms reading results.
2025-05-09 15:12:34.563 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:34.566 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 15:12:34.569 +05:30 [INF] Fetched 2 vendors
2025-05-09 15:12:34.570 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:12:34.572 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:12:34.573 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:12:34.574 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:12:34.575 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:12:34.576 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Entity.VendorDetails, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:12:34.578 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.VendorController.GetAllVendors (InventoryManagementSystem) in 50.3632ms
2025-05-09 15:12:34.580 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.VendorController.GetAllVendors (InventoryManagementSystem)'
2025-05-09 15:12:34.581 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:12:34.582 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:34.583 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 15:12:34.585 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Vendor/get-all-vendors - 200 null application/json; charset=utf-8 86.9831ms
2025-05-09 15:12:52.166 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Vendor/delete-vendor - application/json 19
2025-05-09 15:12:52.172 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Vendor/delete-vendor'
2025-05-09 15:12:52.173 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.VendorController.DeleteVendor (InventoryManagementSystem)' with route pattern 'api/Vendor/delete-vendor' is valid for the request path '/api/Vendor/delete-vendor'
2025-05-09 15:12:52.201 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.VendorController.DeleteVendor (InventoryManagementSystem)'
2025-05-09 15:12:52.214 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:12:52.219 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:12:52.223 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:12:52.225 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.VendorController.DeleteVendor (InventoryManagementSystem)'
2025-05-09 15:12:52.231 +05:30 [INF] Route matched with {action = "DeleteVendor", controller = "Vendor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteVendor(InventoryManagementSystem.Models.Request.DeleteVendorRequest) on controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem).
2025-05-09 15:12:52.234 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:12:52.235 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:12:52.240 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:12:52.242 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:12:52.243 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:12:52.245 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 15:12:52.246 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 15:12:52.247 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.DeleteVendorRequest' ...
2025-05-09 15:12:52.249 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.DeleteVendorRequest' using the name '' in request data ...
2025-05-09 15:12:52.250 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:12:52.252 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:00000009": started reading request body.
2025-05-09 15:12:52.256 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:00000009": done reading request body.
2025-05-09 15:12:52.259 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.DeleteVendorRequest'
2025-05-09 15:12:52.260 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.DeleteVendorRequest'.
2025-05-09 15:12:52.262 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.DeleteVendorRequest'.
2025-05-09 15:12:52.264 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.DeleteVendorRequest' ...
2025-05-09 15:12:52.267 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.DeleteVendorRequest'.
2025-05-09 15:12:52.276 +05:30 [INF] Deleting vendor with ID: 2
2025-05-09 15:12:52.278 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:12:52.281 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:12:52.281 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 15:12:52.282 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:52.283 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:52.285 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:12:52.293 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (8ms).
2025-05-09 15:12:52.295 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-05-09 15:12:52.299 +05:30 [DBG] Executing DbCommand [Parameters=[@__vendorId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [VendorDetails] AS [v]
WHERE [v].[VendorId] = @__vendorId_0 AND [v].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:12:52.309 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@__vendorId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [VendorDetails] AS [v]
WHERE [v].[VendorId] = @__vendorId_0 AND [v].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:12:52.312 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'VendorDetails' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:12:52.314 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:52.315 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-09 15:12:52.317 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:52.319 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:12:52.321 +05:30 [DBG] An entity of type 'VendorDetails' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:12:52.322 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 15:12:52.323 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 15:12:52.324 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 15:12:52.325 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:52.327 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:52.328 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:12:52.329 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:12:52.330 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:12:52.331 +05:30 [DBG] Executing DbCommand [Parameters=[@p14='?' (DbType = Int64), @p0='?' (Size = 500), @p1='?' (Size = 50), @p2='?' (Size = 50), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int64), @p5='?' (Size = 100), @p6='?' (DbType = Boolean), @p7='?' (Size = 50), @p8='?' (Size = 15), @p9='?' (Size = 10), @p10='?' (Size = 50), @p11='?' (Size = 100), @p12='?' (DbType = DateTime2), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [VendorDetails] SET [Address] = @p0, [City] = @p1, [Country] = @p2, [CreatedAt] = @p3, [CreatedBy] = @p4, [Email] = @p5, [IsDeleted] = @p6, [Name] = @p7, [Phone] = @p8, [Pincode] = @p9, [State] = @p10, [StoreName] = @p11, [UpdatedAt] = @p12, [UpdatedBy] = @p13
OUTPUT 1
WHERE [VendorId] = @p14;
2025-05-09 15:12:52.342 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@p14='?' (DbType = Int64), @p0='?' (Size = 500), @p1='?' (Size = 50), @p2='?' (Size = 50), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int64), @p5='?' (Size = 100), @p6='?' (DbType = Boolean), @p7='?' (Size = 50), @p8='?' (Size = 15), @p9='?' (Size = 10), @p10='?' (Size = 50), @p11='?' (Size = 100), @p12='?' (DbType = DateTime2), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [VendorDetails] SET [Address] = @p0, [City] = @p1, [Country] = @p2, [CreatedAt] = @p3, [CreatedBy] = @p4, [Email] = @p5, [IsDeleted] = @p6, [Name] = @p7, [Phone] = @p8, [Pincode] = @p9, [State] = @p10, [StoreName] = @p11, [UpdatedAt] = @p12, [UpdatedBy] = @p13
OUTPUT 1
WHERE [VendorId] = @p14;
2025-05-09 15:12:52.346 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:52.347 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 15:12:52.349 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:52.350 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:12:52.351 +05:30 [DBG] An entity of type 'VendorDetails' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:12:52.354 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 15:12:52.355 +05:30 [INF] Vendor deleted successfully: ID 2
2025-05-09 15:12:52.356 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:12:52.358 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:12:52.358 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:12:52.360 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:12:52.360 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:12:52.362 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:12:52.364 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.VendorController.DeleteVendor (InventoryManagementSystem) in 119.4631ms
2025-05-09 15:12:52.366 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.VendorController.DeleteVendor (InventoryManagementSystem)'
2025-05-09 15:12:52.367 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:12:52.368 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:12:52.369 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 15:12:52.371 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Vendor/delete-vendor - 200 null application/json; charset=utf-8 205.2318ms
2025-05-09 15:13:17.102 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/StockPurchaseOrder/PurchaseOrder - application/json 162
2025-05-09 15:13:17.115 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/PurchaseOrder'
2025-05-09 15:13:17.118 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/PurchaseOrder' is valid for the request path '/api/StockPurchaseOrder/PurchaseOrder'
2025-05-09 15:13:17.121 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 15:13:17.126 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:13:17.127 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:13:17.128 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:13:17.129 +05:30 [DBG] Authorization was successful.
2025-05-09 15:13:17.130 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 15:13:17.134 +05:30 [INF] Route matched with {action = "CreateStockPurchaseOrder", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateStockPurchaseOrder(InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 15:13:17.136 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:13:17.138 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:13:17.142 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:13:17.145 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:13:17.146 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:13:17.148 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:13:17.151 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:13:17.152 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' ...
2025-05-09 15:13:17.153 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' using the name '' in request data ...
2025-05-09 15:13:17.157 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:13:17.160 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:0000000B": started reading request body.
2025-05-09 15:13:17.161 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:0000000B": done reading request body.
2025-05-09 15:13:17.164 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'
2025-05-09 15:13:17.166 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 15:13:17.167 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 15:13:17.168 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' ...
2025-05-09 15:13:17.182 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 15:13:17.183 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 15:13:17.184 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 15:13:17.185 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:13:17.190 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:13:17.191 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 15:13:17.194 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 15:13:17.195 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 15:13:17.197 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem) in 48.8501ms
2025-05-09 15:13:17.199 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 15:13:17.200 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/StockPurchaseOrder/PurchaseOrder - 400 null application/problem+json; charset=utf-8 97.9002ms
2025-05-09 15:13:56.108 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/StockPurchaseOrder/PurchaseOrder - application/json 163
2025-05-09 15:13:56.122 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/PurchaseOrder'
2025-05-09 15:13:56.124 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/PurchaseOrder' is valid for the request path '/api/StockPurchaseOrder/PurchaseOrder'
2025-05-09 15:13:56.128 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 15:13:56.129 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:13:56.130 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:13:56.131 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:13:56.132 +05:30 [DBG] Authorization was successful.
2025-05-09 15:13:56.133 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 15:13:56.135 +05:30 [INF] Route matched with {action = "CreateStockPurchaseOrder", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateStockPurchaseOrder(InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 15:13:56.137 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:13:56.138 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:13:56.140 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:13:56.147 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:13:56.149 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:13:56.152 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:13:56.155 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:13:56.158 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' ...
2025-05-09 15:13:56.161 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' using the name '' in request data ...
2025-05-09 15:13:56.165 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:13:56.167 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:0000000D": started reading request body.
2025-05-09 15:13:56.169 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:0000000D": done reading request body.
2025-05-09 15:13:56.171 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'
2025-05-09 15:13:56.172 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 15:13:56.174 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 15:13:56.179 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' ...
2025-05-09 15:13:56.181 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 15:13:56.183 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 15:13:56.184 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 15:13:56.185 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:13:56.187 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:13:56.188 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 15:13:56.191 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 15:13:56.193 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 15:13:56.195 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem) in 43.1279ms
2025-05-09 15:13:56.196 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 15:13:56.197 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/StockPurchaseOrder/PurchaseOrder - 400 null application/problem+json; charset=utf-8 89.5314ms
2025-05-09 15:14:12.617 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/StockPurchaseOrder/PurchaseOrder - application/json 163
2025-05-09 15:14:12.629 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/PurchaseOrder'
2025-05-09 15:14:12.631 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/PurchaseOrder' is valid for the request path '/api/StockPurchaseOrder/PurchaseOrder'
2025-05-09 15:14:12.633 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 15:14:12.635 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:14:12.636 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:14:12.637 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:14:12.637 +05:30 [DBG] Authorization was successful.
2025-05-09 15:14:12.638 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 15:14:12.639 +05:30 [INF] Route matched with {action = "CreateStockPurchaseOrder", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateStockPurchaseOrder(InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 15:14:12.645 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:14:12.646 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:14:12.648 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:14:12.650 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:14:12.652 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:14:12.653 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:14:12.656 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:14:12.658 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' ...
2025-05-09 15:14:12.662 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' using the name '' in request data ...
2025-05-09 15:14:12.664 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:14:12.666 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:0000000F": started reading request body.
2025-05-09 15:14:12.667 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:0000000F": done reading request body.
2025-05-09 15:14:12.669 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'
2025-05-09 15:14:12.670 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 15:14:12.672 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 15:14:12.673 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' ...
2025-05-09 15:14:12.677 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 15:14:12.683 +05:30 [INF] Creating stock purchase order for VendorId: 2 by UserId: 2
2025-05-09 15:14:12.686 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:14:12.688 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:14:12.689 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 15:14:12.690 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:12.691 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:12.693 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:14:12.695 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:14:12.696 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:14:12.697 +05:30 [DBG] Executing DbCommand [Parameters=[@__vendorId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [VendorDetails] AS [v]
WHERE [v].[VendorId] = @__vendorId_0 AND [v].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:14:12.703 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__vendorId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [VendorDetails] AS [v]
WHERE [v].[VendorId] = @__vendorId_0 AND [v].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:14:12.706 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:12.707 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 15:14:12.710 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:12.712 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:14:12.715 +05:30 [WRN] Vendor not found for VendorId: 2
2025-05-09 15:14:12.716 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:14:12.720 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:14:12.721 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:14:12.723 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:14:12.724 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:14:12.726 +05:30 [INF] Executing NotFoundObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:14:12.728 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem) in 74.3175ms
2025-05-09 15:14:12.730 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 15:14:12.731 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:14:12.732 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:12.733 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 15:14:12.735 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/StockPurchaseOrder/PurchaseOrder - 404 null application/json; charset=utf-8 117.6251ms
2025-05-09 15:14:26.842 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/StockPurchaseOrder/PurchaseOrder - application/json 163
2025-05-09 15:14:26.849 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/PurchaseOrder'
2025-05-09 15:14:26.853 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/PurchaseOrder' is valid for the request path '/api/StockPurchaseOrder/PurchaseOrder'
2025-05-09 15:14:26.863 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 15:14:26.867 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:14:26.868 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:14:26.869 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:14:26.870 +05:30 [DBG] Authorization was successful.
2025-05-09 15:14:26.871 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 15:14:26.873 +05:30 [INF] Route matched with {action = "CreateStockPurchaseOrder", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateStockPurchaseOrder(InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 15:14:26.876 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:14:26.878 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:14:26.879 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:14:26.882 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:14:26.884 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:14:26.885 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:14:26.886 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:14:26.887 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' ...
2025-05-09 15:14:26.890 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' using the name '' in request data ...
2025-05-09 15:14:26.896 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:14:26.900 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:00000011": started reading request body.
2025-05-09 15:14:26.902 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:00000011": done reading request body.
2025-05-09 15:14:26.904 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'
2025-05-09 15:14:26.906 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 15:14:26.910 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 15:14:26.915 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' ...
2025-05-09 15:14:26.918 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 15:14:26.920 +05:30 [INF] Creating stock purchase order for VendorId: 1 by UserId: 2
2025-05-09 15:14:26.922 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:14:26.924 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:14:26.925 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 15:14:26.928 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:26.930 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:26.931 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:14:26.933 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:14:26.934 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:14:26.936 +05:30 [DBG] Executing DbCommand [Parameters=[@__vendorId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [VendorDetails] AS [v]
WHERE [v].[VendorId] = @__vendorId_0 AND [v].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:14:26.940 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[@__vendorId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [VendorDetails] AS [v]
WHERE [v].[VendorId] = @__vendorId_0 AND [v].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:14:26.947 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'VendorDetails' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:14:26.949 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:26.950 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-09 15:14:26.952 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:26.953 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:14:26.961 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StockPurchaseOrders.StockPurchaseOrderId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:14:26.986 +05:30 [DBG] The navigation 'StockPurchaseOrders.VendorDetails' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:14:26.997 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:14:27.002 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StockPurchaseOrderItems.StockPurchaseOrderItemId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:14:27.017 +05:30 [DBG] The navigation 'StockPurchaseOrderItems.StockPurchaseOrder' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:14:27.021 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:14:27.022 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 15:14:27.025 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 15:14:27.039 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 15:14:27.041 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:27.043 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:27.046 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-09 15:14:27.048 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-09 15:14:27.049 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:14:27.050 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:14:27.052 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:14:27.053 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int64), @p8='?' (DbType = DateTime2), @p9='?' (DbType = Int32), @p10='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StockPurchaseOrders] ([NumberOfItem], [OrderRecivedDate], [OrderStatusId], [PaymentDate], [PaymentMethodId], [PaymentStatusId], [PaymentTypeId], [PurchaseBy], [PurchaseDate], [TotalNumberOfQuantity], [TotalPrice], [UpdatedAt], [UpdatedBy], [VendorId])
OUTPUT INSERTED.[StockPurchaseOrderId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13);
2025-05-09 15:14:27.069 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int64), @p8='?' (DbType = DateTime2), @p9='?' (DbType = Int32), @p10='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StockPurchaseOrders] ([NumberOfItem], [OrderRecivedDate], [OrderStatusId], [PaymentDate], [PaymentMethodId], [PaymentStatusId], [PaymentTypeId], [PurchaseBy], [PurchaseDate], [TotalNumberOfQuantity], [TotalPrice], [UpdatedAt], [UpdatedBy], [VendorId])
OUTPUT INSERTED.[StockPurchaseOrderId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13);
2025-05-09 15:14:27.078 +05:30 [DBG] The foreign key property 'StockPurchaseOrders.StockPurchaseOrderId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:14:27.082 +05:30 [DBG] The foreign key property 'StockPurchaseOrderItems.StockPurchaseOrderId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:14:27.084 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:27.086 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 11ms reading results.
2025-05-09 15:14:27.088 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:14:27.089 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:14:27.091 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:14:27.092 +05:30 [DBG] Executing DbCommand [Parameters=[@p14='?' (DbType = Int32), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Int64), @p17='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p18='?' (DbType = Int32), @p19='?' (DbType = Int64), @p20='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StockPurchaseOrderItems] ([OrderItemStatus], [OrderRecivedDate], [ProductId], [ProductPrice], [Quantity], [StockPurchaseOrderId], [TotalPrice])
OUTPUT INSERTED.[StockPurchaseOrderItemId]
VALUES (@p14, @p15, @p16, @p17, @p18, @p19, @p20);
2025-05-09 15:14:27.103 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@p14='?' (DbType = Int32), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Int64), @p17='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p18='?' (DbType = Int32), @p19='?' (DbType = Int64), @p20='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StockPurchaseOrderItems] ([OrderItemStatus], [OrderRecivedDate], [ProductId], [ProductPrice], [Quantity], [StockPurchaseOrderId], [TotalPrice])
OUTPUT INSERTED.[StockPurchaseOrderItemId]
VALUES (@p14, @p15, @p16, @p17, @p18, @p19, @p20);
2025-05-09 15:14:27.116 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:27.118 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 9ms reading results.
2025-05-09 15:14:27.121 +05:30 [DBG] Disposing transaction.
2025-05-09 15:14:27.122 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:27.123 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:14:27.133 +05:30 [ERR] An exception occurred in the database while saving changes for context type 'InventoryManagementSystem.Data.Context.ApplicationDbContext'.
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_StockPurchaseOrderItems_Products_ProductId". The conflict occurred in database "InventoryManagement", table "dbo.Products", column 'ProductId'.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)
   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
ClientConnectionId:7ed2b6a6-d61b-408f-bd91-b537d5ce04a8
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_StockPurchaseOrderItems_Products_ProductId". The conflict occurred in database "InventoryManagement", table "dbo.Products", column 'ProductId'.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)
   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
ClientConnectionId:7ed2b6a6-d61b-408f-bd91-b537d5ce04a8
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
2025-05-09 15:14:27.306 +05:30 [ERR] Error creating stock purchase order for VendorId: 1
Microsoft.EntityFrameworkCore.DbUpdateException: An error occurred while saving the entity changes. See the inner exception for details.
 ---> Microsoft.Data.SqlClient.SqlException (0x80131904): The INSERT statement conflicted with the FOREIGN KEY constraint "FK_StockPurchaseOrderItems_Products_ProductId". The conflict occurred in database "InventoryManagement", table "dbo.Products", column 'ProductId'.
   at Microsoft.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   at Microsoft.Data.SqlClient.SqlDataReader.TryHasMoreRows(Boolean& moreRows)
   at Microsoft.Data.SqlClient.SqlDataReader.TryReadInternal(Boolean setTimeout, Boolean& more)
   at Microsoft.Data.SqlClient.SqlDataReader.ReadAsyncExecute(Task task, Object state)
   at Microsoft.Data.SqlClient.SqlDataReader.InvokeAsyncCall[T](SqlDataReaderBaseAsyncCallContext`1 context)
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
ClientConnectionId:7ed2b6a6-d61b-408f-bd91-b537d5ce04a8
Error Number:547,State:0,Class:16
   --- End of inner exception stack trace ---
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeResultSetAsync(Int32 startCommandIndex, RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch.ConsumeAsync(RelationalDataReader reader, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Update.Internal.SqlServerModificationCommandBatch.ExecuteAsync(IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(IEnumerable`1 commandBatches, IRelationalConnection connection, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(IList`1 entries, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(IList`1 entriesToSave, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(StateManager stateManager, Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(Boolean acceptAllChangesOnSuccess, CancellationToken cancellationToken)
   at InventoryManagementSystem.DataService.Implementations.StockPurchaseOrderDataService.AddStockPurchaseOrderAsync(StockPurchaseOrders order) in C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem\DataService\Implementations\StockPurchaseOrderDataService.cs:line 20
   at InventoryManagementSystem.BussinessService.Implemantations.StockPurchaseOrderService.CreateStockPurchaseOrderAsync(StockPurchaseOrderRequest request, Int64 userId) in C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem\BussinessService\Implemantations\StockPurchaseOrderService.cs:line 398
2025-05-09 15:14:27.353 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:14:27.356 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:14:27.357 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:14:27.358 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:14:27.360 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:14:27.362 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:14:27.363 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem) in 478.481ms
2025-05-09 15:14:27.366 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 15:14:27.368 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:14:27.369 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:27.370 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 15:14:27.372 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/StockPurchaseOrder/PurchaseOrder - 500 null application/json; charset=utf-8 530.5654ms
2025-05-09 15:14:59.536 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/StockPurchaseOrder/PurchaseOrder - application/json 162
2025-05-09 15:14:59.555 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/PurchaseOrder'
2025-05-09 15:14:59.560 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/PurchaseOrder' is valid for the request path '/api/StockPurchaseOrder/PurchaseOrder'
2025-05-09 15:14:59.564 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 15:14:59.567 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:14:59.571 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:14:59.572 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:14:59.574 +05:30 [DBG] Authorization was successful.
2025-05-09 15:14:59.575 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 15:14:59.577 +05:30 [INF] Route matched with {action = "CreateStockPurchaseOrder", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateStockPurchaseOrder(InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 15:14:59.583 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:14:59.584 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:14:59.586 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:14:59.588 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:14:59.589 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:14:59.591 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:14:59.592 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:14:59.593 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' ...
2025-05-09 15:14:59.596 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' using the name '' in request data ...
2025-05-09 15:14:59.598 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:14:59.600 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:00000013": started reading request body.
2025-05-09 15:14:59.601 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:00000013": done reading request body.
2025-05-09 15:14:59.603 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'
2025-05-09 15:14:59.605 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 15:14:59.607 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 15:14:59.609 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' ...
2025-05-09 15:14:59.613 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 15:14:59.617 +05:30 [INF] Creating stock purchase order for VendorId: 1 by UserId: 2
2025-05-09 15:14:59.618 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:14:59.620 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:14:59.621 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 15:14:59.622 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:59.624 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:59.625 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:14:59.626 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:14:59.627 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:14:59.629 +05:30 [DBG] Executing DbCommand [Parameters=[@__vendorId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [VendorDetails] AS [v]
WHERE [v].[VendorId] = @__vendorId_0 AND [v].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:14:59.642 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@__vendorId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [VendorDetails] AS [v]
WHERE [v].[VendorId] = @__vendorId_0 AND [v].[IsDeleted] = CAST(0 AS bit)
2025-05-09 15:14:59.649 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'VendorDetails' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:14:59.651 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:59.652 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 15:14:59.654 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:59.655 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:14:59.656 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StockPurchaseOrders.StockPurchaseOrderId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:14:59.658 +05:30 [DBG] The navigation 'StockPurchaseOrders.VendorDetails' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:14:59.659 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:14:59.661 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StockPurchaseOrderItems.StockPurchaseOrderItemId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:14:59.665 +05:30 [DBG] The navigation 'StockPurchaseOrderItems.StockPurchaseOrder' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:14:59.666 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:14:59.668 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 15:14:59.669 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 15:14:59.670 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 15:14:59.671 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:59.673 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:59.674 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-09 15:14:59.675 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-09 15:14:59.676 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:14:59.677 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:14:59.679 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 15:14:59.682 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int64), @p8='?' (DbType = DateTime2), @p9='?' (DbType = Int32), @p10='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StockPurchaseOrders] ([NumberOfItem], [OrderRecivedDate], [OrderStatusId], [PaymentDate], [PaymentMethodId], [PaymentStatusId], [PaymentTypeId], [PurchaseBy], [PurchaseDate], [TotalNumberOfQuantity], [TotalPrice], [UpdatedAt], [UpdatedBy], [VendorId])
OUTPUT INSERTED.[StockPurchaseOrderId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13);
2025-05-09 15:14:59.691 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int64), @p8='?' (DbType = DateTime2), @p9='?' (DbType = Int32), @p10='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StockPurchaseOrders] ([NumberOfItem], [OrderRecivedDate], [OrderStatusId], [PaymentDate], [PaymentMethodId], [PaymentStatusId], [PaymentTypeId], [PurchaseBy], [PurchaseDate], [TotalNumberOfQuantity], [TotalPrice], [UpdatedAt], [UpdatedBy], [VendorId])
OUTPUT INSERTED.[StockPurchaseOrderId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13);
2025-05-09 15:14:59.695 +05:30 [DBG] The foreign key property 'StockPurchaseOrders.StockPurchaseOrderId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:14:59.698 +05:30 [DBG] The foreign key property 'StockPurchaseOrderItems.StockPurchaseOrderId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:14:59.699 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:59.701 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 5ms reading results.
2025-05-09 15:14:59.702 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:14:59.703 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:14:59.705 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:14:59.706 +05:30 [DBG] Executing DbCommand [Parameters=[@p14='?' (DbType = Int32), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Int64), @p17='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p18='?' (DbType = Int32), @p19='?' (DbType = Int64), @p20='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StockPurchaseOrderItems] ([OrderItemStatus], [OrderRecivedDate], [ProductId], [ProductPrice], [Quantity], [StockPurchaseOrderId], [TotalPrice])
OUTPUT INSERTED.[StockPurchaseOrderItemId]
VALUES (@p14, @p15, @p16, @p17, @p18, @p19, @p20);
2025-05-09 15:14:59.716 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@p14='?' (DbType = Int32), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Int64), @p17='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p18='?' (DbType = Int32), @p19='?' (DbType = Int64), @p20='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StockPurchaseOrderItems] ([OrderItemStatus], [OrderRecivedDate], [ProductId], [ProductPrice], [Quantity], [StockPurchaseOrderId], [TotalPrice])
OUTPUT INSERTED.[StockPurchaseOrderItemId]
VALUES (@p14, @p15, @p16, @p17, @p18, @p19, @p20);
2025-05-09 15:14:59.720 +05:30 [DBG] The foreign key property 'StockPurchaseOrderItems.StockPurchaseOrderItemId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:14:59.722 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:59.723 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-09 15:14:59.729 +05:30 [DBG] Committing transaction.
2025-05-09 15:14:59.736 +05:30 [DBG] Committed transaction.
2025-05-09 15:14:59.737 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:59.739 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:14:59.741 +05:30 [DBG] Disposing transaction.
2025-05-09 15:14:59.743 +05:30 [DBG] An entity of type 'StockPurchaseOrders' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:14:59.748 +05:30 [DBG] An entity of type 'StockPurchaseOrderItems' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:14:59.750 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 2 entities written to the database.
2025-05-09 15:14:59.752 +05:30 [INF] Stock purchase order created successfully for VendorId: 1
2025-05-09 15:14:59.753 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:14:59.756 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:14:59.757 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:14:59.758 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:14:59.759 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:14:59.761 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:14:59.764 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem) in 173.4279ms
2025-05-09 15:14:59.770 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 15:14:59.773 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:14:59.774 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:14:59.775 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 15:14:59.777 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/StockPurchaseOrder/PurchaseOrder - 201 null application/json; charset=utf-8 241.2884ms
2025-05-09 15:15:18.779 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/StockPurchaseOrder/3 - null null
2025-05-09 15:15:18.785 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/3'
2025-05-09 15:15:18.787 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/{orderId}' is valid for the request path '/api/StockPurchaseOrder/3'
2025-05-09 15:15:18.789 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)'
2025-05-09 15:15:18.790 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:15:18.791 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:15:18.792 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:15:18.793 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)'
2025-05-09 15:15:18.797 +05:30 [INF] Route matched with {action = "GetStockPurchaseOrderDetails", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStockPurchaseOrderDetails(Int64) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 15:15:18.801 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:15:18.802 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:15:18.803 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:15:18.805 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:15:18.806 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:15:18.808 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:15:18.809 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:15:18.811 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' ...
2025-05-09 15:15:18.813 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' using the name 'orderId' in request data ...
2025-05-09 15:15:18.816 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-09 15:15:18.817 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-09 15:15:18.818 +05:30 [DBG] Attempting to validate the bound parameter 'orderId' of type 'System.Int64' ...
2025-05-09 15:15:18.819 +05:30 [DBG] Done attempting to validate the bound parameter 'orderId' of type 'System.Int64'.
2025-05-09 15:15:18.822 +05:30 [INF] Fetching stock purchase order details for OrderId: 3
2025-05-09 15:15:18.824 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:15:18.827 +05:30 [DBG] Compiling query expression: 
'DbSet<StockPurchaseOrders>()
    .Include(o => o.VendorDetails)
    .Include(o => o.StockPurchaseOrderItems)
    .ThenInclude(i => i.Product)
    .FirstOrDefault(o => o.StockPurchaseOrderId == __orderId_0)'
2025-05-09 15:15:18.830 +05:30 [DBG] Including navigation: 'StockPurchaseOrders.VendorDetails'.
2025-05-09 15:15:18.832 +05:30 [DBG] Including navigation: 'StockPurchaseOrders.StockPurchaseOrderItems'.
2025-05-09 15:15:18.834 +05:30 [DBG] Including navigation: 'StockPurchaseOrderItems.Product'.
2025-05-09 15:15:18.858 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<StockPurchaseOrders>(
    asyncEnumerable: SingleQueryingEnumerable.Create<StockPurchaseOrders>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrders.StockPurchaseOrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: StockPurchaseOrders.NumberOfItem (int) Required, 1], [Property: StockPurchaseOrders.OrderRecivedDate (DateTime) Required, 2], [Property: StockPurchaseOrders.OrderStatusId (int) Required FK Index, 3], [Property: StockPurchaseOrders.PaymentDate (DateTime) Required, 4], [Property: StockPurchaseOrders.PaymentMethodId (int) Required FK Index, 5], [Property: StockPurchaseOrders.PaymentStatusId (int) Required FK Index, 6], [Property: StockPurchaseOrders.PaymentTypeId (int) Required FK Index, 7], [Property: StockPurchaseOrders.PurchaseBy (long) Required, 8], [Property: StockPurchaseOrders.PurchaseDate (DateTime) Required, 9], [Property: StockPurchaseOrders.TotalNumberOfQuantity (int) Required, 10], [Property: StockPurchaseOrders.TotalPrice (decimal) Required, 11], [Property: StockPurchaseOrders.UpdatedAt (DateTime) Required, 12], [Property: StockPurchaseOrders.UpdatedBy (long) Required FK Index, 13], [Property: StockPurchaseOrders.VendorId (long) Required FK Index, 14] }
                1 -> Dictionary<IProperty, int> { [Property: VendorDetails.VendorId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: VendorDetails.Address (string) Required MaxLength(500), 16], [Property: VendorDetails.City (string) Required MaxLength(50), 17], [Property: VendorDetails.Country (string) Required MaxLength(50), 18], [Property: VendorDetails.CreatedAt (DateTime) Required, 19], [Property: VendorDetails.CreatedBy (long) Required FK Index, 20], [Property: VendorDetails.Email (string) Required MaxLength(100), 21], [Property: VendorDetails.IsDeleted (bool) Required, 22], [Property: VendorDetails.Name (string) Required MaxLength(50), 23], [Property: VendorDetails.Phone (string) Required MaxLength(15), 24], [Property: VendorDetails.Pincode (string) Required MaxLength(10), 25], [Property: VendorDetails.State (string) Required MaxLength(50), 26], [Property: VendorDetails.StoreName (string) Required MaxLength(100), 27], [Property: VendorDetails.UpdatedAt (DateTime) Required, 28], [Property: VendorDetails.UpdatedBy (long) Required, 29] }
                2 -> 0
                3 -> 15
                4 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrderItems.StockPurchaseOrderItemId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 30], [Property: StockPurchaseOrderItems.OrderItemStatus (int) Required FK Index, 31], [Property: StockPurchaseOrderItems.OrderRecivedDate (DateTime) Required, 32], [Property: StockPurchaseOrderItems.ProductId (long) Required FK Index, 33], [Property: StockPurchaseOrderItems.ProductPrice (decimal) Required, 34], [Property: StockPurchaseOrderItems.Quantity (int) Required, 35], [Property: StockPurchaseOrderItems.StockPurchaseOrderId (long) Required FK Index, 36], [Property: StockPurchaseOrderItems.TotalPrice (decimal) Required, 37] }
                5 -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 38], [Property: Products.AvailableQuantity (int) Required, 39], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 40], [Property: Products.CreatedAt (DateTime) Required, 41], [Property: Products.CreatedBy (long) Required FK Index, 42], [Property: Products.Description (string) MaxLength(225), 43], [Property: Products.IsDeleted (bool) Required, 44], [Property: Products.LastRestockAt (DateTime) Required, 45], [Property: Products.MinimumRequiredQuantity (int) Required, 46], [Property: Products.Name (string) Required MaxLength(100), 47], [Property: Products.Price (decimal) Required, 48], [Property: Products.ProductStatus (int) Required, 49], [Property: Products.UpdatedAt (DateTime) Required, 50], [Property: Products.UpdatedBy (long) Required FK Index, 51] }
                6 -> 30
                7 -> 38
            SELECT s1.StockPurchaseOrderId, s1.NumberOfItem, s1.OrderRecivedDate, s1.OrderStatusId, s1.PaymentDate, s1.PaymentMethodId, s1.PaymentStatusId, s1.PaymentTypeId, s1.PurchaseBy, s1.PurchaseDate, s1.TotalNumberOfQuantity, s1.TotalPrice, s1.UpdatedAt, s1.UpdatedBy, s1.VendorId, s1.VendorId0, s1.Address, s1.City, s1.Country, s1.CreatedAt, s1.CreatedBy, s1.Email, s1.IsDeleted, s1.Name, s1.Phone, s1.Pincode, s1.State, s1.StoreName, s1.UpdatedAt0, s1.UpdatedBy0, s2.StockPurchaseOrderItemId, s2.OrderItemStatus, s2.OrderRecivedDate, s2.ProductId, s2.ProductPrice, s2.Quantity, s2.StockPurchaseOrderId, s2.TotalPrice, s2.ProductId0, s2.AvailableQuantity, s2.CategoryId, s2.CreatedAt, s2.CreatedBy, s2.Description, s2.IsDeleted, s2.LastRestockAt, s2.MinimumRequiredQuantity, s2.Name, s2.Price, s2.ProductStatus, s2.UpdatedAt, s2.UpdatedBy
            FROM 
            (
                SELECT TOP(1) s.StockPurchaseOrderId, s.NumberOfItem, s.OrderRecivedDate, s.OrderStatusId, s.PaymentDate, s.PaymentMethodId, s.PaymentStatusId, s.PaymentTypeId, s.PurchaseBy, s.PurchaseDate, s.TotalNumberOfQuantity, s.TotalPrice, s.UpdatedAt, s.UpdatedBy, s.VendorId, v.VendorId AS VendorId0, v.Address, v.City, v.Country, v.CreatedAt, v.CreatedBy, v.Email, v.IsDeleted, v.Name, v.Phone, v.Pincode, v.State, v.StoreName, v.UpdatedAt AS UpdatedAt0, v.UpdatedBy AS UpdatedBy0
                FROM StockPurchaseOrders AS s
                INNER JOIN VendorDetails AS v ON s.VendorId == v.VendorId
                WHERE s.StockPurchaseOrderId == @__orderId_0
            ) AS s1
            LEFT JOIN 
            (
                SELECT s0.StockPurchaseOrderItemId, s0.OrderItemStatus, s0.OrderRecivedDate, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.StockPurchaseOrderId, s0.TotalPrice, p.ProductId AS ProductId0, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
                FROM StockPurchaseOrderItems AS s0
                INNER JOIN Products AS p ON s0.ProductId == p.ProductId
            ) AS s2 ON s1.StockPurchaseOrderId == s2.StockPurchaseOrderId
            ORDER BY s1.StockPurchaseOrderId ASC, s1.VendorId0 ASC, s2.StockPurchaseOrderItemId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrders.StockPurchaseOrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: StockPurchaseOrders.NumberOfItem (int) Required, 1], [Property: StockPurchaseOrders.OrderRecivedDate (DateTime) Required, 2], [Property: StockPurchaseOrders.OrderStatusId (int) Required FK Index, 3], [Property: StockPurchaseOrders.PaymentDate (DateTime) Required, 4], [Property: StockPurchaseOrders.PaymentMethodId (int) Required FK Index, 5], [Property: StockPurchaseOrders.PaymentStatusId (int) Required FK Index, 6], [Property: StockPurchaseOrders.PaymentTypeId (int) Required FK Index, 7], [Property: StockPurchaseOrders.PurchaseBy (long) Required, 8], [Property: StockPurchaseOrders.PurchaseDate (DateTime) Required, 9], [Property: StockPurchaseOrders.TotalNumberOfQuantity (int) Required, 10], [Property: StockPurchaseOrders.TotalPrice (decimal) Required, 11], [Property: StockPurchaseOrders.UpdatedAt (DateTime) Required, 12], [Property: StockPurchaseOrders.UpdatedBy (long) Required FK Index, 13], [Property: StockPurchaseOrders.VendorId (long) Required FK Index, 14] }
                1 -> Dictionary<IProperty, int> { [Property: VendorDetails.VendorId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: VendorDetails.Address (string) Required MaxLength(500), 16], [Property: VendorDetails.City (string) Required MaxLength(50), 17], [Property: VendorDetails.Country (string) Required MaxLength(50), 18], [Property: VendorDetails.CreatedAt (DateTime) Required, 19], [Property: VendorDetails.CreatedBy (long) Required FK Index, 20], [Property: VendorDetails.Email (string) Required MaxLength(100), 21], [Property: VendorDetails.IsDeleted (bool) Required, 22], [Property: VendorDetails.Name (string) Required MaxLength(50), 23], [Property: VendorDetails.Phone (string) Required MaxLength(15), 24], [Property: VendorDetails.Pincode (string) Required MaxLength(10), 25], [Property: VendorDetails.State (string) Required MaxLength(50), 26], [Property: VendorDetails.StoreName (string) Required MaxLength(100), 27], [Property: VendorDetails.UpdatedAt (DateTime) Required, 28], [Property: VendorDetails.UpdatedBy (long) Required, 29] }
                2 -> 0
                3 -> 15
                4 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrderItems.StockPurchaseOrderItemId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 30], [Property: StockPurchaseOrderItems.OrderItemStatus (int) Required FK Index, 31], [Property: StockPurchaseOrderItems.OrderRecivedDate (DateTime) Required, 32], [Property: StockPurchaseOrderItems.ProductId (long) Required FK Index, 33], [Property: StockPurchaseOrderItems.ProductPrice (decimal) Required, 34], [Property: StockPurchaseOrderItems.Quantity (int) Required, 35], [Property: StockPurchaseOrderItems.StockPurchaseOrderId (long) Required FK Index, 36], [Property: StockPurchaseOrderItems.TotalPrice (decimal) Required, 37] }
                5 -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 38], [Property: Products.AvailableQuantity (int) Required, 39], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 40], [Property: Products.CreatedAt (DateTime) Required, 41], [Property: Products.CreatedBy (long) Required FK Index, 42], [Property: Products.Description (string) MaxLength(225), 43], [Property: Products.IsDeleted (bool) Required, 44], [Property: Products.LastRestockAt (DateTime) Required, 45], [Property: Products.MinimumRequiredQuantity (int) Required, 46], [Property: Products.Name (string) Required MaxLength(100), 47], [Property: Products.Price (decimal) Required, 48], [Property: Products.ProductStatus (int) Required, 49], [Property: Products.UpdatedAt (DateTime) Required, 50], [Property: Products.UpdatedBy (long) Required FK Index, 51] }
                6 -> 30
                7 -> 38
            SELECT s1.StockPurchaseOrderId, s1.NumberOfItem, s1.OrderRecivedDate, s1.OrderStatusId, s1.PaymentDate, s1.PaymentMethodId, s1.PaymentStatusId, s1.PaymentTypeId, s1.PurchaseBy, s1.PurchaseDate, s1.TotalNumberOfQuantity, s1.TotalPrice, s1.UpdatedAt, s1.UpdatedBy, s1.VendorId, s1.VendorId0, s1.Address, s1.City, s1.Country, s1.CreatedAt, s1.CreatedBy, s1.Email, s1.IsDeleted, s1.Name, s1.Phone, s1.Pincode, s1.State, s1.StoreName, s1.UpdatedAt0, s1.UpdatedBy0, s2.StockPurchaseOrderItemId, s2.OrderItemStatus, s2.OrderRecivedDate, s2.ProductId, s2.ProductPrice, s2.Quantity, s2.StockPurchaseOrderId, s2.TotalPrice, s2.ProductId0, s2.AvailableQuantity, s2.CategoryId, s2.CreatedAt, s2.CreatedBy, s2.Description, s2.IsDeleted, s2.LastRestockAt, s2.MinimumRequiredQuantity, s2.Name, s2.Price, s2.ProductStatus, s2.UpdatedAt, s2.UpdatedBy
            FROM 
            (
                SELECT TOP(1) s.StockPurchaseOrderId, s.NumberOfItem, s.OrderRecivedDate, s.OrderStatusId, s.PaymentDate, s.PaymentMethodId, s.PaymentStatusId, s.PaymentTypeId, s.PurchaseBy, s.PurchaseDate, s.TotalNumberOfQuantity, s.TotalPrice, s.UpdatedAt, s.UpdatedBy, s.VendorId, v.VendorId AS VendorId0, v.Address, v.City, v.Country, v.CreatedAt, v.CreatedBy, v.Email, v.IsDeleted, v.Name, v.Phone, v.Pincode, v.State, v.StoreName, v.UpdatedAt AS UpdatedAt0, v.UpdatedBy AS UpdatedBy0
                FROM StockPurchaseOrders AS s
                INNER JOIN VendorDetails AS v ON s.VendorId == v.VendorId
                WHERE s.StockPurchaseOrderId == @__orderId_0
            ) AS s1
            LEFT JOIN 
            (
                SELECT s0.StockPurchaseOrderItemId, s0.OrderItemStatus, s0.OrderRecivedDate, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.StockPurchaseOrderId, s0.TotalPrice, p.ProductId AS ProductId0, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
                FROM StockPurchaseOrderItems AS s0
                INNER JOIN Products AS p ON s0.ProductId == p.ProductId
            ) AS s2 ON s1.StockPurchaseOrderId == s2.StockPurchaseOrderId
            ORDER BY s1.StockPurchaseOrderId ASC, s1.VendorId0 ASC, s2.StockPurchaseOrderItemId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                StockPurchaseOrders entity;
                VendorDetails entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    StockPurchaseOrders instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(StockPurchaseOrders);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: StockPurchaseOrders.StockPurchaseOrderId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (StockPurchaseOrders)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")]: 
                                {
                                    return 
                                    {
                                        StockPurchaseOrders instance;
                                        instance = new StockPurchaseOrders();
                                        instance.<StockPurchaseOrderId>k__BackingField = dataReader.GetInt64(0);
                                        instance.<NumberOfItem>k__BackingField = dataReader.GetInt32(1);
                                        instance.<OrderRecivedDate>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<OrderStatusId>k__BackingField = dataReader.GetInt32(3);
                                        instance.<PaymentDate>k__BackingField = dataReader.GetDateTime(4);
                                        instance.<PaymentMethodId>k__BackingField = dataReader.GetInt32(5);
                                        instance.<PaymentStatusId>k__BackingField = dataReader.GetInt32(6);
                                        instance.<PaymentTypeId>k__BackingField = dataReader.GetInt32(7);
                                        instance.<PurchaseBy>k__BackingField = dataReader.GetInt64(8);
                                        instance.<PurchaseDate>k__BackingField = dataReader.GetDateTime(9);
                                        instance.<TotalNumberOfQuantity>k__BackingField = dataReader.GetInt32(10);
                                        instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(11);
                                        instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                        instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                        instance.<VendorId>k__BackingField = dataReader.GetInt64(14);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(StockPurchaseOrders)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                entity = 
                {
                    MaterializationContext materializationContext2;
                    IEntityType entityType2;
                    VendorDetails instance2;
                    InternalEntityEntry entry2;
                    bool hasNullKey2;
                    materializationContext2 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance2 = default(VendorDetails);
                    entry2 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: VendorDetails.VendorId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt64(15) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey2);
                    !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                    {
                        entityType2 = entry2.EntityType;
                        return instance2 = (VendorDetails)entry2.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot2;
                        shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType2 = [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")];
                        instance2 = switch (entityType2)
                        {
                            case [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")]: 
                                {
                                    return 
                                    {
                                        VendorDetails instance;
                                        instance = new VendorDetails();
                                        instance.<VendorId>k__BackingField = dataReader.GetInt64(15);
                                        instance.<Address>k__BackingField = dataReader.GetString(16);
                                        instance.<City>k__BackingField = dataReader.GetString(17);
                                        instance.<Country>k__BackingField = dataReader.GetString(18);
                                        instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(19);
                                        instance.<CreatedBy>k__BackingField = dataReader.GetInt64(20);
                                        instance.<Email>k__BackingField = dataReader.GetString(21);
                                        instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(22);
                                        instance.<Name>k__BackingField = dataReader.GetString(23);
                                        instance.<Phone>k__BackingField = dataReader.GetString(24);
                                        instance.<Pincode>k__BackingField = dataReader.GetString(25);
                                        instance.<State>k__BackingField = dataReader.GetString(26);
                                        instance.<StoreName>k__BackingField = dataReader.GetString(27);
                                        instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(28);
                                        instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(29);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext2.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(VendorDetails)
                        }
                        ;
                        entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType2, 
                            entity: instance2, 
                            snapshot: shadowSnapshot2);
                        return instance2;
                    } : default(void);
                    return instance2;
                };
                resultContext.Values = new object[]
                { 
                    entity, 
                    entity 
                };
                ShaperProcessingExpressionVisitor.IncludeReference<StockPurchaseOrders, StockPurchaseOrders, VendorDetails>(
                    queryContext: queryContext, 
                    entity: (StockPurchaseOrders)(resultContext.Values[0]), 
                    relatedEntity: (VendorDetails)(resultContext.Values[1]), 
                    navigation: [LIFTABLE Constant: Navigation: StockPurchaseOrders.VendorDetails (VendorDetails) ToPrincipal VendorDetails | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("VendorDetails")], 
                    inverseNavigation: default(INavigation), 
                    fixup: (namelessParameter{7}, namelessParameter{8}) => 
                    {
                        return namelessParameter{7}.<VendorDetails>k__BackingField = namelessParameter{8};
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<StockPurchaseOrders, StockPurchaseOrders>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (StockPurchaseOrders)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(long?)dataReader.GetInt64(0), 
                        (object)(long?)dataReader.GetInt64(15) 
                    }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(long?)dataReader.GetInt64(0), 
                        (object)(long?)dataReader.GetInt64(15) 
                    }], 
                    navigation: [LIFTABLE Constant: Navigation: StockPurchaseOrders.StockPurchaseOrderItems (ICollection<StockPurchaseOrderItems>) Collection ToDependent StockPurchaseOrderItems Inverse: StockPurchaseOrder | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<StockPurchaseOrders, ICollection<StockPurchaseOrderItems>, StockPurchaseOrderItems> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<StockPurchaseOrders, StockPurchaseOrderItems>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(long?)dataReader.GetInt64(0), 
                    (object)(long?)dataReader.GetInt64(15) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(long?)dataReader.GetInt64(0), 
                    (object)(long?)dataReader.GetInt64(15) 
                }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)dataReader.IsDBNull(30) ? default(int?) : (int?)dataReader.GetInt32(30), 
                    (object)dataReader.IsDBNull(38) ? default(long?) : (long?)dataReader.GetInt64(38) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right, 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right 
                }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right, 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right 
                }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    StockPurchaseOrderItems entity;
                    Products entity;
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        StockPurchaseOrderItems instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(StockPurchaseOrderItems);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: StockPurchaseOrderItems.StockPurchaseOrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(30) ? default(object) : (object)dataReader.GetInt32(30) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (StockPurchaseOrderItems)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")]: 
                                    {
                                        return 
                                        {
                                            StockPurchaseOrderItems instance;
                                            instance = new StockPurchaseOrderItems();
                                            instance.<StockPurchaseOrderItemId>k__BackingField = dataReader.IsDBNull(30) ? default(int) : dataReader.GetInt32(30);
                                            instance.<OrderItemStatus>k__BackingField = dataReader.IsDBNull(31) ? default(int) : dataReader.GetInt32(31);
                                            instance.<OrderRecivedDate>k__BackingField = dataReader.IsDBNull(32) ? default(DateTime) : dataReader.GetDateTime(32);
                                            instance.<ProductId>k__BackingField = dataReader.IsDBNull(33) ? default(long) : dataReader.GetInt64(33);
                                            instance.<ProductPrice>k__BackingField = dataReader.IsDBNull(34) ? default(decimal) : dataReader.GetDecimal(34);
                                            instance.<Quantity>k__BackingField = dataReader.IsDBNull(35) ? default(int) : dataReader.GetInt32(35);
                                            instance.<StockPurchaseOrderId>k__BackingField = dataReader.IsDBNull(36) ? default(long) : dataReader.GetInt64(36);
                                            instance.<TotalPrice>k__BackingField = dataReader.IsDBNull(37) ? default(decimal) : dataReader.GetDecimal(37);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(StockPurchaseOrderItems)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    entity = 
                    {
                        MaterializationContext materializationContext4;
                        IEntityType entityType4;
                        Products instance4;
                        InternalEntityEntry entry4;
                        bool hasNullKey4;
                        materializationContext4 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance4 = default(Products);
                        entry4 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(38) ? default(object) : (object)dataReader.GetInt64(38) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey4);
                        !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
                        {
                            entityType4 = entry4.EntityType;
                            return instance4 = (Products)entry4.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot4;
                            shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType4 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                            instance4 = switch (entityType4)
                            {
                                case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                                    {
                                        return 
                                        {
                                            Products instance;
                                            instance = new Products();
                                            instance.<ProductId>k__BackingField = dataReader.IsDBNull(38) ? default(long) : dataReader.GetInt64(38);
                                            instance.<AvailableQuantity>k__BackingField = dataReader.IsDBNull(39) ? default(int) : dataReader.GetInt32(39);
                                            instance.<CategoryId>k__BackingField = dataReader.IsDBNull(40) ? default(int) : dataReader.GetInt32(40);
                                            instance.<CreatedAt>k__BackingField = dataReader.IsDBNull(41) ? default(DateTime) : dataReader.GetDateTime(41);
                                            instance.<CreatedBy>k__BackingField = dataReader.IsDBNull(42) ? default(long) : dataReader.GetInt64(42);
                                            instance.<Description>k__BackingField = dataReader.IsDBNull(43) ? default(string) : dataReader.GetString(43);
                                            instance.<IsDeleted>k__BackingField = dataReader.IsDBNull(44) ? default(bool) : dataReader.GetBoolean(44);
                                            instance.<LastRestockAt>k__BackingField = dataReader.IsDBNull(45) ? default(DateTime) : dataReader.GetDateTime(45);
                                            instance.<MinimumRequiredQuantity>k__BackingField = dataReader.IsDBNull(46) ? default(int) : dataReader.GetInt32(46);
                                            instance.<Name>k__BackingField = dataReader.IsDBNull(47) ? default(string) : dataReader.GetString(47);
                                            instance.<Price>k__BackingField = dataReader.IsDBNull(48) ? default(decimal) : dataReader.GetDecimal(48);
                                            instance.<ProductStatus>k__BackingField = dataReader.IsDBNull(49) ? default(int) : dataReader.GetInt32(49);
                                            instance.<UpdatedAt>k__BackingField = dataReader.IsDBNull(50) ? default(DateTime) : dataReader.GetDateTime(50);
                                            instance.<UpdatedBy>k__BackingField = dataReader.IsDBNull(51) ? default(long) : dataReader.GetInt64(51);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext4.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Products)
                            }
                            ;
                            entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType4, 
                                entity: instance4, 
                                snapshot: shadowSnapshot4);
                            return instance4;
                        } : default(void);
                        return instance4;
                    };
                    ShaperProcessingExpressionVisitor.IncludeReference<StockPurchaseOrderItems, StockPurchaseOrderItems, Products>(
                        queryContext: queryContext, 
                        entity: entity, 
                        relatedEntity: entity, 
                        navigation: [LIFTABLE Constant: Navigation: StockPurchaseOrderItems.Product (Products) ToPrincipal Products Inverse: StockPurchaseOrderItems | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems").FindNavigation("Product")], 
                        inverseNavigation: [LIFTABLE Constant: Navigation: Products.StockPurchaseOrderItems (ICollection<StockPurchaseOrderItems>) Collection ToDependent StockPurchaseOrderItems Inverse: Product | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindNavigation("StockPurchaseOrderItems")], 
                        fixup: (namelessParameter{19}, namelessParameter{20}) => 
                        {
                            namelessParameter{19}.<Product>k__BackingField = namelessParameter{20};
                            return [LIFTABLE Constant: ClrICollectionAccessor<Products, ICollection<StockPurchaseOrderItems>, StockPurchaseOrderItems> | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindNavigation("StockPurchaseOrderItems").GetCollectionAccessor()].Add(
                                entity: namelessParameter{20}, 
                                value: namelessParameter{19}, 
                                forMaterialization: True);
                        }, 
                        trackingQuery: True);
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: StockPurchaseOrderItems.StockPurchaseOrder (StockPurchaseOrders) ToPrincipal StockPurchaseOrders Inverse: StockPurchaseOrderItems | Resolver: namelessParameter{22} => namelessParameter{22}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems").FindNavigation("StockPurchaseOrder")], 
                fixup: (namelessParameter{23}, namelessParameter{24}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<StockPurchaseOrders, ICollection<StockPurchaseOrderItems>, StockPurchaseOrderItems> | Resolver: namelessParameter{25} => namelessParameter{25}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems").GetCollectionAccessor()].Add(
                        entity: namelessParameter{23}, 
                        value: namelessParameter{24}, 
                        forMaterialization: True);
                    return namelessParameter{24}.<StockPurchaseOrder>k__BackingField = namelessParameter{23};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (StockPurchaseOrders)(resultContext.Values[0]) : default(StockPurchaseOrders);
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 15:15:18.937 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:15:18.938 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 15:15:18.939 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:15:18.940 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:15:18.940 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:15:18.941 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:15:18.942 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:15:18.943 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s1].[VendorId0], [s1].[Address], [s1].[City], [s1].[Country], [s1].[CreatedAt], [s1].[CreatedBy], [s1].[Email], [s1].[IsDeleted], [s1].[Name], [s1].[Phone], [s1].[Pincode], [s1].[State], [s1].[StoreName], [s1].[UpdatedAt0], [s1].[UpdatedBy0], [s2].[StockPurchaseOrderItemId], [s2].[OrderItemStatus], [s2].[OrderRecivedDate], [s2].[ProductId], [s2].[ProductPrice], [s2].[Quantity], [s2].[StockPurchaseOrderId], [s2].[TotalPrice], [s2].[ProductId0], [s2].[AvailableQuantity], [s2].[CategoryId], [s2].[CreatedAt], [s2].[CreatedBy], [s2].[Description], [s2].[IsDeleted], [s2].[LastRestockAt], [s2].[MinimumRequiredQuantity], [s2].[Name], [s2].[Price], [s2].[ProductStatus], [s2].[UpdatedAt], [s2].[UpdatedBy]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId], [v].[VendorId] AS [VendorId0], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt] AS [UpdatedAt0], [v].[UpdatedBy] AS [UpdatedBy0]
    FROM [StockPurchaseOrders] AS [s]
    INNER JOIN [VendorDetails] AS [v] ON [s].[VendorId] = [v].[VendorId]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN (
    SELECT [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice], [p].[ProductId] AS [ProductId0], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
    FROM [StockPurchaseOrderItems] AS [s0]
    INNER JOIN [Products] AS [p] ON [s0].[ProductId] = [p].[ProductId]
) AS [s2] ON [s1].[StockPurchaseOrderId] = [s2].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId], [s1].[VendorId0], [s2].[StockPurchaseOrderItemId]
2025-05-09 15:15:18.954 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s1].[VendorId0], [s1].[Address], [s1].[City], [s1].[Country], [s1].[CreatedAt], [s1].[CreatedBy], [s1].[Email], [s1].[IsDeleted], [s1].[Name], [s1].[Phone], [s1].[Pincode], [s1].[State], [s1].[StoreName], [s1].[UpdatedAt0], [s1].[UpdatedBy0], [s2].[StockPurchaseOrderItemId], [s2].[OrderItemStatus], [s2].[OrderRecivedDate], [s2].[ProductId], [s2].[ProductPrice], [s2].[Quantity], [s2].[StockPurchaseOrderId], [s2].[TotalPrice], [s2].[ProductId0], [s2].[AvailableQuantity], [s2].[CategoryId], [s2].[CreatedAt], [s2].[CreatedBy], [s2].[Description], [s2].[IsDeleted], [s2].[LastRestockAt], [s2].[MinimumRequiredQuantity], [s2].[Name], [s2].[Price], [s2].[ProductStatus], [s2].[UpdatedAt], [s2].[UpdatedBy]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId], [v].[VendorId] AS [VendorId0], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt] AS [UpdatedAt0], [v].[UpdatedBy] AS [UpdatedBy0]
    FROM [StockPurchaseOrders] AS [s]
    INNER JOIN [VendorDetails] AS [v] ON [s].[VendorId] = [v].[VendorId]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN (
    SELECT [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice], [p].[ProductId] AS [ProductId0], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
    FROM [StockPurchaseOrderItems] AS [s0]
    INNER JOIN [Products] AS [p] ON [s0].[ProductId] = [p].[ProductId]
) AS [s2] ON [s1].[StockPurchaseOrderId] = [s2].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId], [s1].[VendorId0], [s2].[StockPurchaseOrderItemId]
2025-05-09 15:15:18.957 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:15:18.959 +05:30 [DBG] The navigation 'StockPurchaseOrders.VendorDetails' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:15:18.960 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'VendorDetails' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:15:18.965 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:15:18.966 +05:30 [DBG] The navigation 'StockPurchaseOrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:15:18.967 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:15:18.970 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:15:18.971 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 13ms reading results.
2025-05-09 15:15:18.972 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:15:18.972 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 15:15:18.975 +05:30 [INF] Successfully fetched stock purchase order details for OrderId: 3
2025-05-09 15:15:18.976 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:15:18.979 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:15:18.980 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:15:18.981 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:15:18.982 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:15:18.984 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.StockPurchaseOrderDetailsResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-09 15:15:18.992 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem) in 184.2292ms
2025-05-09 15:15:18.993 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)'
2025-05-09 15:15:18.994 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:15:18.995 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:15:18.996 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 15:15:18.997 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/StockPurchaseOrder/3 - 200 null application/json; charset=utf-8 218.7818ms
2025-05-09 15:16:42.994 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order - application/json 62
2025-05-09 15:16:43.007 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/update-stock-order'
2025-05-09 15:16:43.007 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/update-stock-order' is valid for the request path '/api/StockPurchaseOrder/update-stock-order'
2025-05-09 15:16:43.009 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:16:43.010 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:16:43.011 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:16:43.011 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:16:43.012 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:16:43.016 +05:30 [INF] Route matched with {action = "UpdateStockPurchaseOrderStatus", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateStockPurchaseOrderStatus(InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 15:16:43.017 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:16:43.018 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:16:43.021 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:16:43.024 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:16:43.025 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:16:43.026 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:16:43.027 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:16:43.028 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 15:16:43.029 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' using the name '' in request data ...
2025-05-09 15:16:43.030 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:16:43.032 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:00000017": started reading request body.
2025-05-09 15:16:43.033 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:00000017": done reading request body.
2025-05-09 15:16:43.035 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'
2025-05-09 15:16:43.038 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:16:43.040 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:16:43.042 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 15:16:43.047 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:16:43.052 +05:30 [INF] Partial update of order status for OrderId: 3 by UserId: 2
2025-05-09 15:16:43.056 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:16:43.057 +05:30 [DBG] Compiling query expression: 
'DbSet<StockPurchaseOrders>()
    .Include(o => o.StockPurchaseOrderItems)
    .FirstOrDefault(o => o.StockPurchaseOrderId == __orderId_0)'
2025-05-09 15:16:43.058 +05:30 [DBG] Including navigation: 'StockPurchaseOrders.StockPurchaseOrderItems'.
2025-05-09 15:16:43.070 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<StockPurchaseOrders>(
    asyncEnumerable: SingleQueryingEnumerable.Create<StockPurchaseOrders>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrders.StockPurchaseOrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: StockPurchaseOrders.NumberOfItem (int) Required, 1], [Property: StockPurchaseOrders.OrderRecivedDate (DateTime) Required, 2], [Property: StockPurchaseOrders.OrderStatusId (int) Required FK Index, 3], [Property: StockPurchaseOrders.PaymentDate (DateTime) Required, 4], [Property: StockPurchaseOrders.PaymentMethodId (int) Required FK Index, 5], [Property: StockPurchaseOrders.PaymentStatusId (int) Required FK Index, 6], [Property: StockPurchaseOrders.PaymentTypeId (int) Required FK Index, 7], [Property: StockPurchaseOrders.PurchaseBy (long) Required, 8], [Property: StockPurchaseOrders.PurchaseDate (DateTime) Required, 9], [Property: StockPurchaseOrders.TotalNumberOfQuantity (int) Required, 10], [Property: StockPurchaseOrders.TotalPrice (decimal) Required, 11], [Property: StockPurchaseOrders.UpdatedAt (DateTime) Required, 12], [Property: StockPurchaseOrders.UpdatedBy (long) Required FK Index, 13], [Property: StockPurchaseOrders.VendorId (long) Required FK Index, 14] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrderItems.StockPurchaseOrderItemId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: StockPurchaseOrderItems.OrderItemStatus (int) Required FK Index, 16], [Property: StockPurchaseOrderItems.OrderRecivedDate (DateTime) Required, 17], [Property: StockPurchaseOrderItems.ProductId (long) Required FK Index, 18], [Property: StockPurchaseOrderItems.ProductPrice (decimal) Required, 19], [Property: StockPurchaseOrderItems.Quantity (int) Required, 20], [Property: StockPurchaseOrderItems.StockPurchaseOrderId (long) Required FK Index, 21], [Property: StockPurchaseOrderItems.TotalPrice (decimal) Required, 22] }
                3 -> 15
            SELECT s1.StockPurchaseOrderId, s1.NumberOfItem, s1.OrderRecivedDate, s1.OrderStatusId, s1.PaymentDate, s1.PaymentMethodId, s1.PaymentStatusId, s1.PaymentTypeId, s1.PurchaseBy, s1.PurchaseDate, s1.TotalNumberOfQuantity, s1.TotalPrice, s1.UpdatedAt, s1.UpdatedBy, s1.VendorId, s0.StockPurchaseOrderItemId, s0.OrderItemStatus, s0.OrderRecivedDate, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.StockPurchaseOrderId, s0.TotalPrice
            FROM 
            (
                SELECT TOP(1) s.StockPurchaseOrderId, s.NumberOfItem, s.OrderRecivedDate, s.OrderStatusId, s.PaymentDate, s.PaymentMethodId, s.PaymentStatusId, s.PaymentTypeId, s.PurchaseBy, s.PurchaseDate, s.TotalNumberOfQuantity, s.TotalPrice, s.UpdatedAt, s.UpdatedBy, s.VendorId
                FROM StockPurchaseOrders AS s
                WHERE s.StockPurchaseOrderId == @__orderId_0
            ) AS s1
            LEFT JOIN StockPurchaseOrderItems AS s0 ON s1.StockPurchaseOrderId == s0.StockPurchaseOrderId
            ORDER BY s1.StockPurchaseOrderId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrders.StockPurchaseOrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: StockPurchaseOrders.NumberOfItem (int) Required, 1], [Property: StockPurchaseOrders.OrderRecivedDate (DateTime) Required, 2], [Property: StockPurchaseOrders.OrderStatusId (int) Required FK Index, 3], [Property: StockPurchaseOrders.PaymentDate (DateTime) Required, 4], [Property: StockPurchaseOrders.PaymentMethodId (int) Required FK Index, 5], [Property: StockPurchaseOrders.PaymentStatusId (int) Required FK Index, 6], [Property: StockPurchaseOrders.PaymentTypeId (int) Required FK Index, 7], [Property: StockPurchaseOrders.PurchaseBy (long) Required, 8], [Property: StockPurchaseOrders.PurchaseDate (DateTime) Required, 9], [Property: StockPurchaseOrders.TotalNumberOfQuantity (int) Required, 10], [Property: StockPurchaseOrders.TotalPrice (decimal) Required, 11], [Property: StockPurchaseOrders.UpdatedAt (DateTime) Required, 12], [Property: StockPurchaseOrders.UpdatedBy (long) Required FK Index, 13], [Property: StockPurchaseOrders.VendorId (long) Required FK Index, 14] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrderItems.StockPurchaseOrderItemId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: StockPurchaseOrderItems.OrderItemStatus (int) Required FK Index, 16], [Property: StockPurchaseOrderItems.OrderRecivedDate (DateTime) Required, 17], [Property: StockPurchaseOrderItems.ProductId (long) Required FK Index, 18], [Property: StockPurchaseOrderItems.ProductPrice (decimal) Required, 19], [Property: StockPurchaseOrderItems.Quantity (int) Required, 20], [Property: StockPurchaseOrderItems.StockPurchaseOrderId (long) Required FK Index, 21], [Property: StockPurchaseOrderItems.TotalPrice (decimal) Required, 22] }
                3 -> 15
            SELECT s1.StockPurchaseOrderId, s1.NumberOfItem, s1.OrderRecivedDate, s1.OrderStatusId, s1.PaymentDate, s1.PaymentMethodId, s1.PaymentStatusId, s1.PaymentTypeId, s1.PurchaseBy, s1.PurchaseDate, s1.TotalNumberOfQuantity, s1.TotalPrice, s1.UpdatedAt, s1.UpdatedBy, s1.VendorId, s0.StockPurchaseOrderItemId, s0.OrderItemStatus, s0.OrderRecivedDate, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.StockPurchaseOrderId, s0.TotalPrice
            FROM 
            (
                SELECT TOP(1) s.StockPurchaseOrderId, s.NumberOfItem, s.OrderRecivedDate, s.OrderStatusId, s.PaymentDate, s.PaymentMethodId, s.PaymentStatusId, s.PaymentTypeId, s.PurchaseBy, s.PurchaseDate, s.TotalNumberOfQuantity, s.TotalPrice, s.UpdatedAt, s.UpdatedBy, s.VendorId
                FROM StockPurchaseOrders AS s
                WHERE s.StockPurchaseOrderId == @__orderId_0
            ) AS s1
            LEFT JOIN StockPurchaseOrderItems AS s0 ON s1.StockPurchaseOrderId == s0.StockPurchaseOrderId
            ORDER BY s1.StockPurchaseOrderId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                StockPurchaseOrders entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    StockPurchaseOrders instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(StockPurchaseOrders);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: StockPurchaseOrders.StockPurchaseOrderId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (StockPurchaseOrders)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")]: 
                                {
                                    return 
                                    {
                                        StockPurchaseOrders instance;
                                        instance = new StockPurchaseOrders();
                                        instance.<StockPurchaseOrderId>k__BackingField = dataReader.GetInt64(0);
                                        instance.<NumberOfItem>k__BackingField = dataReader.GetInt32(1);
                                        instance.<OrderRecivedDate>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<OrderStatusId>k__BackingField = dataReader.GetInt32(3);
                                        instance.<PaymentDate>k__BackingField = dataReader.GetDateTime(4);
                                        instance.<PaymentMethodId>k__BackingField = dataReader.GetInt32(5);
                                        instance.<PaymentStatusId>k__BackingField = dataReader.GetInt32(6);
                                        instance.<PaymentTypeId>k__BackingField = dataReader.GetInt32(7);
                                        instance.<PurchaseBy>k__BackingField = dataReader.GetInt64(8);
                                        instance.<PurchaseDate>k__BackingField = dataReader.GetDateTime(9);
                                        instance.<TotalNumberOfQuantity>k__BackingField = dataReader.GetInt32(10);
                                        instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(11);
                                        instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                        instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                        instance.<VendorId>k__BackingField = dataReader.GetInt64(14);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(StockPurchaseOrders)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<StockPurchaseOrders, StockPurchaseOrders>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (StockPurchaseOrders)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(long?)dataReader.GetInt64(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(long?)dataReader.GetInt64(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: StockPurchaseOrders.StockPurchaseOrderItems (ICollection<StockPurchaseOrderItems>) Collection ToDependent StockPurchaseOrderItems Inverse: StockPurchaseOrder | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<StockPurchaseOrders, ICollection<StockPurchaseOrderItems>, StockPurchaseOrderItems> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<StockPurchaseOrders, StockPurchaseOrderItems>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(long?)dataReader.GetInt64(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(long?)dataReader.GetInt64(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(15) ? default(int?) : (int?)dataReader.GetInt32(15) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (long)left == (long)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (long)left == (long)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    StockPurchaseOrderItems entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        StockPurchaseOrderItems instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(StockPurchaseOrderItems);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: StockPurchaseOrderItems.StockPurchaseOrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(15) ? default(object) : (object)dataReader.GetInt32(15) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (StockPurchaseOrderItems)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")]: 
                                    {
                                        return 
                                        {
                                            StockPurchaseOrderItems instance;
                                            instance = new StockPurchaseOrderItems();
                                            instance.<StockPurchaseOrderItemId>k__BackingField = dataReader.IsDBNull(15) ? default(int) : dataReader.GetInt32(15);
                                            instance.<OrderItemStatus>k__BackingField = dataReader.IsDBNull(16) ? default(int) : dataReader.GetInt32(16);
                                            instance.<OrderRecivedDate>k__BackingField = dataReader.IsDBNull(17) ? default(DateTime) : dataReader.GetDateTime(17);
                                            instance.<ProductId>k__BackingField = dataReader.IsDBNull(18) ? default(long) : dataReader.GetInt64(18);
                                            instance.<ProductPrice>k__BackingField = dataReader.IsDBNull(19) ? default(decimal) : dataReader.GetDecimal(19);
                                            instance.<Quantity>k__BackingField = dataReader.IsDBNull(20) ? default(int) : dataReader.GetInt32(20);
                                            instance.<StockPurchaseOrderId>k__BackingField = dataReader.IsDBNull(21) ? default(long) : dataReader.GetInt64(21);
                                            instance.<TotalPrice>k__BackingField = dataReader.IsDBNull(22) ? default(decimal) : dataReader.GetDecimal(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(StockPurchaseOrderItems)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: StockPurchaseOrderItems.StockPurchaseOrder (StockPurchaseOrders) ToPrincipal StockPurchaseOrders Inverse: StockPurchaseOrderItems | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems").FindNavigation("StockPurchaseOrder")], 
                fixup: (namelessParameter{9}, namelessParameter{10}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<StockPurchaseOrders, ICollection<StockPurchaseOrderItems>, StockPurchaseOrderItems> | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{10}, 
                        forMaterialization: True);
                    return namelessParameter{10}.<StockPurchaseOrder>k__BackingField = namelessParameter{9};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (StockPurchaseOrders)(resultContext.Values[0]) : default(StockPurchaseOrders);
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 15:16:43.089 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:16:43.090 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 15:16:43.091 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:16:43.092 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:16:43.092 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:16:43.093 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:16:43.094 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:16:43.095 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId]
    FROM [StockPurchaseOrders] AS [s]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN [StockPurchaseOrderItems] AS [s0] ON [s1].[StockPurchaseOrderId] = [s0].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId]
2025-05-09 15:16:43.101 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId]
    FROM [StockPurchaseOrders] AS [s]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN [StockPurchaseOrderItems] AS [s0] ON [s1].[StockPurchaseOrderId] = [s0].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId]
2025-05-09 15:16:43.104 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:16:43.106 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:16:43.107 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:16:43.108 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 4ms reading results.
2025-05-09 15:16:43.109 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:16:43.110 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 15:16:43.113 +05:30 [DBG] An entity of type 'StockPurchaseOrders' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:16:43.115 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 15:16:43.116 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 15:16:43.117 +05:30 [DBG] The foreign key property 'StockPurchaseOrders.OrderStatusId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:16:43.117 +05:30 [DBG] The foreign key property 'StockPurchaseOrders.PaymentStatusId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:16:43.119 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 15:16:43.121 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:16:43.122 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:16:43.123 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:16:43.123 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:16:43.124 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:16:43.125 +05:30 [DBG] Executing DbCommand [Parameters=[@p14='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int64), @p8='?' (DbType = DateTime2), @p9='?' (DbType = Int32), @p10='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [StockPurchaseOrders] SET [NumberOfItem] = @p0, [OrderRecivedDate] = @p1, [OrderStatusId] = @p2, [PaymentDate] = @p3, [PaymentMethodId] = @p4, [PaymentStatusId] = @p5, [PaymentTypeId] = @p6, [PurchaseBy] = @p7, [PurchaseDate] = @p8, [TotalNumberOfQuantity] = @p9, [TotalPrice] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12, [VendorId] = @p13
OUTPUT 1
WHERE [StockPurchaseOrderId] = @p14;
2025-05-09 15:16:43.132 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@p14='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int64), @p8='?' (DbType = DateTime2), @p9='?' (DbType = Int32), @p10='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [StockPurchaseOrders] SET [NumberOfItem] = @p0, [OrderRecivedDate] = @p1, [OrderStatusId] = @p2, [PaymentDate] = @p3, [PaymentMethodId] = @p4, [PaymentStatusId] = @p5, [PaymentTypeId] = @p6, [PurchaseBy] = @p7, [PurchaseDate] = @p8, [TotalNumberOfQuantity] = @p9, [TotalPrice] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12, [VendorId] = @p13
OUTPUT 1
WHERE [StockPurchaseOrderId] = @p14;
2025-05-09 15:16:43.134 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:16:43.135 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 0ms reading results.
2025-05-09 15:16:43.137 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:16:43.138 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 15:16:43.139 +05:30 [DBG] An entity of type 'StockPurchaseOrders' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:16:43.140 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 15:16:43.141 +05:30 [INF] Stock purchase order marked as Incomplete with partial receipt for OrderId: 3
2025-05-09 15:16:43.141 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:16:43.143 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:16:43.144 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:16:43.144 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:16:43.145 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:16:43.146 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:16:43.147 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem) in 120.895ms
2025-05-09 15:16:43.148 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:16:43.149 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:16:43.150 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:16:43.150 +05:30 [DBG] Disposed connection to database '' on server '' (0ms).
2025-05-09 15:16:43.151 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order - 200 null application/json; charset=utf-8 158.0186ms
2025-05-09 15:17:34.597 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/StockPurchaseOrder/3 - null null
2025-05-09 15:17:34.609 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/3'
2025-05-09 15:17:34.611 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/{orderId}' is valid for the request path '/api/StockPurchaseOrder/3'
2025-05-09 15:17:34.612 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)'
2025-05-09 15:17:34.613 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:17:34.614 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:17:34.615 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:17:34.616 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)'
2025-05-09 15:17:34.617 +05:30 [INF] Route matched with {action = "GetStockPurchaseOrderDetails", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStockPurchaseOrderDetails(Int64) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 15:17:34.618 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:17:34.619 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:17:34.620 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:17:34.621 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:17:34.623 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:17:34.625 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:17:34.627 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:17:34.627 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' ...
2025-05-09 15:17:34.628 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' using the name 'orderId' in request data ...
2025-05-09 15:17:34.630 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-09 15:17:34.631 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-09 15:17:34.632 +05:30 [DBG] Attempting to validate the bound parameter 'orderId' of type 'System.Int64' ...
2025-05-09 15:17:34.633 +05:30 [DBG] Done attempting to validate the bound parameter 'orderId' of type 'System.Int64'.
2025-05-09 15:17:34.634 +05:30 [INF] Fetching stock purchase order details for OrderId: 3
2025-05-09 15:17:34.635 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:17:34.637 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:17:34.638 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 15:17:34.639 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:17:34.642 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:17:34.643 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:17:34.643 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:17:34.644 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:17:34.645 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s1].[VendorId0], [s1].[Address], [s1].[City], [s1].[Country], [s1].[CreatedAt], [s1].[CreatedBy], [s1].[Email], [s1].[IsDeleted], [s1].[Name], [s1].[Phone], [s1].[Pincode], [s1].[State], [s1].[StoreName], [s1].[UpdatedAt0], [s1].[UpdatedBy0], [s2].[StockPurchaseOrderItemId], [s2].[OrderItemStatus], [s2].[OrderRecivedDate], [s2].[ProductId], [s2].[ProductPrice], [s2].[Quantity], [s2].[StockPurchaseOrderId], [s2].[TotalPrice], [s2].[ProductId0], [s2].[AvailableQuantity], [s2].[CategoryId], [s2].[CreatedAt], [s2].[CreatedBy], [s2].[Description], [s2].[IsDeleted], [s2].[LastRestockAt], [s2].[MinimumRequiredQuantity], [s2].[Name], [s2].[Price], [s2].[ProductStatus], [s2].[UpdatedAt], [s2].[UpdatedBy]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId], [v].[VendorId] AS [VendorId0], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt] AS [UpdatedAt0], [v].[UpdatedBy] AS [UpdatedBy0]
    FROM [StockPurchaseOrders] AS [s]
    INNER JOIN [VendorDetails] AS [v] ON [s].[VendorId] = [v].[VendorId]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN (
    SELECT [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice], [p].[ProductId] AS [ProductId0], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
    FROM [StockPurchaseOrderItems] AS [s0]
    INNER JOIN [Products] AS [p] ON [s0].[ProductId] = [p].[ProductId]
) AS [s2] ON [s1].[StockPurchaseOrderId] = [s2].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId], [s1].[VendorId0], [s2].[StockPurchaseOrderItemId]
2025-05-09 15:17:34.656 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s1].[VendorId0], [s1].[Address], [s1].[City], [s1].[Country], [s1].[CreatedAt], [s1].[CreatedBy], [s1].[Email], [s1].[IsDeleted], [s1].[Name], [s1].[Phone], [s1].[Pincode], [s1].[State], [s1].[StoreName], [s1].[UpdatedAt0], [s1].[UpdatedBy0], [s2].[StockPurchaseOrderItemId], [s2].[OrderItemStatus], [s2].[OrderRecivedDate], [s2].[ProductId], [s2].[ProductPrice], [s2].[Quantity], [s2].[StockPurchaseOrderId], [s2].[TotalPrice], [s2].[ProductId0], [s2].[AvailableQuantity], [s2].[CategoryId], [s2].[CreatedAt], [s2].[CreatedBy], [s2].[Description], [s2].[IsDeleted], [s2].[LastRestockAt], [s2].[MinimumRequiredQuantity], [s2].[Name], [s2].[Price], [s2].[ProductStatus], [s2].[UpdatedAt], [s2].[UpdatedBy]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId], [v].[VendorId] AS [VendorId0], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt] AS [UpdatedAt0], [v].[UpdatedBy] AS [UpdatedBy0]
    FROM [StockPurchaseOrders] AS [s]
    INNER JOIN [VendorDetails] AS [v] ON [s].[VendorId] = [v].[VendorId]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN (
    SELECT [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice], [p].[ProductId] AS [ProductId0], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
    FROM [StockPurchaseOrderItems] AS [s0]
    INNER JOIN [Products] AS [p] ON [s0].[ProductId] = [p].[ProductId]
) AS [s2] ON [s1].[StockPurchaseOrderId] = [s2].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId], [s1].[VendorId0], [s2].[StockPurchaseOrderItemId]
2025-05-09 15:17:34.661 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:17:34.662 +05:30 [DBG] The navigation 'StockPurchaseOrders.VendorDetails' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:17:34.663 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'VendorDetails' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:17:34.665 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:17:34.666 +05:30 [DBG] The navigation 'StockPurchaseOrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:17:34.667 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:17:34.669 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:17:34.670 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 9ms reading results.
2025-05-09 15:17:34.672 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:17:34.674 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:17:34.675 +05:30 [INF] Successfully fetched stock purchase order details for OrderId: 3
2025-05-09 15:17:34.676 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:17:34.678 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:17:34.678 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:17:34.679 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:17:34.680 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:17:34.680 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.StockPurchaseOrderDetailsResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-09 15:17:34.681 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem) in 56.4046ms
2025-05-09 15:17:34.688 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)'
2025-05-09 15:17:34.690 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:17:34.691 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:17:34.692 +05:30 [DBG] Disposed connection to database '' on server '' (0ms).
2025-05-09 15:17:34.693 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/StockPurchaseOrder/3 - 200 null application/json; charset=utf-8 96.2309ms
2025-05-09 15:19:47.431 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order - application/json 61
2025-05-09 15:19:47.441 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/update-stock-order'
2025-05-09 15:19:47.442 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/update-stock-order' is valid for the request path '/api/StockPurchaseOrder/update-stock-order'
2025-05-09 15:19:47.444 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:19:47.445 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:19:47.446 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:19:47.446 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:19:47.448 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:19:47.449 +05:30 [INF] Route matched with {action = "UpdateStockPurchaseOrderStatus", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateStockPurchaseOrderStatus(InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 15:19:47.453 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:19:47.455 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:19:47.456 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:19:47.458 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:19:47.459 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:19:47.460 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:19:47.462 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:19:47.463 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 15:19:47.464 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' using the name '' in request data ...
2025-05-09 15:19:47.466 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:19:47.469 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:0000001B": started reading request body.
2025-05-09 15:19:47.471 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:0000001B": done reading request body.
2025-05-09 15:19:47.472 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'
2025-05-09 15:19:47.473 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:19:47.474 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:19:47.475 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 15:19:47.477 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:19:47.478 +05:30 [INF] Partial update of order status for OrderId: 3 by UserId: 2
2025-05-09 15:19:47.480 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:19:47.485 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:19:47.486 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 15:19:47.487 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:19:47.488 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:19:47.489 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:19:47.490 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:19:47.491 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:19:47.491 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId]
    FROM [StockPurchaseOrders] AS [s]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN [StockPurchaseOrderItems] AS [s0] ON [s1].[StockPurchaseOrderId] = [s0].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId]
2025-05-09 15:19:47.507 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId]
    FROM [StockPurchaseOrders] AS [s]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN [StockPurchaseOrderItems] AS [s0] ON [s1].[StockPurchaseOrderId] = [s0].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId]
2025-05-09 15:19:47.509 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:19:47.511 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:19:47.512 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:19:47.513 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-09 15:19:47.514 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:19:47.515 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 15:19:47.517 +05:30 [WRN] No product IDs provided for incomplete status for OrderId: 3
2025-05-09 15:19:47.518 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:19:47.519 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:19:47.520 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:19:47.520 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:19:47.521 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:19:47.522 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:19:47.523 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem) in 62.6807ms
2025-05-09 15:19:47.530 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:19:47.531 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:19:47.531 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:19:47.533 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 15:19:47.534 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order - 400 null application/json; charset=utf-8 103.1945ms
2025-05-09 15:20:13.270 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order - application/json 61
2025-05-09 15:20:13.279 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/update-stock-order'
2025-05-09 15:20:13.280 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/update-stock-order' is valid for the request path '/api/StockPurchaseOrder/update-stock-order'
2025-05-09 15:20:13.282 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:20:13.282 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:20:13.283 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:20:13.284 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:20:13.286 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:20:13.288 +05:30 [INF] Route matched with {action = "UpdateStockPurchaseOrderStatus", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateStockPurchaseOrderStatus(InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 15:20:13.290 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:20:13.292 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:20:13.293 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:20:13.295 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:20:13.296 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:20:13.297 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:20:13.299 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:20:13.300 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 15:20:13.303 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' using the name '' in request data ...
2025-05-09 15:20:13.306 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:20:13.307 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:0000001D": started reading request body.
2025-05-09 15:20:13.308 +05:30 [DBG] Connection id "0HNCER8NQNRM8", Request id "0HNCER8NQNRM8:0000001D": done reading request body.
2025-05-09 15:20:13.309 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'
2025-05-09 15:20:13.310 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:20:13.312 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:20:13.314 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 15:20:13.316 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:20:13.317 +05:30 [INF] Partial update of order status for OrderId: 3 by UserId: 2
2025-05-09 15:20:13.322 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:20:13.324 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:20:13.325 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 15:20:13.326 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.327 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.328 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:20:13.328 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:20:13.329 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:20:13.330 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId]
    FROM [StockPurchaseOrders] AS [s]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN [StockPurchaseOrderItems] AS [s0] ON [s1].[StockPurchaseOrderId] = [s0].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId]
2025-05-09 15:20:13.333 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId]
    FROM [StockPurchaseOrders] AS [s]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN [StockPurchaseOrderItems] AS [s0] ON [s1].[StockPurchaseOrderId] = [s0].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId]
2025-05-09 15:20:13.338 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:20:13.340 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:20:13.341 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.342 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-09 15:20:13.343 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.344 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:20:13.347 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.348 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.349 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:20:13.350 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:20:13.353 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-09 15:20:13.354 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 15:20:13.358 +05:30 [INF] Executed DbCommand (4ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 15:20:13.360 +05:30 [DBG] The navigation 'StockPurchaseOrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:20:13.361 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:20:13.362 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.363 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 15:20:13.364 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.365 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 15:20:13.368 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:20:13.371 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 15:20:13.372 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 15:20:13.374 +05:30 [DBG] The unchanged property 'StockPurchaseOrders.OrderRecivedDate' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:20:13.375 +05:30 [DBG] An entity of type 'StockPurchaseOrders' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:20:13.376 +05:30 [DBG] The unchanged property 'StockPurchaseOrders.OrderStatusId' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:20:13.377 +05:30 [DBG] The foreign key property 'StockPurchaseOrders.OrderStatusId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:20:13.378 +05:30 [DBG] The unchanged property 'StockPurchaseOrders.PaymentDate' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:20:13.379 +05:30 [DBG] The unchanged property 'StockPurchaseOrders.PaymentStatusId' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:20:13.380 +05:30 [DBG] The foreign key property 'StockPurchaseOrders.PaymentStatusId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:20:13.381 +05:30 [DBG] The unchanged property 'StockPurchaseOrders.UpdatedAt' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:20:13.382 +05:30 [DBG] The unchanged property 'StockPurchaseOrderItems.OrderItemStatus' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:20:13.384 +05:30 [DBG] An entity of type 'StockPurchaseOrderItems' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:20:13.388 +05:30 [DBG] The foreign key property 'StockPurchaseOrderItems.OrderItemStatus' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:20:13.389 +05:30 [DBG] The unchanged property 'StockPurchaseOrderItems.OrderRecivedDate' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:20:13.390 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 15:20:13.392 +05:30 [DBG] Executing 3 update commands as a batch.
2025-05-09 15:20:13.393 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.394 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.396 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-09 15:20:13.397 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-09 15:20:13.398 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:20:13.399 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:20:13.400 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:20:13.404 +05:30 [DBG] Executing DbCommand [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p16='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (DbType = DateTime2), @p22='?' (DbType = Int64), @p17='?' (DbType = DateTime2), @p18='?' (DbType = Int32), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Int32), @p21='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
UPDATE [StockPurchaseOrderItems] SET [OrderItemStatus] = @p14, [OrderRecivedDate] = @p15
OUTPUT 1
WHERE [StockPurchaseOrderItemId] = @p16;
UPDATE [StockPurchaseOrders] SET [OrderRecivedDate] = @p17, [OrderStatusId] = @p18, [PaymentDate] = @p19, [PaymentStatusId] = @p20, [UpdatedAt] = @p21
OUTPUT 1
WHERE [StockPurchaseOrderId] = @p22;
2025-05-09 15:20:13.422 +05:30 [INF] Executed DbCommand (18ms) [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p16='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (DbType = DateTime2), @p22='?' (DbType = Int64), @p17='?' (DbType = DateTime2), @p18='?' (DbType = Int32), @p19='?' (DbType = DateTime2), @p20='?' (DbType = Int32), @p21='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
UPDATE [StockPurchaseOrderItems] SET [OrderItemStatus] = @p14, [OrderRecivedDate] = @p15
OUTPUT 1
WHERE [StockPurchaseOrderItemId] = @p16;
UPDATE [StockPurchaseOrders] SET [OrderRecivedDate] = @p17, [OrderStatusId] = @p18, [PaymentDate] = @p19, [PaymentStatusId] = @p20, [UpdatedAt] = @p21
OUTPUT 1
WHERE [StockPurchaseOrderId] = @p22;
2025-05-09 15:20:13.424 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.425 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 15:20:13.426 +05:30 [DBG] Committing transaction.
2025-05-09 15:20:13.427 +05:30 [DBG] Committed transaction.
2025-05-09 15:20:13.428 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.429 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 15:20:13.430 +05:30 [DBG] Disposing transaction.
2025-05-09 15:20:13.430 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:20:13.432 +05:30 [DBG] An entity of type 'StockPurchaseOrders' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:20:13.433 +05:30 [DBG] An entity of type 'StockPurchaseOrderItems' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:20:13.435 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 3 entities written to the database.
2025-05-09 15:20:13.437 +05:30 [INF] Starting stock movement for ProductId: 1, UserId: 2, Status: "Recived"
2025-05-09 15:20:13.438 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.439 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.440 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:20:13.442 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:20:13.443 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:20:13.445 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 15:20:13.447 +05:30 [INF] Executed DbCommand (3ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 15:20:13.457 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.458 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 15:20:13.459 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.460 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 15:20:13.461 +05:30 [INF] 'Restock' movement for ProductId: 1
2025-05-09 15:20:13.462 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:20:13.464 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:20:13.465 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:20:13.466 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 15:20:13.468 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 15:20:13.469 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 15:20:13.471 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.472 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.473 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:20:13.474 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:20:13.475 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:20:13.476 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 15:20:13.482 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 15:20:13.484 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:20:13.486 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.488 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-09 15:20:13.489 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.490 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:20:13.492 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:20:13.493 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 15:20:13.494 +05:30 [INF] Stock movement successfully for ProductId: 1
2025-05-09 15:20:13.495 +05:30 [DBG] An entity of type 'StockPurchaseOrders' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:20:13.496 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 15:20:13.497 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 15:20:13.498 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 15:20:13.499 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.500 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.502 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:20:13.503 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:20:13.504 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:20:13.506 +05:30 [DBG] Executing DbCommand [Parameters=[@p14='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int64), @p8='?' (DbType = DateTime2), @p9='?' (DbType = Int32), @p10='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [StockPurchaseOrders] SET [NumberOfItem] = @p0, [OrderRecivedDate] = @p1, [OrderStatusId] = @p2, [PaymentDate] = @p3, [PaymentMethodId] = @p4, [PaymentStatusId] = @p5, [PaymentTypeId] = @p6, [PurchaseBy] = @p7, [PurchaseDate] = @p8, [TotalNumberOfQuantity] = @p9, [TotalPrice] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12, [VendorId] = @p13
OUTPUT 1
WHERE [StockPurchaseOrderId] = @p14;
2025-05-09 15:20:13.515 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@p14='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int64), @p8='?' (DbType = DateTime2), @p9='?' (DbType = Int32), @p10='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [StockPurchaseOrders] SET [NumberOfItem] = @p0, [OrderRecivedDate] = @p1, [OrderStatusId] = @p2, [PaymentDate] = @p3, [PaymentMethodId] = @p4, [PaymentStatusId] = @p5, [PaymentTypeId] = @p6, [PurchaseBy] = @p7, [PurchaseDate] = @p8, [TotalNumberOfQuantity] = @p9, [TotalPrice] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12, [VendorId] = @p13
OUTPUT 1
WHERE [StockPurchaseOrderId] = @p14;
2025-05-09 15:20:13.517 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.519 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 15:20:13.521 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.521 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (0ms).
2025-05-09 15:20:13.523 +05:30 [DBG] An entity of type 'StockPurchaseOrders' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:20:13.524 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 15:20:13.525 +05:30 [INF] Stock purchase order fully received for OrderId: 3
2025-05-09 15:20:13.526 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:20:13.527 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:20:13.528 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:20:13.528 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:20:13.529 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:20:13.530 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:20:13.531 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem) in 233.2502ms
2025-05-09 15:20:13.532 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:20:13.533 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:20:13.535 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:20:13.537 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 15:20:13.538 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order - 200 null application/json; charset=utf-8 267.7852ms
2025-05-09 15:36:44.835 +05:30 [INF] Starting up the application...
2025-05-09 15:36:45.922 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-09 15:36:45.994 +05:30 [DBG] Hosting starting
2025-05-09 15:36:46.033 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-09 15:36:46.043 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-09 15:36:46.051 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-09 15:36:46.059 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-09 15:36:46.063 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-09 15:36:46.069 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-09 15:36:46.073 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 15:36:46.076 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-09 15:36:46.078 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 15:36:46.084 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-09 15:36:46.086 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-09 15:36:46.090 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-09 15:36:46.093 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-09 15:36:46.099 +05:30 [DBG] Middleware loaded
2025-05-09 15:36:46.102 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-09 15:36:46.104 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-09 15:36:46.196 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-09 15:36:46.310 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-09 15:36:46.313 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-09 15:36:46.314 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-09 15:36:46.315 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-09 15:36:46.316 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-09 15:36:46.317 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-09 15:36:46.343 +05:30 [DBG] Connection id "0HNCES4QF0OS2" received FIN.
2025-05-09 15:36:46.343 +05:30 [DBG] Connection id "0HNCES4QF0OS1" received FIN.
2025-05-09 15:36:46.354 +05:30 [DBG] Connection id "0HNCES4QF0OS2" accepted.
2025-05-09 15:36:46.354 +05:30 [DBG] Connection id "0HNCES4QF0OS1" accepted.
2025-05-09 15:36:46.357 +05:30 [DBG] Connection id "0HNCES4QF0OS2" started.
2025-05-09 15:36:46.358 +05:30 [DBG] Connection id "0HNCES4QF0OS1" started.
2025-05-09 15:36:46.382 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 15:36:46.382 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 15:36:46.440 +05:30 [DBG] Connection id "0HNCES4QF0OS2" stopped.
2025-05-09 15:36:46.440 +05:30 [DBG] Connection id "0HNCES4QF0OS1" stopped.
2025-05-09 15:36:46.446 +05:30 [DBG] Connection id "0HNCES4QF0OS1" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 15:36:46.446 +05:30 [DBG] Connection id "0HNCES4QF0OS2" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 15:36:46.471 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-09 15:36:46.476 +05:30 [INF] Hosting environment: Development
2025-05-09 15:36:46.477 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-09 15:36:46.478 +05:30 [DBG] Hosting started
2025-05-09 15:36:46.852 +05:30 [DBG] Connection id "0HNCES4QF0OS3" accepted.
2025-05-09 15:36:46.856 +05:30 [DBG] Connection id "0HNCES4QF0OS3" started.
2025-05-09 15:36:46.945 +05:30 [DBG] Connection 0HNCES4QF0OS3 established using the following protocol: "Tls12"
2025-05-09 15:36:47.039 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-09 15:36:47.152 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-09 15:36:47.173 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-09 15:36:47.176 +05:30 [DBG] Request did not match any endpoints
2025-05-09 15:36:47.241 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-09 15:36:47.243 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-09 15:36:47.262 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-09 15:36:47.264 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-09 15:36:47.279 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 242.9813ms
2025-05-09 15:36:47.284 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-09 15:36:47.288 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-09 15:36:47.309 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-09 15:36:47.313 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 28.7187ms
2025-05-09 15:36:47.370 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 82.8493ms
2025-05-09 15:36:47.493 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-09 15:36:47.496 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-09 15:36:47.498 +05:30 [DBG] Request did not match any endpoints
2025-05-09 15:36:47.525 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 31.6623ms
2025-05-09 15:37:54.445 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order - application/json 62
2025-05-09 15:37:54.467 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/update-stock-order'
2025-05-09 15:37:54.475 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/update-stock-order' is valid for the request path '/api/StockPurchaseOrder/update-stock-order'
2025-05-09 15:37:54.481 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:37:54.485 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:37:54.664 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:37:54.668 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:37:54.672 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:37:54.707 +05:30 [INF] Route matched with {action = "UpdateStockPurchaseOrderStatus", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateStockPurchaseOrderStatus(InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 15:37:54.715 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:37:54.717 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:37:54.718 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:37:54.721 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:37:54.723 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:37:54.727 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:37:54.869 +05:30 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-05-09 15:37:54.895 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:37:54.911 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 15:37:54.914 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' using the name '' in request data ...
2025-05-09 15:37:54.917 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:37:54.930 +05:30 [DBG] Connection id "0HNCES4QF0OS3", Request id "0HNCES4QF0OS3:00000009": started reading request body.
2025-05-09 15:37:54.932 +05:30 [DBG] Connection id "0HNCES4QF0OS3", Request id "0HNCES4QF0OS3:00000009": done reading request body.
2025-05-09 15:37:54.950 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'
2025-05-09 15:37:54.952 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:37:54.955 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:37:54.957 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 15:37:55.029 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:37:55.038 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 15:37:55.042 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 15:37:55.045 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:37:55.054 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:37:55.057 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 15:37:55.060 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 15:37:55.062 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 15:37:55.083 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem) in 356.0971ms
2025-05-09 15:37:55.088 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:37:55.091 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order - 400 null application/problem+json; charset=utf-8 645.5675ms
2025-05-09 15:38:12.313 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order - application/json 62
2025-05-09 15:38:12.348 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/update-stock-order'
2025-05-09 15:38:12.355 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/update-stock-order' is valid for the request path '/api/StockPurchaseOrder/update-stock-order'
2025-05-09 15:38:12.360 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:38:12.361 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:38:12.368 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:38:12.374 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:38:12.376 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:38:12.377 +05:30 [INF] Route matched with {action = "UpdateStockPurchaseOrderStatus", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateStockPurchaseOrderStatus(InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 15:38:12.379 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:38:12.381 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:38:12.382 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:38:12.385 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:38:12.386 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:38:12.388 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:38:12.397 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:38:12.399 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 15:38:12.400 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' using the name '' in request data ...
2025-05-09 15:38:12.402 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:38:12.404 +05:30 [DBG] Connection id "0HNCES4QF0OS3", Request id "0HNCES4QF0OS3:0000000B": started reading request body.
2025-05-09 15:38:12.407 +05:30 [DBG] Connection id "0HNCES4QF0OS3", Request id "0HNCES4QF0OS3:0000000B": done reading request body.
2025-05-09 15:38:12.408 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'
2025-05-09 15:38:12.409 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:38:12.411 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:38:12.412 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 15:38:12.416 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:38:12.418 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 15:38:12.419 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 15:38:12.421 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:38:12.425 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:38:12.426 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 15:38:12.428 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 15:38:12.431 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 15:38:12.433 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem) in 45.2297ms
2025-05-09 15:38:12.435 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:38:12.437 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order - 400 null application/problem+json; charset=utf-8 124.8952ms
2025-05-09 15:38:22.486 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order - application/json 61
2025-05-09 15:38:22.503 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/update-stock-order'
2025-05-09 15:38:22.511 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/update-stock-order' is valid for the request path '/api/StockPurchaseOrder/update-stock-order'
2025-05-09 15:38:22.521 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:38:22.528 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:38:22.533 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:38:22.535 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:38:22.536 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:38:22.538 +05:30 [INF] Route matched with {action = "UpdateStockPurchaseOrderStatus", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateStockPurchaseOrderStatus(InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 15:38:22.543 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:38:22.545 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:38:22.546 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:38:22.548 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:38:22.550 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:38:22.551 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:38:22.561 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:38:22.563 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 15:38:22.564 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' using the name '' in request data ...
2025-05-09 15:38:22.566 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:38:22.567 +05:30 [DBG] Connection id "0HNCES4QF0OS3", Request id "0HNCES4QF0OS3:0000000D": started reading request body.
2025-05-09 15:38:22.569 +05:30 [DBG] Connection id "0HNCES4QF0OS3", Request id "0HNCES4QF0OS3:0000000D": done reading request body.
2025-05-09 15:38:22.572 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'
2025-05-09 15:38:22.575 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:38:22.577 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:38:22.579 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 15:38:22.582 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:38:22.590 +05:30 [INF] Partial update of order status for OrderId: 3 by UserId: 2
2025-05-09 15:38:23.314 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:38:23.406 +05:30 [DBG] Compiling query expression: 
'DbSet<StockPurchaseOrders>()
    .Include(o => o.StockPurchaseOrderItems)
    .FirstOrDefault(o => o.StockPurchaseOrderId == __orderId_0)'
2025-05-09 15:38:23.457 +05:30 [DBG] Including navigation: 'StockPurchaseOrders.StockPurchaseOrderItems'.
2025-05-09 15:38:23.788 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<StockPurchaseOrders>(
    asyncEnumerable: SingleQueryingEnumerable.Create<StockPurchaseOrders>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrders.StockPurchaseOrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: StockPurchaseOrders.NumberOfItem (int) Required, 1], [Property: StockPurchaseOrders.OrderRecivedDate (DateTime) Required, 2], [Property: StockPurchaseOrders.OrderStatusId (int) Required FK Index, 3], [Property: StockPurchaseOrders.PaymentDate (DateTime) Required, 4], [Property: StockPurchaseOrders.PaymentMethodId (int) Required FK Index, 5], [Property: StockPurchaseOrders.PaymentStatusId (int) Required FK Index, 6], [Property: StockPurchaseOrders.PaymentTypeId (int) Required FK Index, 7], [Property: StockPurchaseOrders.PurchaseBy (long) Required, 8], [Property: StockPurchaseOrders.PurchaseDate (DateTime) Required, 9], [Property: StockPurchaseOrders.TotalNumberOfQuantity (int) Required, 10], [Property: StockPurchaseOrders.TotalPrice (decimal) Required, 11], [Property: StockPurchaseOrders.UpdatedAt (DateTime) Required, 12], [Property: StockPurchaseOrders.UpdatedBy (long) Required FK Index, 13], [Property: StockPurchaseOrders.VendorId (long) Required FK Index, 14] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrderItems.StockPurchaseOrderItemId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: StockPurchaseOrderItems.OrderItemStatus (int) Required FK Index, 16], [Property: StockPurchaseOrderItems.OrderRecivedDate (DateTime) Required, 17], [Property: StockPurchaseOrderItems.ProductId (long) Required FK Index, 18], [Property: StockPurchaseOrderItems.ProductPrice (decimal) Required, 19], [Property: StockPurchaseOrderItems.Quantity (int) Required, 20], [Property: StockPurchaseOrderItems.StockPurchaseOrderId (long) Required FK Index, 21], [Property: StockPurchaseOrderItems.TotalPrice (decimal) Required, 22] }
                3 -> 15
            SELECT s1.StockPurchaseOrderId, s1.NumberOfItem, s1.OrderRecivedDate, s1.OrderStatusId, s1.PaymentDate, s1.PaymentMethodId, s1.PaymentStatusId, s1.PaymentTypeId, s1.PurchaseBy, s1.PurchaseDate, s1.TotalNumberOfQuantity, s1.TotalPrice, s1.UpdatedAt, s1.UpdatedBy, s1.VendorId, s0.StockPurchaseOrderItemId, s0.OrderItemStatus, s0.OrderRecivedDate, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.StockPurchaseOrderId, s0.TotalPrice
            FROM 
            (
                SELECT TOP(1) s.StockPurchaseOrderId, s.NumberOfItem, s.OrderRecivedDate, s.OrderStatusId, s.PaymentDate, s.PaymentMethodId, s.PaymentStatusId, s.PaymentTypeId, s.PurchaseBy, s.PurchaseDate, s.TotalNumberOfQuantity, s.TotalPrice, s.UpdatedAt, s.UpdatedBy, s.VendorId
                FROM StockPurchaseOrders AS s
                WHERE s.StockPurchaseOrderId == @__orderId_0
            ) AS s1
            LEFT JOIN StockPurchaseOrderItems AS s0 ON s1.StockPurchaseOrderId == s0.StockPurchaseOrderId
            ORDER BY s1.StockPurchaseOrderId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrders.StockPurchaseOrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: StockPurchaseOrders.NumberOfItem (int) Required, 1], [Property: StockPurchaseOrders.OrderRecivedDate (DateTime) Required, 2], [Property: StockPurchaseOrders.OrderStatusId (int) Required FK Index, 3], [Property: StockPurchaseOrders.PaymentDate (DateTime) Required, 4], [Property: StockPurchaseOrders.PaymentMethodId (int) Required FK Index, 5], [Property: StockPurchaseOrders.PaymentStatusId (int) Required FK Index, 6], [Property: StockPurchaseOrders.PaymentTypeId (int) Required FK Index, 7], [Property: StockPurchaseOrders.PurchaseBy (long) Required, 8], [Property: StockPurchaseOrders.PurchaseDate (DateTime) Required, 9], [Property: StockPurchaseOrders.TotalNumberOfQuantity (int) Required, 10], [Property: StockPurchaseOrders.TotalPrice (decimal) Required, 11], [Property: StockPurchaseOrders.UpdatedAt (DateTime) Required, 12], [Property: StockPurchaseOrders.UpdatedBy (long) Required FK Index, 13], [Property: StockPurchaseOrders.VendorId (long) Required FK Index, 14] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrderItems.StockPurchaseOrderItemId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: StockPurchaseOrderItems.OrderItemStatus (int) Required FK Index, 16], [Property: StockPurchaseOrderItems.OrderRecivedDate (DateTime) Required, 17], [Property: StockPurchaseOrderItems.ProductId (long) Required FK Index, 18], [Property: StockPurchaseOrderItems.ProductPrice (decimal) Required, 19], [Property: StockPurchaseOrderItems.Quantity (int) Required, 20], [Property: StockPurchaseOrderItems.StockPurchaseOrderId (long) Required FK Index, 21], [Property: StockPurchaseOrderItems.TotalPrice (decimal) Required, 22] }
                3 -> 15
            SELECT s1.StockPurchaseOrderId, s1.NumberOfItem, s1.OrderRecivedDate, s1.OrderStatusId, s1.PaymentDate, s1.PaymentMethodId, s1.PaymentStatusId, s1.PaymentTypeId, s1.PurchaseBy, s1.PurchaseDate, s1.TotalNumberOfQuantity, s1.TotalPrice, s1.UpdatedAt, s1.UpdatedBy, s1.VendorId, s0.StockPurchaseOrderItemId, s0.OrderItemStatus, s0.OrderRecivedDate, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.StockPurchaseOrderId, s0.TotalPrice
            FROM 
            (
                SELECT TOP(1) s.StockPurchaseOrderId, s.NumberOfItem, s.OrderRecivedDate, s.OrderStatusId, s.PaymentDate, s.PaymentMethodId, s.PaymentStatusId, s.PaymentTypeId, s.PurchaseBy, s.PurchaseDate, s.TotalNumberOfQuantity, s.TotalPrice, s.UpdatedAt, s.UpdatedBy, s.VendorId
                FROM StockPurchaseOrders AS s
                WHERE s.StockPurchaseOrderId == @__orderId_0
            ) AS s1
            LEFT JOIN StockPurchaseOrderItems AS s0 ON s1.StockPurchaseOrderId == s0.StockPurchaseOrderId
            ORDER BY s1.StockPurchaseOrderId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                StockPurchaseOrders entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    StockPurchaseOrders instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(StockPurchaseOrders);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: StockPurchaseOrders.StockPurchaseOrderId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (StockPurchaseOrders)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")]: 
                                {
                                    return 
                                    {
                                        StockPurchaseOrders instance;
                                        instance = new StockPurchaseOrders();
                                        instance.<StockPurchaseOrderId>k__BackingField = dataReader.GetInt64(0);
                                        instance.<NumberOfItem>k__BackingField = dataReader.GetInt32(1);
                                        instance.<OrderRecivedDate>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<OrderStatusId>k__BackingField = dataReader.GetInt32(3);
                                        instance.<PaymentDate>k__BackingField = dataReader.GetDateTime(4);
                                        instance.<PaymentMethodId>k__BackingField = dataReader.GetInt32(5);
                                        instance.<PaymentStatusId>k__BackingField = dataReader.GetInt32(6);
                                        instance.<PaymentTypeId>k__BackingField = dataReader.GetInt32(7);
                                        instance.<PurchaseBy>k__BackingField = dataReader.GetInt64(8);
                                        instance.<PurchaseDate>k__BackingField = dataReader.GetDateTime(9);
                                        instance.<TotalNumberOfQuantity>k__BackingField = dataReader.GetInt32(10);
                                        instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(11);
                                        instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                        instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                        instance.<VendorId>k__BackingField = dataReader.GetInt64(14);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(StockPurchaseOrders)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<StockPurchaseOrders, StockPurchaseOrders>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (StockPurchaseOrders)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(long?)dataReader.GetInt64(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(long?)dataReader.GetInt64(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: StockPurchaseOrders.StockPurchaseOrderItems (ICollection<StockPurchaseOrderItems>) Collection ToDependent StockPurchaseOrderItems Inverse: StockPurchaseOrder | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<StockPurchaseOrders, ICollection<StockPurchaseOrderItems>, StockPurchaseOrderItems> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<StockPurchaseOrders, StockPurchaseOrderItems>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(long?)dataReader.GetInt64(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(long?)dataReader.GetInt64(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(15) ? default(int?) : (int?)dataReader.GetInt32(15) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (long)left == (long)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (long)left == (long)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    StockPurchaseOrderItems entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        StockPurchaseOrderItems instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(StockPurchaseOrderItems);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: StockPurchaseOrderItems.StockPurchaseOrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(15) ? default(object) : (object)dataReader.GetInt32(15) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (StockPurchaseOrderItems)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")]: 
                                    {
                                        return 
                                        {
                                            StockPurchaseOrderItems instance;
                                            instance = new StockPurchaseOrderItems();
                                            instance.<StockPurchaseOrderItemId>k__BackingField = dataReader.IsDBNull(15) ? default(int) : dataReader.GetInt32(15);
                                            instance.<OrderItemStatus>k__BackingField = dataReader.IsDBNull(16) ? default(int) : dataReader.GetInt32(16);
                                            instance.<OrderRecivedDate>k__BackingField = dataReader.IsDBNull(17) ? default(DateTime) : dataReader.GetDateTime(17);
                                            instance.<ProductId>k__BackingField = dataReader.IsDBNull(18) ? default(long) : dataReader.GetInt64(18);
                                            instance.<ProductPrice>k__BackingField = dataReader.IsDBNull(19) ? default(decimal) : dataReader.GetDecimal(19);
                                            instance.<Quantity>k__BackingField = dataReader.IsDBNull(20) ? default(int) : dataReader.GetInt32(20);
                                            instance.<StockPurchaseOrderId>k__BackingField = dataReader.IsDBNull(21) ? default(long) : dataReader.GetInt64(21);
                                            instance.<TotalPrice>k__BackingField = dataReader.IsDBNull(22) ? default(decimal) : dataReader.GetDecimal(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(StockPurchaseOrderItems)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: StockPurchaseOrderItems.StockPurchaseOrder (StockPurchaseOrders) ToPrincipal StockPurchaseOrders Inverse: StockPurchaseOrderItems | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems").FindNavigation("StockPurchaseOrder")], 
                fixup: (namelessParameter{9}, namelessParameter{10}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<StockPurchaseOrders, ICollection<StockPurchaseOrderItems>, StockPurchaseOrderItems> | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{10}, 
                        forMaterialization: True);
                    return namelessParameter{10}.<StockPurchaseOrder>k__BackingField = namelessParameter{9};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (StockPurchaseOrders)(resultContext.Values[0]) : default(StockPurchaseOrders);
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 15:38:23.863 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:38:23.883 +05:30 [DBG] Created DbConnection. (19ms).
2025-05-09 15:38:23.888 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:38:24.119 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:38:24.126 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:38:24.133 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (4ms).
2025-05-09 15:38:24.141 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (15ms).
2025-05-09 15:38:24.153 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId]
    FROM [StockPurchaseOrders] AS [s]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN [StockPurchaseOrderItems] AS [s0] ON [s1].[StockPurchaseOrderId] = [s0].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId]
2025-05-09 15:38:24.231 +05:30 [INF] Executed DbCommand (79ms) [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId]
    FROM [StockPurchaseOrders] AS [s]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN [StockPurchaseOrderItems] AS [s0] ON [s1].[StockPurchaseOrderId] = [s0].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId]
2025-05-09 15:38:24.286 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:38:24.351 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:38:24.377 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:38:24.385 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 145ms reading results.
2025-05-09 15:38:24.391 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:38:24.397 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (5ms).
2025-05-09 15:38:24.399 +05:30 [WRN] Invalid status value provided: 3 for OrderId: 3
2025-05-09 15:38:24.402 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:38:24.407 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:38:24.407 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:38:24.408 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:38:24.409 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:38:24.410 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:38:24.420 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem) in 1868.9387ms
2025-05-09 15:38:24.424 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:38:24.427 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:38:24.432 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:38:24.435 +05:30 [DBG] Disposed connection to database '' on server '' (2ms).
2025-05-09 15:38:24.436 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order - 400 null application/json; charset=utf-8 1950.4301ms
2025-05-09 15:38:58.272 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order - application/json 61
2025-05-09 15:38:58.305 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/update-stock-order'
2025-05-09 15:38:58.311 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/update-stock-order' is valid for the request path '/api/StockPurchaseOrder/update-stock-order'
2025-05-09 15:38:58.315 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:38:58.317 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 15:38:58.318 +05:30 [DBG] Successfully validated the token.
2025-05-09 15:38:58.319 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 15:38:58.320 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:38:58.322 +05:30 [INF] Route matched with {action = "UpdateStockPurchaseOrderStatus", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateStockPurchaseOrderStatus(InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 15:38:58.328 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 15:38:58.329 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 15:38:58.330 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 15:38:58.333 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 15:38:58.334 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 15:38:58.336 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:38:58.337 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 15:38:58.339 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 15:38:58.340 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' using the name '' in request data ...
2025-05-09 15:38:58.344 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 15:38:58.346 +05:30 [DBG] Connection id "0HNCES4QF0OS3", Request id "0HNCES4QF0OS3:0000000F": started reading request body.
2025-05-09 15:38:58.347 +05:30 [DBG] Connection id "0HNCES4QF0OS3", Request id "0HNCES4QF0OS3:0000000F": done reading request body.
2025-05-09 15:38:58.348 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'
2025-05-09 15:38:58.350 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:38:58.351 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:38:58.353 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 15:38:58.354 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 15:38:58.356 +05:30 [INF] Partial update of order status for OrderId: 3 by UserId: 2
2025-05-09 15:38:58.371 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 15:38:58.379 +05:30 [DBG] Creating DbConnection.
2025-05-09 15:38:58.380 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 15:38:58.381 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:38:58.383 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:38:58.384 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:38:58.385 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 15:38:58.386 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (1ms).
2025-05-09 15:38:58.387 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId]
    FROM [StockPurchaseOrders] AS [s]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN [StockPurchaseOrderItems] AS [s0] ON [s1].[StockPurchaseOrderId] = [s0].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId]
2025-05-09 15:38:58.400 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId]
    FROM [StockPurchaseOrders] AS [s]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN [StockPurchaseOrderItems] AS [s0] ON [s1].[StockPurchaseOrderId] = [s0].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId]
2025-05-09 15:38:58.403 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:38:58.406 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:38:58.408 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:38:58.410 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 7ms reading results.
2025-05-09 15:38:58.412 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:38:58.414 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:38:58.430 +05:30 [DBG] An entity of type 'StockPurchaseOrders' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:38:58.434 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 15:38:58.437 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 15:38:58.448 +05:30 [DBG] The foreign key property 'StockPurchaseOrders.OrderStatusId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:38:58.461 +05:30 [DBG] The unchanged property 'StockPurchaseOrderItems.OrderItemStatus' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:38:58.464 +05:30 [DBG] An entity of type 'StockPurchaseOrderItems' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:38:58.466 +05:30 [DBG] The foreign key property 'StockPurchaseOrderItems.OrderItemStatus' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:38:58.470 +05:30 [DBG] The unchanged property 'StockPurchaseOrderItems.OrderRecivedDate' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 15:38:58.481 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 15:38:58.565 +05:30 [DBG] Executing 2 update commands as a batch.
2025-05-09 15:38:58.577 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:38:58.580 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:38:58.585 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-09 15:38:58.593 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-09 15:38:58.597 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 15:38:58.599 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-05-09 15:38:58.602 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-05-09 15:38:58.603 +05:30 [DBG] Executing DbCommand [Parameters=[@p2='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p17='?' (DbType = Int64), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime2), @p5='?' (DbType = Int32), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Int64), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int32), @p13='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p14='?' (DbType = DateTime2), @p15='?' (DbType = Int64), @p16='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [StockPurchaseOrderItems] SET [OrderItemStatus] = @p0, [OrderRecivedDate] = @p1
OUTPUT 1
WHERE [StockPurchaseOrderItemId] = @p2;
UPDATE [StockPurchaseOrders] SET [NumberOfItem] = @p3, [OrderRecivedDate] = @p4, [OrderStatusId] = @p5, [PaymentDate] = @p6, [PaymentMethodId] = @p7, [PaymentStatusId] = @p8, [PaymentTypeId] = @p9, [PurchaseBy] = @p10, [PurchaseDate] = @p11, [TotalNumberOfQuantity] = @p12, [TotalPrice] = @p13, [UpdatedAt] = @p14, [UpdatedBy] = @p15, [VendorId] = @p16
OUTPUT 1
WHERE [StockPurchaseOrderId] = @p17;
2025-05-09 15:38:58.624 +05:30 [INF] Executed DbCommand (21ms) [Parameters=[@p2='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p17='?' (DbType = Int64), @p3='?' (DbType = Int32), @p4='?' (DbType = DateTime2), @p5='?' (DbType = Int32), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Int64), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int32), @p13='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p14='?' (DbType = DateTime2), @p15='?' (DbType = Int64), @p16='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [StockPurchaseOrderItems] SET [OrderItemStatus] = @p0, [OrderRecivedDate] = @p1
OUTPUT 1
WHERE [StockPurchaseOrderItemId] = @p2;
UPDATE [StockPurchaseOrders] SET [NumberOfItem] = @p3, [OrderRecivedDate] = @p4, [OrderStatusId] = @p5, [PaymentDate] = @p6, [PaymentMethodId] = @p7, [PaymentStatusId] = @p8, [PaymentTypeId] = @p9, [PurchaseBy] = @p10, [PurchaseDate] = @p11, [TotalNumberOfQuantity] = @p12, [TotalPrice] = @p13, [UpdatedAt] = @p14, [UpdatedBy] = @p15, [VendorId] = @p16
OUTPUT 1
WHERE [StockPurchaseOrderId] = @p17;
2025-05-09 15:38:58.633 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:38:58.635 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 6ms reading results.
2025-05-09 15:38:58.642 +05:30 [DBG] Committing transaction.
2025-05-09 15:38:58.646 +05:30 [DBG] Committed transaction.
2025-05-09 15:38:58.649 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:38:58.650 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 15:38:58.652 +05:30 [DBG] Disposing transaction.
2025-05-09 15:38:58.655 +05:30 [DBG] An entity of type 'StockPurchaseOrders' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:38:58.657 +05:30 [DBG] An entity of type 'StockPurchaseOrderItems' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 15:38:58.662 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 2 entities written to the database.
2025-05-09 15:38:58.664 +05:30 [INF] Order cancelled for OrderId: 3
2025-05-09 15:38:58.665 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 15:38:58.668 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 15:38:58.668 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 15:38:58.669 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 15:38:58.670 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 15:38:58.671 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 15:38:58.672 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem) in 336.4193ms
2025-05-09 15:38:58.674 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 15:38:58.679 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 15:38:58.680 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 15:38:58.682 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 15:38:58.683 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order - 200 null application/json; charset=utf-8 411.6789ms
2025-05-09 16:15:52.644 +05:30 [INF] Starting up the application...
2025-05-09 16:15:53.586 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-09 16:15:53.679 +05:30 [DBG] Hosting starting
2025-05-09 16:15:53.715 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-09 16:15:53.725 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-09 16:15:53.731 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-09 16:15:53.735 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-09 16:15:53.738 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-09 16:15:53.743 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-09 16:15:53.750 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 16:15:53.753 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-09 16:15:53.756 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 16:15:53.762 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-09 16:15:53.763 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-09 16:15:53.765 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-09 16:15:53.767 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-09 16:15:53.773 +05:30 [DBG] Middleware loaded
2025-05-09 16:15:53.774 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-09 16:15:53.777 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-09 16:15:53.870 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-09 16:15:53.986 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-09 16:15:53.988 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-09 16:15:53.989 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-09 16:15:53.996 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-09 16:15:53.998 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-09 16:15:53.999 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-09 16:15:54.109 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-09 16:15:54.114 +05:30 [INF] Hosting environment: Development
2025-05-09 16:15:54.116 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-09 16:15:54.117 +05:30 [DBG] Hosting started
2025-05-09 16:15:54.216 +05:30 [DBG] Connection id "0HNCESQM62N93" received FIN.
2025-05-09 16:15:54.227 +05:30 [DBG] Connection id "0HNCESQM62N93" accepted.
2025-05-09 16:15:54.230 +05:30 [DBG] Connection id "0HNCESQM62N93" started.
2025-05-09 16:15:54.255 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 16:15:54.317 +05:30 [DBG] Connection id "0HNCESQM62N93" stopped.
2025-05-09 16:15:54.326 +05:30 [DBG] Connection id "0HNCESQM62N93" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 16:15:54.497 +05:30 [DBG] Connection id "0HNCESQM62N94" accepted.
2025-05-09 16:15:54.503 +05:30 [DBG] Connection id "0HNCESQM62N94" started.
2025-05-09 16:15:54.581 +05:30 [DBG] Connection 0HNCESQM62N94 established using the following protocol: "Tls12"
2025-05-09 16:15:54.697 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-09 16:15:54.819 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-09 16:15:54.850 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-09 16:15:54.853 +05:30 [DBG] Request did not match any endpoints
2025-05-09 16:15:54.914 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-09 16:15:54.917 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-09 16:15:54.941 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-09 16:15:54.943 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-09 16:15:54.949 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 268.8567ms
2025-05-09 16:15:54.960 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-09 16:15:54.964 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-09 16:15:54.984 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-09 16:15:54.988 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 27.5723ms
2025-05-09 16:15:55.040 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 77.0261ms
2025-05-09 16:15:55.150 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-09 16:15:55.158 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-09 16:15:55.160 +05:30 [DBG] Request did not match any endpoints
2025-05-09 16:15:55.211 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 61.2147ms
2025-05-09 16:41:38.609 +05:30 [INF] Starting up the application...
2025-05-09 16:41:39.554 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-09 16:41:39.654 +05:30 [DBG] Hosting starting
2025-05-09 16:41:39.695 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-09 16:41:39.709 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-09 16:41:39.721 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-09 16:41:39.726 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-09 16:41:39.731 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-09 16:41:39.738 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-09 16:41:39.743 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 16:41:39.747 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-09 16:41:39.750 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 16:41:39.757 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-09 16:41:39.759 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-09 16:41:39.761 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-09 16:41:39.762 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-09 16:41:39.768 +05:30 [DBG] Middleware loaded
2025-05-09 16:41:39.770 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-09 16:41:39.772 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-09 16:41:39.851 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-09 16:41:39.968 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-09 16:41:39.970 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-09 16:41:39.971 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-09 16:41:39.971 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-09 16:41:39.972 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-09 16:41:39.973 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-09 16:41:40.060 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-09 16:41:40.065 +05:30 [INF] Hosting environment: Development
2025-05-09 16:41:40.073 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-09 16:41:40.074 +05:30 [DBG] Hosting started
2025-05-09 16:41:40.153 +05:30 [DBG] Connection id "0HNCET92T8V82" accepted.
2025-05-09 16:41:40.153 +05:30 [DBG] Connection id "0HNCET92T8V83" accepted.
2025-05-09 16:41:40.155 +05:30 [DBG] Connection id "0HNCET92T8V83" received FIN.
2025-05-09 16:41:40.167 +05:30 [DBG] Connection id "0HNCET92T8V82" received FIN.
2025-05-09 16:41:40.191 +05:30 [DBG] Connection id "0HNCET92T8V82" started.
2025-05-09 16:41:40.194 +05:30 [DBG] Connection id "0HNCET92T8V83" started.
2025-05-09 16:41:40.228 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 16:41:40.228 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 16:41:40.286 +05:30 [DBG] Connection id "0HNCET92T8V82" stopped.
2025-05-09 16:41:40.286 +05:30 [DBG] Connection id "0HNCET92T8V83" stopped.
2025-05-09 16:41:40.291 +05:30 [DBG] Connection id "0HNCET92T8V83" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 16:41:40.291 +05:30 [DBG] Connection id "0HNCET92T8V82" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 16:41:40.564 +05:30 [DBG] Connection id "0HNCET92T8V84" accepted.
2025-05-09 16:41:40.584 +05:30 [DBG] Connection id "0HNCET92T8V84" started.
2025-05-09 16:41:40.694 +05:30 [DBG] Connection 0HNCET92T8V84 established using the following protocol: "Tls12"
2025-05-09 16:41:40.819 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-09 16:41:40.978 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-09 16:41:40.997 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-09 16:41:40.998 +05:30 [DBG] Request did not match any endpoints
2025-05-09 16:41:41.074 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-09 16:41:41.077 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-09 16:41:41.100 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-09 16:41:41.103 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-09 16:41:41.110 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 310.018ms
2025-05-09 16:41:41.122 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-09 16:41:41.122 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-09 16:41:41.140 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-09 16:41:41.156 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 34.2817ms
2025-05-09 16:41:41.207 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 85.4569ms
2025-05-09 16:41:41.352 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-09 16:41:41.391 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-09 16:41:41.394 +05:30 [DBG] Request did not match any endpoints
2025-05-09 16:41:41.441 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 88.4713ms
2025-05-09 16:49:01.050 +05:30 [INF] Starting up the application...
2025-05-09 16:49:02.169 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-09 16:49:02.275 +05:30 [DBG] Hosting starting
2025-05-09 16:49:02.330 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-09 16:49:02.341 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-09 16:49:02.348 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-09 16:49:02.356 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-09 16:49:02.361 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-09 16:49:02.367 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-09 16:49:02.371 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 16:49:02.375 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-09 16:49:02.377 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 16:49:02.382 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-09 16:49:02.385 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-09 16:49:02.387 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-09 16:49:02.388 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-09 16:49:02.393 +05:30 [DBG] Middleware loaded
2025-05-09 16:49:02.394 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-09 16:49:02.396 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-09 16:49:02.473 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-09 16:49:02.569 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-09 16:49:02.574 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-09 16:49:02.576 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-09 16:49:02.576 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-09 16:49:02.577 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-09 16:49:02.578 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-09 16:49:02.621 +05:30 [DBG] Connection id "0HNCETD6OVPMF" received FIN.
2025-05-09 16:49:02.623 +05:30 [DBG] Connection id "0HNCETD6OVPMF" accepted.
2025-05-09 16:49:02.625 +05:30 [DBG] Connection id "0HNCETD6OVPMF" started.
2025-05-09 16:49:02.641 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 16:49:02.676 +05:30 [DBG] Connection id "0HNCETD6OVPMF" stopped.
2025-05-09 16:49:02.680 +05:30 [DBG] Connection id "0HNCETD6OVPMF" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 16:49:02.684 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-09 16:49:02.685 +05:30 [INF] Hosting environment: Development
2025-05-09 16:49:02.687 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-09 16:49:02.688 +05:30 [DBG] Hosting started
2025-05-09 16:49:03.381 +05:30 [DBG] Connection id "0HNCETD6OVPMG" accepted.
2025-05-09 16:49:03.388 +05:30 [DBG] Connection id "0HNCETD6OVPMG" started.
2025-05-09 16:49:03.450 +05:30 [DBG] Connection 0HNCETD6OVPMG established using the following protocol: "Tls12"
2025-05-09 16:49:03.524 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-09 16:49:03.632 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-09 16:49:03.655 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-09 16:49:03.657 +05:30 [DBG] Request did not match any endpoints
2025-05-09 16:49:03.752 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-09 16:49:03.756 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-09 16:49:03.782 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-09 16:49:03.785 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-09 16:49:03.796 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 282.4162ms
2025-05-09 16:49:03.809 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-09 16:49:03.810 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-09 16:49:03.824 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-09 16:49:03.827 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 17.7304ms
2025-05-09 16:49:03.891 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 80.5966ms
2025-05-09 16:49:04.012 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-09 16:49:04.016 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-09 16:49:04.018 +05:30 [DBG] Request did not match any endpoints
2025-05-09 16:49:04.051 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 39.4433ms
2025-05-09 16:51:14.934 +05:30 [INF] Starting up the application...
2025-05-09 16:51:15.875 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-09 16:51:15.950 +05:30 [DBG] Hosting starting
2025-05-09 16:51:15.986 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-09 16:51:16.000 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-09 16:51:16.007 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-09 16:51:16.012 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-09 16:51:16.016 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-09 16:51:16.021 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-09 16:51:16.026 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 16:51:16.029 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-09 16:51:16.031 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 16:51:16.037 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-09 16:51:16.040 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-09 16:51:16.044 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-09 16:51:16.046 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-09 16:51:16.051 +05:30 [DBG] Middleware loaded
2025-05-09 16:51:16.054 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-09 16:51:16.057 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-09 16:51:16.139 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-09 16:51:16.248 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-09 16:51:16.251 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-09 16:51:16.252 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-09 16:51:16.253 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-09 16:51:16.254 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-09 16:51:16.255 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-09 16:51:16.339 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-09 16:51:16.343 +05:30 [INF] Hosting environment: Development
2025-05-09 16:51:16.345 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-09 16:51:16.347 +05:30 [DBG] Hosting started
2025-05-09 16:51:16.720 +05:30 [DBG] Connection id "0HNCETEENRI7P" accepted.
2025-05-09 16:51:16.720 +05:30 [DBG] Connection id "0HNCETEENRI7O" accepted.
2025-05-09 16:51:16.725 +05:30 [DBG] Connection id "0HNCETEENRI7P" started.
2025-05-09 16:51:16.726 +05:30 [DBG] Connection id "0HNCETEENRI7O" started.
2025-05-09 16:51:16.746 +05:30 [DBG] Connection id "0HNCETEENRI7O" received FIN.
2025-05-09 16:51:16.746 +05:30 [DBG] Connection id "0HNCETEENRI7P" received FIN.
2025-05-09 16:51:16.754 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 16:51:16.755 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 16:51:16.786 +05:30 [DBG] Connection id "0HNCETEENRI7O" stopped.
2025-05-09 16:51:16.786 +05:30 [DBG] Connection id "0HNCETEENRI7P" stopped.
2025-05-09 16:51:16.790 +05:30 [DBG] Connection id "0HNCETEENRI7P" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 16:51:16.790 +05:30 [DBG] Connection id "0HNCETEENRI7O" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 16:51:17.210 +05:30 [DBG] Connection id "0HNCETEENRI7Q" accepted.
2025-05-09 16:51:17.217 +05:30 [DBG] Connection id "0HNCETEENRI7Q" started.
2025-05-09 16:51:17.275 +05:30 [DBG] Connection 0HNCETEENRI7Q established using the following protocol: "Tls12"
2025-05-09 16:51:17.364 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-09 16:51:17.476 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-09 16:51:17.501 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-09 16:51:17.504 +05:30 [DBG] Request did not match any endpoints
2025-05-09 16:51:17.582 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-09 16:51:17.585 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-09 16:51:17.610 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-09 16:51:17.613 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-09 16:51:17.627 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 273.1429ms
2025-05-09 16:51:17.685 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-09 16:51:17.685 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-09 16:51:17.724 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-09 16:51:17.734 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 48.7642ms
2025-05-09 16:51:17.776 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 91.1432ms
2025-05-09 16:51:17.870 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-09 16:51:17.875 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-09 16:51:17.876 +05:30 [DBG] Request did not match any endpoints
2025-05-09 16:51:17.905 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 34.9857ms
2025-05-09 16:51:51.911 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Category/get-all-category - null null
2025-05-09 16:51:51.929 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/get-all-category'
2025-05-09 16:51:51.939 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)' with route pattern 'api/Category/get-all-category' is valid for the request path '/api/Category/get-all-category'
2025-05-09 16:51:51.944 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 16:51:51.951 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 16:51:52.100 +05:30 [DBG] Successfully validated the token.
2025-05-09 16:51:52.105 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 16:51:52.116 +05:30 [DBG] Authorization was successful.
2025-05-09 16:51:52.119 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 16:51:52.150 +05:30 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 16:51:52.155 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 16:51:52.157 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 16:51:52.159 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 16:51:52.162 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 16:51:52.165 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 16:51:52.169 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 16:51:52.298 +05:30 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-05-09 16:51:52.330 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 16:51:53.094 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 16:51:53.144 +05:30 [DBG] Compiling query expression: 
'DbSet<Category>()
    .Where(c => !(c.IsDeleted))
    .OrderBy(c => c.Name)'
2025-05-09 16:51:53.420 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Category>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
        SELECT c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
        FROM Category AS c
        WHERE Not(c.IsDeleted)
        ORDER BY c.Name ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
        SELECT c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
        FROM Category AS c
        WHERE Not(c.IsDeleted)
        ORDER BY c.Name ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Category entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Category instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Category);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Category.CategoryId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Category)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]: 
                        {
                            return 
                            {
                                Category instance;
                                instance = new Category();
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(0);
                                instance.<ActiveStatus>k__BackingField = dataReader.GetBoolean(1);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CreatedBy>k__BackingField = dataReader.GetInt64(3);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                instance.<Name>k__BackingField = dataReader.GetString(5);
                                instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(6);
                                instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Category)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 16:51:53.472 +05:30 [DBG] Creating DbConnection.
2025-05-09 16:51:53.491 +05:30 [DBG] Created DbConnection. (17ms).
2025-05-09 16:51:53.500 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 16:51:53.702 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 16:51:53.707 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 16:51:53.713 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-05-09 16:51:53.717 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (10ms).
2025-05-09 16:51:53.723 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 16:51:53.776 +05:30 [INF] Executed DbCommand (52ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 16:51:53.820 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 16:51:53.862 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 16:51:53.869 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 16:51:53.878 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 16:51:53.887 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 100ms reading results.
2025-05-09 16:51:53.892 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 16:51:53.899 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (6ms).
2025-05-09 16:51:53.902 +05:30 [INF] Fetched 3 categories.
2025-05-09 16:51:53.909 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 16:51:53.915 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 16:51:53.916 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 16:51:53.917 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 16:51:53.918 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 16:51:53.920 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Entity.Category, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 16:51:53.947 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem) in 1776.6796ms
2025-05-09 16:51:53.950 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 16:51:53.954 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 16:51:53.959 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 16:51:53.961 +05:30 [DBG] Disposed connection to database '' on server '' (2ms).
2025-05-09 16:51:53.963 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Category/get-all-category - 200 null application/json; charset=utf-8 2051.6704ms
2025-05-09 17:23:37.647 +05:30 [INF] Starting up the application...
2025-05-09 17:23:38.775 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-09 17:23:38.899 +05:30 [DBG] Hosting starting
2025-05-09 17:23:38.943 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-09 17:23:38.962 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-09 17:23:38.975 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-09 17:23:38.984 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-09 17:23:38.992 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-09 17:23:39.002 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-09 17:23:39.009 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 17:23:39.014 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-09 17:23:39.016 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 17:23:39.024 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-09 17:23:39.026 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-09 17:23:39.029 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-09 17:23:39.031 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-09 17:23:39.039 +05:30 [DBG] Middleware loaded
2025-05-09 17:23:39.041 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-09 17:23:39.043 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-09 17:23:39.161 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-09 17:23:39.287 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-09 17:23:39.290 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-09 17:23:39.291 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-09 17:23:39.293 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-09 17:23:39.294 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-09 17:23:39.296 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-09 17:23:39.415 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-09 17:23:39.418 +05:30 [INF] Hosting environment: Development
2025-05-09 17:23:39.420 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-09 17:23:39.422 +05:30 [DBG] Hosting started
2025-05-09 17:23:39.612 +05:30 [DBG] Connection id "0HNCEU0HON6V4" received FIN.
2025-05-09 17:23:39.623 +05:30 [DBG] Connection id "0HNCEU0HON6V4" accepted.
2025-05-09 17:23:39.627 +05:30 [DBG] Connection id "0HNCEU0HON6V4" started.
2025-05-09 17:23:39.647 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 17:23:39.694 +05:30 [DBG] Connection id "0HNCEU0HON6V4" stopped.
2025-05-09 17:23:39.701 +05:30 [DBG] Connection id "0HNCEU0HON6V4" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 17:23:40.044 +05:30 [DBG] Connection id "0HNCEU0HON6V5" accepted.
2025-05-09 17:23:40.068 +05:30 [DBG] Connection id "0HNCEU0HON6V5" started.
2025-05-09 17:23:40.184 +05:30 [DBG] Connection 0HNCEU0HON6V5 established using the following protocol: "Tls12"
2025-05-09 17:23:40.301 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-09 17:23:40.553 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-09 17:23:40.597 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-09 17:23:40.599 +05:30 [DBG] Request did not match any endpoints
2025-05-09 17:23:40.725 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-09 17:23:40.728 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-09 17:23:40.754 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-09 17:23:40.757 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-09 17:23:40.763 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 480.3646ms
2025-05-09 17:23:40.772 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-09 17:23:40.772 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-09 17:23:40.788 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-09 17:23:40.805 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 34.1138ms
2025-05-09 17:23:40.982 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 209.6288ms
2025-05-09 17:23:41.120 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-09 17:23:41.125 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-09 17:23:41.126 +05:30 [DBG] Request did not match any endpoints
2025-05-09 17:23:41.185 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 64.9577ms
2025-05-09 17:24:11.321 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/login - application/json 57
2025-05-09 17:24:11.344 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/login'
2025-05-09 17:24:11.349 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-05-09 17:24:11.352 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 17:24:11.357 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 17:24:11.433 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 17:24:11.437 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 17:24:11.467 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(InventoryManagementSystem.Models.Request.UserLoginRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-09 17:24:11.478 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 17:24:11.479 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 17:24:11.481 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 17:24:11.483 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 17:24:11.485 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 17:24:11.488 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 17:24:11.619 +05:30 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-05-09 17:24:11.648 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 17:24:11.663 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-09 17:24:11.665 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' using the name '' in request data ...
2025-05-09 17:24:11.668 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 17:24:11.677 +05:30 [DBG] Connection id "0HNCEU0HON6V5", Request id "0HNCEU0HON6V5:00000009": started reading request body.
2025-05-09 17:24:11.678 +05:30 [DBG] Connection id "0HNCEU0HON6V5", Request id "0HNCEU0HON6V5:00000009": done reading request body.
2025-05-09 17:24:11.689 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserLoginRequest'
2025-05-09 17:24:11.691 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 17:24:11.692 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 17:24:11.694 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-09 17:24:11.726 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 17:24:12.532 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 17:24:12.620 +05:30 [DBG] Compiling query expression: 
'DbSet<Users>()
    .Include(u => u.Role)
    .FirstOrDefault(u => u.Email == __email_0 && u.IsDeleted == False)'
2025-05-09 17:24:12.712 +05:30 [DBG] Including navigation: 'Users.Role'.
2025-05-09 17:24:13.027 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Users>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Users>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Users.UserId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Users.CreatedBy (int) Required, 1], [Property: Users.CreatedDate (DateTime) Required, 2], [Property: Users.Email (string) Required MaxLength(100), 3], [Property: Users.IsDeleted (bool) Required, 4], [Property: Users.Name (string) Required MaxLength(100), 5], [Property: Users.Password (string) Required MaxLength(255), 6], [Property: Users.Phone (string) Required MaxLength(15), 7], [Property: Users.RoleId (int) Required FK Index, 8], [Property: Users.UpdatedBy (int) Required, 9], [Property: Users.UpdatedDate (DateTime) Required, 10] }
                1 -> Dictionary<IProperty, int> { [Property: Roles.RoleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Roles.Name (string) Required MaxLength(50), 12] }
            SELECT TOP(1) u.UserId, u.CreatedBy, u.CreatedDate, u.Email, u.IsDeleted, u.Name, u.Password, u.Phone, u.RoleId, u.UpdatedBy, u.UpdatedDate, r.RoleId, r.Name
            FROM Users AS u
            INNER JOIN Roles AS r ON u.RoleId == r.RoleId
            WHERE (u.Email == @__email_0) && (u.IsDeleted == CAST(0 AS bit))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Users.UserId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Users.CreatedBy (int) Required, 1], [Property: Users.CreatedDate (DateTime) Required, 2], [Property: Users.Email (string) Required MaxLength(100), 3], [Property: Users.IsDeleted (bool) Required, 4], [Property: Users.Name (string) Required MaxLength(100), 5], [Property: Users.Password (string) Required MaxLength(255), 6], [Property: Users.Phone (string) Required MaxLength(15), 7], [Property: Users.RoleId (int) Required FK Index, 8], [Property: Users.UpdatedBy (int) Required, 9], [Property: Users.UpdatedDate (DateTime) Required, 10] }
                1 -> Dictionary<IProperty, int> { [Property: Roles.RoleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Roles.Name (string) Required MaxLength(50), 12] }
            SELECT TOP(1) u.UserId, u.CreatedBy, u.CreatedDate, u.Email, u.IsDeleted, u.Name, u.Password, u.Phone, u.RoleId, u.UpdatedBy, u.UpdatedDate, r.RoleId, r.Name
            FROM Users AS u
            INNER JOIN Roles AS r ON u.RoleId == r.RoleId
            WHERE (u.Email == @__email_0) && (u.IsDeleted == CAST(0 AS bit)), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Users entity;
            Roles entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Users instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Users);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Users.UserId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Users)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")]: 
                            {
                                return 
                                {
                                    Users instance;
                                    instance = new Users();
                                    instance.<UserId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CreatedDate>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Email>k__BackingField = dataReader.GetString(3);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    instance.<Password>k__BackingField = dataReader.GetString(6);
                                    instance.<Phone>k__BackingField = dataReader.GetString(7);
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(8);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt32(9);
                                    instance.<UpdatedDate>k__BackingField = dataReader.GetDateTime(10);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Users)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Roles instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Roles);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Roles.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(11) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Roles)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")]: 
                            {
                                return 
                                {
                                    Roles instance;
                                    instance = new Roles();
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(11);
                                    instance.<Name>k__BackingField = dataReader.GetString(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Roles)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Users, Users, Roles>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Users.Role (Roles) ToPrincipal Roles Inverse: Users | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users").FindNavigation("Role")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Roles.Users (ICollection<Users>) Collection ToDependent Users Inverse: Role | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindNavigation("Users")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Role>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Roles, ICollection<Users>, Users> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindNavigation("Users").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 17:24:13.090 +05:30 [DBG] Creating DbConnection.
2025-05-09 17:24:13.109 +05:30 [DBG] Created DbConnection. (18ms).
2025-05-09 17:24:13.115 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:24:13.348 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:24:13.357 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 17:24:13.369 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (8ms).
2025-05-09 17:24:13.384 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (28ms).
2025-05-09 17:24:13.400 +05:30 [DBG] Executing DbCommand [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 17:24:13.482 +05:30 [INF] Executed DbCommand (88ms) [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 17:24:13.557 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Users' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 17:24:13.614 +05:30 [DBG] The navigation 'Users.Role' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 17:24:13.621 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Roles' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 17:24:13.631 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:24:13.639 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 139ms reading results.
2025-05-09 17:24:13.643 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:24:13.648 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (5ms).
2025-05-09 17:24:13.767 +05:30 [INF] User logged in successfully: harsh@gmail.com
2025-05-09 17:24:13.774 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 17:24:13.780 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 17:24:13.781 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 17:24:13.783 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 17:24:13.785 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 17:24:13.787 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.UserLoginResponce, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-09 17:24:13.809 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem) in 2319.6956ms
2025-05-09 17:24:13.812 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 17:24:13.816 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 17:24:13.823 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:24:13.826 +05:30 [DBG] Disposed connection to database '' on server '' (4ms).
2025-05-09 17:24:13.829 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/login - 200 null application/json; charset=utf-8 2507.8069ms
2025-05-09 17:55:57.597 +05:30 [INF] Starting up the application...
2025-05-09 17:55:59.081 +05:30 [DBG] Registered model binder providers, in the following order: ["Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BinderTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ServicesModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.BodyModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.HeaderModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FloatingPointTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.EnumTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DateTimeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.SimpleTypeModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.TryParseModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CancellationTokenModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ByteArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormFileModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.FormCollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.KeyValuePairModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.DictionaryModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ArrayModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.CollectionModelBinderProvider","Microsoft.AspNetCore.Mvc.ModelBinding.Binders.ComplexObjectModelBinderProvider"]
2025-05-09 17:55:59.301 +05:30 [DBG] Hosting starting
2025-05-09 17:55:59.360 +05:30 [INF] User profile is available. Using 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-05-09 17:55:59.377 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-7682999c-ba54-4834-9234-6e14b4f917ea.xml'.
2025-05-09 17:55:59.388 +05:30 [DBG] Reading data from file 'C:\Users\harsh.soni\AppData\Local\ASP.NET\DataProtection-Keys\key-c2a9c552-adb3-4ae1-a785-346d7a880365.xml'.
2025-05-09 17:55:59.394 +05:30 [DBG] Found key {7682999c-ba54-4834-9234-6e14b4f917ea}.
2025-05-09 17:55:59.402 +05:30 [DBG] Found key {c2a9c552-adb3-4ae1-a785-346d7a880365}.
2025-05-09 17:55:59.410 +05:30 [DBG] Considering key {c2a9c552-adb3-4ae1-a785-346d7a880365} with expiration date 2025-08-03 05:21:53Z as default key.
2025-05-09 17:55:59.417 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.XmlEncryption.DpapiXmlDecryptor, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 17:55:59.427 +05:30 [DBG] Decrypting secret element using Windows DPAPI.
2025-05-09 17:55:59.436 +05:30 [DBG] Forwarded activator type request from Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60 to Microsoft.AspNetCore.DataProtection.AuthenticatedEncryption.ConfigurationModel.AuthenticatedEncryptorDescriptorDeserializer, Microsoft.AspNetCore.DataProtection, Culture=neutral, PublicKeyToken=adb9793829ddae60
2025-05-09 17:55:59.451 +05:30 [DBG] Opening CNG algorithm 'AES' from provider 'null' with chaining mode CBC.
2025-05-09 17:55:59.454 +05:30 [DBG] Opening CNG algorithm 'SHA256' from provider 'null' with HMAC.
2025-05-09 17:55:59.458 +05:30 [DBG] Using key {c2a9c552-adb3-4ae1-a785-346d7a880365} as the default key.
2025-05-09 17:55:59.461 +05:30 [DBG] Key ring with default key {c2a9c552-adb3-4ae1-a785-346d7a880365} was loaded during application startup.
2025-05-09 17:55:59.469 +05:30 [DBG] Middleware loaded
2025-05-09 17:55:59.472 +05:30 [DBG] Middleware loaded. Script /_framework/aspnetcore-browser-refresh.js (16535 B).
2025-05-09 17:55:59.474 +05:30 [DBG] Middleware loaded. Script /_framework/blazor-hotreload.js (799 B).
2025-05-09 17:55:59.581 +05:30 [DBG] Middleware loaded: DOTNET_MODIFIABLE_ASSEMBLIES=debug, __ASPNETCORE_BROWSER_TOOLS=true
2025-05-09 17:55:59.720 +05:30 [INF] Now listening on: https://localhost:7150
2025-05-09 17:55:59.725 +05:30 [INF] Now listening on: http://localhost:5248
2025-05-09 17:55:59.728 +05:30 [DBG] Loaded hosting startup assembly InventoryManagementSystem
2025-05-09 17:55:59.731 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.ApiEndpointDiscovery
2025-05-09 17:55:59.734 +05:30 [DBG] Loaded hosting startup assembly Microsoft.AspNetCore.Watch.BrowserRefresh
2025-05-09 17:55:59.736 +05:30 [DBG] Loaded hosting startup assembly Microsoft.WebTools.BrowserLink.Net
2025-05-09 17:55:59.810 +05:30 [DBG] Connection id "0HNCEUIJVSIHG" received FIN.
2025-05-09 17:55:59.822 +05:30 [DBG] Connection id "0HNCEUIJVSIHG" accepted.
2025-05-09 17:55:59.829 +05:30 [DBG] Connection id "0HNCEUIJVSIHG" started.
2025-05-09 17:55:59.855 +05:30 [DBG] Failed to authenticate HTTPS connection.
System.IO.IOException: Received an unexpected EOF or 0 bytes from the transport stream.
   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)
   at System.Net.Security.SslStream.ProcessAuthenticationWithTelemetryAsync(Boolean isAsync, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Https.Internal.HttpsConnectionMiddleware.OnConnectionAsync(ConnectionContext context)
2025-05-09 17:55:59.904 +05:30 [INF] Application started. Press Ctrl+C to shut down.
2025-05-09 17:55:59.908 +05:30 [INF] Hosting environment: Development
2025-05-09 17:55:59.910 +05:30 [INF] Content root path: C:\Users\harsh.soni\Desktop\Inventory Management System Harsh Soni\InventoryManagementSystem
2025-05-09 17:55:59.912 +05:30 [DBG] Connection id "0HNCEUIJVSIHG" stopped.
2025-05-09 17:55:59.913 +05:30 [DBG] Hosting started
2025-05-09 17:55:59.920 +05:30 [DBG] Connection id "0HNCEUIJVSIHG" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 17:56:00.580 +05:30 [DBG] Connection id "0HNCEUIJVSIHH" accepted.
2025-05-09 17:56:00.609 +05:30 [DBG] Connection id "0HNCEUIJVSIHH" started.
2025-05-09 17:56:00.840 +05:30 [DBG] Connection 0HNCEUIJVSIHH established using the following protocol: "Tls12"
2025-05-09 17:56:00.997 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/index.html - null null
2025-05-09 17:56:01.441 +05:30 [DBG] Wildcard detected, all requests with hosts will be allowed.
2025-05-09 17:56:01.498 +05:30 [DBG] No candidates found for the request path '/swagger/index.html'
2025-05-09 17:56:01.503 +05:30 [DBG] Request did not match any endpoints
2025-05-09 17:56:01.707 +05:30 [DBG] Response markup is scheduled to include Browser Link script injection.
2025-05-09 17:56:01.711 +05:30 [DBG] Response markup is scheduled to include browser refresh script injection.
2025-05-09 17:56:01.780 +05:30 [DBG] Response markup was updated to include Browser Link script injection.
2025-05-09 17:56:01.785 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_vs/browserLink - null null
2025-05-09 17:56:01.785 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - null null
2025-05-09 17:56:01.789 +05:30 [DBG] Response markup was updated to include browser refresh script injection.
2025-05-09 17:56:01.813 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/index.html - 200 null text/html;charset=utf-8 826.4054ms
2025-05-09 17:56:01.823 +05:30 [DBG] Script injected: /_framework/aspnetcore-browser-refresh.js
2025-05-09 17:56:01.843 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_framework/aspnetcore-browser-refresh.js - 200 16535 application/javascript; charset=utf-8 58.1632ms
2025-05-09 17:56:01.943 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/_vs/browserLink - 200 null text/javascript; charset=UTF-8 158.0032ms
2025-05-09 17:56:02.106 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - null null
2025-05-09 17:56:02.110 +05:30 [DBG] No candidates found for the request path '/swagger/v1/swagger.json'
2025-05-09 17:56:02.128 +05:30 [DBG] Request did not match any endpoints
2025-05-09 17:56:02.182 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 77.2258ms
2025-05-09 17:58:46.083 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Auth/login - application/json 57
2025-05-09 17:58:46.103 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Auth/login'
2025-05-09 17:58:46.108 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)' with route pattern 'api/Auth/login' is valid for the request path '/api/Auth/login'
2025-05-09 17:58:46.112 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 17:58:46.117 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 17:58:46.230 +05:30 [DBG] AuthenticationScheme: Bearer was not authenticated.
2025-05-09 17:58:46.240 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 17:58:46.304 +05:30 [INF] Route matched with {action = "Login", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(InventoryManagementSystem.Models.Request.UserLoginRequest) on controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem).
2025-05-09 17:58:46.316 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 17:58:46.322 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 17:58:46.327 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 17:58:46.338 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 17:58:46.341 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 17:58:46.346 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 17:58:46.524 +05:30 [DBG] An 'IServiceProvider' was created for internal use by Entity Framework.
2025-05-09 17:58:46.568 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.AuthController (InventoryManagementSystem)
2025-05-09 17:58:46.592 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-09 17:58:46.600 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' using the name '' in request data ...
2025-05-09 17:58:46.609 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 17:58:46.631 +05:30 [DBG] Connection id "0HNCEUIJVSIHH", Request id "0HNCEUIJVSIHH:00000009": started reading request body.
2025-05-09 17:58:46.640 +05:30 [DBG] Connection id "0HNCEUIJVSIHH", Request id "0HNCEUIJVSIHH:00000009": done reading request body.
2025-05-09 17:58:46.666 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UserLoginRequest'
2025-05-09 17:58:46.678 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 17:58:46.683 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 17:58:46.686 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest' ...
2025-05-09 17:58:46.752 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UserLoginRequest'.
2025-05-09 17:58:47.809 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 17:58:47.919 +05:30 [DBG] Compiling query expression: 
'DbSet<Users>()
    .Include(u => u.Role)
    .FirstOrDefault(u => u.Email == __email_0 && u.IsDeleted == False)'
2025-05-09 17:58:48.017 +05:30 [DBG] Including navigation: 'Users.Role'.
2025-05-09 17:58:48.342 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Users>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Users>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Users.UserId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Users.CreatedBy (int) Required, 1], [Property: Users.CreatedDate (DateTime) Required, 2], [Property: Users.Email (string) Required MaxLength(100), 3], [Property: Users.IsDeleted (bool) Required, 4], [Property: Users.Name (string) Required MaxLength(100), 5], [Property: Users.Password (string) Required MaxLength(255), 6], [Property: Users.Phone (string) Required MaxLength(15), 7], [Property: Users.RoleId (int) Required FK Index, 8], [Property: Users.UpdatedBy (int) Required, 9], [Property: Users.UpdatedDate (DateTime) Required, 10] }
                1 -> Dictionary<IProperty, int> { [Property: Roles.RoleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Roles.Name (string) Required MaxLength(50), 12] }
            SELECT TOP(1) u.UserId, u.CreatedBy, u.CreatedDate, u.Email, u.IsDeleted, u.Name, u.Password, u.Phone, u.RoleId, u.UpdatedBy, u.UpdatedDate, r.RoleId, r.Name
            FROM Users AS u
            INNER JOIN Roles AS r ON u.RoleId == r.RoleId
            WHERE (u.Email == @__email_0) && (u.IsDeleted == CAST(0 AS bit))) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Users.UserId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Users.CreatedBy (int) Required, 1], [Property: Users.CreatedDate (DateTime) Required, 2], [Property: Users.Email (string) Required MaxLength(100), 3], [Property: Users.IsDeleted (bool) Required, 4], [Property: Users.Name (string) Required MaxLength(100), 5], [Property: Users.Password (string) Required MaxLength(255), 6], [Property: Users.Phone (string) Required MaxLength(15), 7], [Property: Users.RoleId (int) Required FK Index, 8], [Property: Users.UpdatedBy (int) Required, 9], [Property: Users.UpdatedDate (DateTime) Required, 10] }
                1 -> Dictionary<IProperty, int> { [Property: Roles.RoleId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 11], [Property: Roles.Name (string) Required MaxLength(50), 12] }
            SELECT TOP(1) u.UserId, u.CreatedBy, u.CreatedDate, u.Email, u.IsDeleted, u.Name, u.Password, u.Phone, u.RoleId, u.UpdatedBy, u.UpdatedDate, r.RoleId, r.Name
            FROM Users AS u
            INNER JOIN Roles AS r ON u.RoleId == r.RoleId
            WHERE (u.Email == @__email_0) && (u.IsDeleted == CAST(0 AS bit)), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Users entity;
            Roles entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Users instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Users);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Users.UserId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Users)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")]: 
                            {
                                return 
                                {
                                    Users instance;
                                    instance = new Users();
                                    instance.<UserId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CreatedDate>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<Email>k__BackingField = dataReader.GetString(3);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    instance.<Password>k__BackingField = dataReader.GetString(6);
                                    instance.<Phone>k__BackingField = dataReader.GetString(7);
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(8);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt32(9);
                                    instance.<UpdatedDate>k__BackingField = dataReader.GetDateTime(10);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Users | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Users)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            entity = 
            {
                MaterializationContext materializationContext2;
                IEntityType entityType2;
                Roles instance2;
                InternalEntityEntry entry2;
                bool hasNullKey2;
                materializationContext2 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance2 = default(Roles);
                entry2 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Roles.RoleId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(11) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey2);
                !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                {
                    entityType2 = entry2.EntityType;
                    return instance2 = (Roles)entry2.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot2;
                    shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType2 = [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")];
                    instance2 = switch (entityType2)
                    {
                        case [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")]: 
                            {
                                return 
                                {
                                    Roles instance;
                                    instance = new Roles();
                                    instance.<RoleId>k__BackingField = dataReader.GetInt32(11);
                                    instance.<Name>k__BackingField = dataReader.GetString(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext2.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Roles | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Roles)
                    }
                    ;
                    entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType2, 
                        entity: instance2, 
                        snapshot: shadowSnapshot2);
                    return instance2;
                } : default(void);
                return instance2;
            };
            ShaperProcessingExpressionVisitor.IncludeReference<Users, Users, Roles>(
                queryContext: queryContext, 
                entity: entity, 
                relatedEntity: entity, 
                navigation: [LIFTABLE Constant: Navigation: Users.Role (Roles) ToPrincipal Roles Inverse: Users | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Users").FindNavigation("Role")], 
                inverseNavigation: [LIFTABLE Constant: Navigation: Roles.Users (ICollection<Users>) Collection ToDependent Users Inverse: Role | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindNavigation("Users")], 
                fixup: (namelessParameter{8}, namelessParameter{9}) => 
                {
                    namelessParameter{8}.<Role>k__BackingField = namelessParameter{9};
                    return [LIFTABLE Constant: ClrICollectionAccessor<Roles, ICollection<Users>, Users> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Roles").FindNavigation("Users").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{8}, 
                        forMaterialization: True);
                }, 
                trackingQuery: True);
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 17:58:48.455 +05:30 [DBG] Creating DbConnection.
2025-05-09 17:58:48.480 +05:30 [DBG] Created DbConnection. (20ms).
2025-05-09 17:58:48.491 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:58:48.842 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:58:48.852 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 17:58:48.862 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (5ms).
2025-05-09 17:58:48.872 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (20ms).
2025-05-09 17:58:48.885 +05:30 [DBG] Executing DbCommand [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 17:58:48.984 +05:30 [INF] Executed DbCommand (98ms) [Parameters=[@__email_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[UserId], [u].[CreatedBy], [u].[CreatedDate], [u].[Email], [u].[IsDeleted], [u].[Name], [u].[Password], [u].[Phone], [u].[RoleId], [u].[UpdatedBy], [u].[UpdatedDate], [r].[RoleId], [r].[Name]
FROM [Users] AS [u]
INNER JOIN [Roles] AS [r] ON [u].[RoleId] = [r].[RoleId]
WHERE [u].[Email] = @__email_0 AND [u].[IsDeleted] = CAST(0 AS bit)
2025-05-09 17:58:49.060 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Users' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 17:58:49.115 +05:30 [DBG] The navigation 'Users.Role' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 17:58:49.131 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Roles' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 17:58:49.143 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:58:49.159 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 161ms reading results.
2025-05-09 17:58:49.170 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:58:49.186 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (16ms).
2025-05-09 17:58:49.351 +05:30 [INF] User logged in successfully: harsh@gmail.com
2025-05-09 17:58:49.361 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 17:58:49.375 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 17:58:49.379 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 17:58:49.388 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 17:58:49.390 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 17:58:49.393 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.UserLoginResponce, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-09 17:58:49.417 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem) in 3070.9022ms
2025-05-09 17:58:49.426 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.AuthController.Login (InventoryManagementSystem)'
2025-05-09 17:58:49.434 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 17:58:49.441 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:58:49.445 +05:30 [DBG] Disposed connection to database '' on server '' (3ms).
2025-05-09 17:58:49.447 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Auth/login - 200 null application/json; charset=utf-8 3364.4542ms
2025-05-09 17:59:25.648 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Category/add-category - application/json 25
2025-05-09 17:59:25.669 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/add-category'
2025-05-09 17:59:25.674 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)' with route pattern 'api/Category/add-category' is valid for the request path '/api/Category/add-category'
2025-05-09 17:59:25.679 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 17:59:25.685 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 17:59:25.813 +05:30 [DBG] Successfully validated the token.
2025-05-09 17:59:25.826 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 17:59:25.842 +05:30 [DBG] Authorization was successful.
2025-05-09 17:59:25.845 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 17:59:25.858 +05:30 [INF] Route matched with {action = "AddCategory", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCategory(InventoryManagementSystem.Models.Request.AddCategoryRequest) on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 17:59:25.868 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 17:59:25.875 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 17:59:25.876 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 17:59:25.879 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 17:59:25.886 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 17:59:25.891 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 17:59:25.894 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 17:59:25.896 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' ...
2025-05-09 17:59:25.899 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' using the name '' in request data ...
2025-05-09 17:59:25.905 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 17:59:25.908 +05:30 [DBG] Connection id "0HNCEUIJVSIHH", Request id "0HNCEUIJVSIHH:0000000B": started reading request body.
2025-05-09 17:59:25.910 +05:30 [DBG] Connection id "0HNCEUIJVSIHH", Request id "0HNCEUIJVSIHH:0000000B": done reading request body.
2025-05-09 17:59:25.912 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'
2025-05-09 17:59:25.913 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 17:59:25.925 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 17:59:25.927 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest' ...
2025-05-09 17:59:25.934 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddCategoryRequest'.
2025-05-09 17:59:25.957 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 17:59:25.969 +05:30 [DBG] Compiling query expression: 
'DbSet<Category>()
    .FirstOrDefault(c => c.Name == __name_0 && !(c.IsDeleted))'
2025-05-09 17:59:26.002 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Category>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Category>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
            SELECT TOP(1) c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
            FROM Category AS c
            WHERE (c.Name == @__name_0) && Not(c.IsDeleted)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
            SELECT TOP(1) c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
            FROM Category AS c
            WHERE (c.Name == @__name_0) && Not(c.IsDeleted), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Category instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Category);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.CategoryId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Category)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(0);
                                    instance.<ActiveStatus>k__BackingField = dataReader.GetBoolean(1);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(3);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(6);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 17:59:26.042 +05:30 [DBG] Creating DbConnection.
2025-05-09 17:59:26.043 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 17:59:26.044 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:59:26.047 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:59:26.049 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 17:59:26.051 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 17:59:26.052 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 17:59:26.054 +05:30 [DBG] Executing DbCommand [Parameters=[@__name_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[Name] = @__name_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 17:59:26.069 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__name_0='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[Name] = @__name_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 17:59:26.073 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:59:26.074 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 17:59:26.076 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:59:26.078 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 17:59:26.104 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Category.CategoryId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 17:59:26.129 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 17:59:26.138 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 17:59:26.142 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 17:59:26.157 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 17:59:26.276 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:59:26.282 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:59:26.287 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 17:59:26.289 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 17:59:26.291 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 17:59:26.293 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Category] ([ActiveStatus], [CreatedAt], [CreatedBy], [IsDeleted], [Name], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[CategoryId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-05-09 17:59:26.302 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[@p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Category] ([ActiveStatus], [CreatedAt], [CreatedBy], [IsDeleted], [Name], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[CategoryId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6);
2025-05-09 17:59:26.316 +05:30 [DBG] The foreign key property 'Category.CategoryId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 17:59:26.324 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:59:26.325 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 18ms reading results.
2025-05-09 17:59:26.328 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:59:26.330 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 17:59:26.341 +05:30 [DBG] An entity of type 'Category' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 17:59:26.345 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 17:59:26.348 +05:30 [INF] Category 'Furniture' added successfully by UserId 2.
2025-05-09 17:59:26.350 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 17:59:26.353 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 17:59:26.354 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 17:59:26.355 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 17:59:26.356 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 17:59:26.358 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 17:59:26.362 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem) in 471.398ms
2025-05-09 17:59:26.365 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.AddCategory (InventoryManagementSystem)'
2025-05-09 17:59:26.367 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 17:59:26.369 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:59:26.371 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 17:59:26.372 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Category/add-category - 201 null application/json; charset=utf-8 724.7985ms
2025-05-09 17:59:52.121 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Category/get-all-category - null null
2025-05-09 17:59:52.148 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/get-all-category'
2025-05-09 17:59:52.161 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)' with route pattern 'api/Category/get-all-category' is valid for the request path '/api/Category/get-all-category'
2025-05-09 17:59:52.173 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 17:59:52.175 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 17:59:52.180 +05:30 [DBG] Successfully validated the token.
2025-05-09 17:59:52.188 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 17:59:52.192 +05:30 [DBG] Authorization was successful.
2025-05-09 17:59:52.194 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 17:59:52.202 +05:30 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 17:59:52.207 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 17:59:52.209 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 17:59:52.211 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 17:59:52.214 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 17:59:52.217 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 17:59:52.222 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 17:59:52.227 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 17:59:52.347 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 17:59:52.358 +05:30 [DBG] Compiling query expression: 
'DbSet<Category>()
    .Where(c => !(c.IsDeleted))
    .OrderBy(c => c.Name)'
2025-05-09 17:59:52.378 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Category>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
        SELECT c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
        FROM Category AS c
        WHERE Not(c.IsDeleted)
        ORDER BY c.Name ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
        SELECT c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
        FROM Category AS c
        WHERE Not(c.IsDeleted)
        ORDER BY c.Name ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Category entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Category instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Category);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Category.CategoryId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Category)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]: 
                        {
                            return 
                            {
                                Category instance;
                                instance = new Category();
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(0);
                                instance.<ActiveStatus>k__BackingField = dataReader.GetBoolean(1);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                instance.<CreatedBy>k__BackingField = dataReader.GetInt64(3);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                instance.<Name>k__BackingField = dataReader.GetString(5);
                                instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(6);
                                instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Category)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 17:59:52.422 +05:30 [DBG] Creating DbConnection.
2025-05-09 17:59:52.424 +05:30 [DBG] Created DbConnection. (2ms).
2025-05-09 17:59:52.426 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:59:52.430 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:59:52.432 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 17:59:52.436 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-05-09 17:59:52.439 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-05-09 17:59:52.441 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 17:59:52.451 +05:30 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 17:59:52.460 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 17:59:52.463 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 17:59:52.467 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 17:59:52.470 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 17:59:52.473 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:59:52.475 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 15ms reading results.
2025-05-09 17:59:52.479 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:59:52.484 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (5ms).
2025-05-09 17:59:52.490 +05:30 [INF] Fetched 4 categories.
2025-05-09 17:59:52.492 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 17:59:52.496 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 17:59:52.497 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 17:59:52.502 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 17:59:52.503 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 17:59:52.505 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Entity.Category, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 17:59:52.520 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem) in 297.7601ms
2025-05-09 17:59:52.522 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 17:59:52.525 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 17:59:52.527 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 17:59:52.529 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 17:59:52.531 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Category/get-all-category - 200 null application/json; charset=utf-8 416.615ms
2025-05-09 18:01:05.506 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:7150/api/Category/delete?id=1 - null null
2025-05-09 18:01:05.514 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/delete'
2025-05-09 18:01:05.517 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.DeleteCategory (InventoryManagementSystem)' with route pattern 'api/Category/delete' is valid for the request path '/api/Category/delete'
2025-05-09 18:01:05.519 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.DeleteCategory (InventoryManagementSystem)'
2025-05-09 18:01:05.523 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:01:05.525 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:01:05.526 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:01:05.528 +05:30 [DBG] Authorization was successful.
2025-05-09 18:01:05.529 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.DeleteCategory (InventoryManagementSystem)'
2025-05-09 18:01:05.535 +05:30 [INF] Route matched with {action = "DeleteCategory", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCategory(Int32) on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 18:01:05.538 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:01:05.542 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:01:05.545 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:01:05.548 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:01:05.549 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:01:05.550 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 18:01:05.555 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 18:01:05.562 +05:30 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-05-09 18:01:05.565 +05:30 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-05-09 18:01:05.569 +05:30 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-05-09 18:01:05.572 +05:30 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-05-09 18:01:05.574 +05:30 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-05-09 18:01:05.577 +05:30 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-05-09 18:01:05.582 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:01:05.584 +05:30 [DBG] Compiling query expression: 
'DbSet<Category>()
    .FirstOrDefault(c => c.CategoryId == __categoryId_0 && !(c.IsDeleted))'
2025-05-09 18:01:05.594 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Category>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Category>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
            SELECT TOP(1) c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
            FROM Category AS c
            WHERE (c.CategoryId == @__categoryId_0) && Not(c.IsDeleted)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Category.CategoryId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Category.ActiveStatus (bool) Required, 1], [Property: Category.CreatedAt (DateTime) Required, 2], [Property: Category.CreatedBy (long) Required FK Index, 3], [Property: Category.IsDeleted (bool) Required, 4], [Property: Category.Name (string) Required MaxLength(100), 5], [Property: Category.UpdatedAt (DateTime) Required, 6], [Property: Category.UpdatedBy (long) Required, 7] }
            SELECT TOP(1) c.CategoryId, c.ActiveStatus, c.CreatedAt, c.CreatedBy, c.IsDeleted, c.Name, c.UpdatedAt, c.UpdatedBy
            FROM Category AS c
            WHERE (c.CategoryId == @__categoryId_0) && Not(c.IsDeleted), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Category entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Category instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Category);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Category.CategoryId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt32(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Category)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]: 
                            {
                                return 
                                {
                                    Category instance;
                                    instance = new Category();
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(0);
                                    instance.<ActiveStatus>k__BackingField = dataReader.GetBoolean(1);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(3);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(4);
                                    instance.<Name>k__BackingField = dataReader.GetString(5);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(6);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(7);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Category | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Category")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Category)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 18:01:05.616 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:01:05.617 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 18:01:05.618 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:01:05.619 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:01:05.622 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:01:05.624 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:01:05.626 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:01:05.627 +05:30 [DBG] Executing DbCommand [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:01:05.647 +05:30 [INF] Executed DbCommand (20ms) [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:01:05.650 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:01:05.652 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:01:05.653 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-09 18:01:05.656 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:01:05.659 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 18:01:05.661 +05:30 [DBG] An entity of type 'Category' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:01:05.664 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 18:01:05.665 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 18:01:05.666 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 18:01:05.677 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:01:05.679 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:01:05.681 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:01:05.683 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:01:05.685 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:01:05.687 +05:30 [DBG] Executing DbCommand [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Category] SET [ActiveStatus] = @p0, [CreatedAt] = @p1, [CreatedBy] = @p2, [IsDeleted] = @p3, [Name] = @p4, [UpdatedAt] = @p5, [UpdatedBy] = @p6
OUTPUT 1
WHERE [CategoryId] = @p7;
2025-05-09 18:01:05.707 +05:30 [INF] Executed DbCommand (21ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Category] SET [ActiveStatus] = @p0, [CreatedAt] = @p1, [CreatedBy] = @p2, [IsDeleted] = @p3, [Name] = @p4, [UpdatedAt] = @p5, [UpdatedBy] = @p6
OUTPUT 1
WHERE [CategoryId] = @p7;
2025-05-09 18:01:05.718 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:01:05.719 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-09 18:01:05.728 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:01:05.729 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:01:05.732 +05:30 [DBG] An entity of type 'Category' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:01:05.735 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 18:01:05.738 +05:30 [INF] CategoryId 1 deleted by UserId 2.
2025-05-09 18:01:05.742 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:01:05.754 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:01:05.755 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:01:05.760 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:01:05.764 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:01:05.771 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:01:05.776 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.DeleteCategory (InventoryManagementSystem) in 225.6622ms
2025-05-09 18:01:05.786 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.DeleteCategory (InventoryManagementSystem)'
2025-05-09 18:01:05.788 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:01:05.791 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:01:05.795 +05:30 [DBG] Disposed connection to database '' on server '' (3ms).
2025-05-09 18:01:05.800 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:7150/api/Category/delete?id=1 - 200 null application/json; charset=utf-8 301.7411ms
2025-05-09 18:01:13.333 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Category/get-all-category - null null
2025-05-09 18:01:13.345 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/get-all-category'
2025-05-09 18:01:13.353 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)' with route pattern 'api/Category/get-all-category' is valid for the request path '/api/Category/get-all-category'
2025-05-09 18:01:13.366 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 18:01:13.368 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:01:13.370 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:01:13.373 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:01:13.376 +05:30 [DBG] Authorization was successful.
2025-05-09 18:01:13.377 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 18:01:13.379 +05:30 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 18:01:13.384 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:01:13.386 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:01:13.390 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:01:13.393 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:01:13.394 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:01:13.397 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 18:01:13.398 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 18:01:13.400 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:01:13.406 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:01:13.407 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 18:01:13.408 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:01:13.409 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:01:13.411 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:01:13.412 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:01:13.414 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:01:13.415 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 18:01:13.419 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 18:01:13.424 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:01:13.426 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:01:13.428 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:01:13.430 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:01:13.432 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 8ms reading results.
2025-05-09 18:01:13.435 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:01:13.437 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:01:13.439 +05:30 [INF] Fetched 3 categories.
2025-05-09 18:01:13.443 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:01:13.447 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:01:13.447 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:01:13.449 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:01:13.450 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:01:13.452 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Entity.Category, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:01:13.455 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem) in 58.4866ms
2025-05-09 18:01:13.458 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 18:01:13.460 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:01:13.461 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:01:13.463 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:01:13.464 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Category/get-all-category - 200 null application/json; charset=utf-8 131.0835ms
2025-05-09 18:02:55.051 +05:30 [INF] Request starting HTTP/2 PATCH https://localhost:7150/api/Category/update-status?id=5 - null null
2025-05-09 18:02:55.064 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/update-status'
2025-05-09 18:02:55.067 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.UpdateCategoryStatus (InventoryManagementSystem)' with route pattern 'api/Category/update-status' is valid for the request path '/api/Category/update-status'
2025-05-09 18:02:55.071 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.UpdateCategoryStatus (InventoryManagementSystem)'
2025-05-09 18:02:55.073 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:02:55.075 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:02:55.076 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:02:55.079 +05:30 [DBG] Authorization was successful.
2025-05-09 18:02:55.081 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.UpdateCategoryStatus (InventoryManagementSystem)'
2025-05-09 18:02:55.095 +05:30 [INF] Route matched with {action = "UpdateCategoryStatus", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateCategoryStatus(Int32) on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 18:02:55.100 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:02:55.104 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:02:55.106 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:02:55.109 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:02:55.110 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:02:55.112 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 18:02:55.114 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 18:02:55.118 +05:30 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' ...
2025-05-09 18:02:55.119 +05:30 [DBG] Attempting to bind parameter 'id' of type 'System.Int32' using the name 'id' in request data ...
2025-05-09 18:02:55.120 +05:30 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-05-09 18:02:55.122 +05:30 [DBG] Done attempting to bind parameter 'id' of type 'System.Int32'.
2025-05-09 18:02:55.123 +05:30 [DBG] Attempting to validate the bound parameter 'id' of type 'System.Int32' ...
2025-05-09 18:02:55.125 +05:30 [DBG] Done attempting to validate the bound parameter 'id' of type 'System.Int32'.
2025-05-09 18:02:55.130 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:02:55.134 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:02:55.135 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 18:02:55.136 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:02:55.137 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:02:55.138 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:02:55.140 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:02:55.141 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:02:55.142 +05:30 [DBG] Executing DbCommand [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:02:55.159 +05:30 [INF] Executed DbCommand (17ms) [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:02:55.165 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:02:55.167 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:02:55.168 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 4ms reading results.
2025-05-09 18:02:55.170 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:02:55.172 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:02:55.174 +05:30 [DBG] An entity of type 'Category' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:02:55.176 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 18:02:55.177 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 18:02:55.179 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 18:02:55.182 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:02:55.184 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:02:55.185 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:02:55.187 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:02:55.188 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:02:55.189 +05:30 [DBG] Executing DbCommand [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Category] SET [ActiveStatus] = @p0, [CreatedAt] = @p1, [CreatedBy] = @p2, [IsDeleted] = @p3, [Name] = @p4, [UpdatedAt] = @p5, [UpdatedBy] = @p6
OUTPUT 1
WHERE [CategoryId] = @p7;
2025-05-09 18:02:55.200 +05:30 [INF] Executed DbCommand (11ms) [Parameters=[@p7='?' (DbType = Int32), @p0='?' (DbType = Boolean), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int64), @p3='?' (DbType = Boolean), @p4='?' (Size = 100), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Category] SET [ActiveStatus] = @p0, [CreatedAt] = @p1, [CreatedBy] = @p2, [IsDeleted] = @p3, [Name] = @p4, [UpdatedAt] = @p5, [UpdatedBy] = @p6
OUTPUT 1
WHERE [CategoryId] = @p7;
2025-05-09 18:02:55.203 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:02:55.205 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 18:02:55.206 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:02:55.208 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:02:55.210 +05:30 [DBG] An entity of type 'Category' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:02:55.214 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 18:02:55.217 +05:30 [INF] CategoryId 5 status updated to false by UserId 2.
2025-05-09 18:02:55.219 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:02:55.223 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:02:55.224 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:02:55.226 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:02:55.227 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:02:55.229 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:02:55.233 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.UpdateCategoryStatus (InventoryManagementSystem) in 121.3409ms
2025-05-09 18:02:55.243 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.UpdateCategoryStatus (InventoryManagementSystem)'
2025-05-09 18:02:55.245 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:02:55.248 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:02:55.251 +05:30 [DBG] Disposed connection to database '' on server '' (3ms).
2025-05-09 18:02:55.253 +05:30 [INF] Request finished HTTP/2 PATCH https://localhost:7150/api/Category/update-status?id=5 - 200 null application/json; charset=utf-8 202.0014ms
2025-05-09 18:03:02.039 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Category/get-all-category - null null
2025-05-09 18:03:02.050 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Category/get-all-category'
2025-05-09 18:03:02.055 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)' with route pattern 'api/Category/get-all-category' is valid for the request path '/api/Category/get-all-category'
2025-05-09 18:03:02.068 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 18:03:02.071 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:03:02.072 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:03:02.074 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:03:02.076 +05:30 [DBG] Authorization was successful.
2025-05-09 18:03:02.078 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 18:03:02.083 +05:30 [INF] Route matched with {action = "GetAllCategories", controller = "Category"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllCategories() on controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem).
2025-05-09 18:03:02.087 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:03:02.089 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:03:02.092 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:03:02.094 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:03:02.097 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:03:02.099 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 18:03:02.101 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.CategoryController (InventoryManagementSystem)
2025-05-09 18:03:02.103 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:03:02.107 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:03:02.107 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 18:03:02.108 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:03:02.109 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:03:02.110 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:03:02.111 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 18:03:02.113 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:03:02.116 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 18:03:02.121 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[IsDeleted] = CAST(0 AS bit)
ORDER BY [c].[Name]
2025-05-09 18:03:02.125 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:03:02.126 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:03:02.128 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:03:02.131 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:03:02.132 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 7ms reading results.
2025-05-09 18:03:02.134 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:03:02.136 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:03:02.137 +05:30 [INF] Fetched 3 categories.
2025-05-09 18:03:02.138 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:03:02.142 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:03:02.143 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:03:02.144 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:03:02.146 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:03:02.149 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Entity.Category, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:03:02.152 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem) in 52.8248ms
2025-05-09 18:03:02.155 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.CategoryController.GetAllCategories (InventoryManagementSystem)'
2025-05-09 18:03:02.158 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:03:02.159 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:03:02.161 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:03:02.168 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Category/get-all-category - 200 null application/json; charset=utf-8 128.5645ms
2025-05-09 18:05:30.152 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Product/add-product - application/json 135
2025-05-09 18:05:30.172 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/add-product'
2025-05-09 18:05:30.178 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)' with route pattern 'api/Product/add-product' is valid for the request path '/api/Product/add-product'
2025-05-09 18:05:30.180 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 18:05:30.182 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:05:30.184 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:05:30.185 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:05:30.187 +05:30 [DBG] Authorization was successful.
2025-05-09 18:05:30.189 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 18:05:30.199 +05:30 [INF] Route matched with {action = "AddProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddProduct(InventoryManagementSystem.Models.Request.AddProductRequest) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 18:05:30.202 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:05:30.203 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:05:30.205 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:05:30.208 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:05:30.210 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:05:30.211 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:05:30.213 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:05:30.215 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' ...
2025-05-09 18:05:30.217 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' using the name '' in request data ...
2025-05-09 18:05:30.218 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 18:05:30.227 +05:30 [DBG] Connection id "0HNCEUIJVSIHH", Request id "0HNCEUIJVSIHH:00000017": started reading request body.
2025-05-09 18:05:30.228 +05:30 [DBG] Connection id "0HNCEUIJVSIHH", Request id "0HNCEUIJVSIHH:00000017": done reading request body.
2025-05-09 18:05:30.233 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.AddProductRequest'
2025-05-09 18:05:30.235 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 18:05:30.238 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 18:05:30.245 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' ...
2025-05-09 18:05:30.278 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 18:05:30.287 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:05:30.300 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:05:30.302 +05:30 [DBG] Created DbConnection. (2ms).
2025-05-09 18:05:30.311 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:30.321 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:30.324 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:05:30.333 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (9ms).
2025-05-09 18:05:30.337 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (13ms).
2025-05-09 18:05:30.341 +05:30 [DBG] Executing DbCommand [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:05:30.370 +05:30 [INF] Executed DbCommand (29ms) [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:05:30.381 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Category' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:05:30.386 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:30.389 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 8ms reading results.
2025-05-09 18:05:30.400 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:30.403 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (3ms).
2025-05-09 18:05:30.420 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Products.ProductId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:05:30.465 +05:30 [DBG] The navigation 'Products.Category' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:05:30.473 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:05:30.477 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 18:05:30.478 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 18:05:30.489 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 18:05:30.492 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:30.494 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:30.496 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:05:30.497 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:05:30.499 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:05:30.500 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([AvailableQuantity], [CategoryId], [CreatedAt], [CreatedBy], [Description], [IsDeleted], [LastRestockAt], [MinimumRequiredQuantity], [Name], [Price], [ProductStatus], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[ProductId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12);
2025-05-09 18:05:30.517 +05:30 [INF] Executed DbCommand (17ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Products] ([AvailableQuantity], [CategoryId], [CreatedAt], [CreatedBy], [Description], [IsDeleted], [LastRestockAt], [MinimumRequiredQuantity], [Name], [Price], [ProductStatus], [UpdatedAt], [UpdatedBy])
OUTPUT INSERTED.[ProductId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12);
2025-05-09 18:05:30.523 +05:30 [DBG] The foreign key property 'Products.ProductId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:05:30.527 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:30.528 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 6ms reading results.
2025-05-09 18:05:30.530 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:30.532 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 18:05:30.536 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:05:30.538 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 18:05:30.543 +05:30 [INF] Starting stock movement for ProductId: 4, UserId: 2, Status: "Pending"
2025-05-09 18:05:30.546 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .FirstOrDefault(p => p.ProductId == __productId_0)'
2025-05-09 18:05:30.554 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Products>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Products>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__productId_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__productId_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Products entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Products instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Products);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Products)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                            {
                                return 
                                {
                                    Products instance;
                                    instance = new Products();
                                    instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                    instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Name>k__BackingField = dataReader.GetString(9);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                    instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Products)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 18:05:30.592 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:30.594 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:30.596 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:05:30.597 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:05:30.598 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:05:30.600 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 18:05:30.608 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 18:05:30.616 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:30.618 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 18:05:30.621 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:30.623 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 18:05:30.630 +05:30 [INF] 'NewProductAdded' movement for ProductId: 4
2025-05-09 18:05:30.634 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:05:30.648 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:05:30.651 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:05:30.653 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 18:05:30.654 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 18:05:30.660 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 18:05:30.663 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:30.664 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:30.665 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:05:30.667 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:05:30.668 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:05:30.669 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 18:05:30.684 +05:30 [INF] Executed DbCommand (14ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 18:05:30.691 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:05:30.694 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:30.695 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 6ms reading results.
2025-05-09 18:05:30.697 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:30.699 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:05:30.701 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:05:30.703 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 18:05:30.705 +05:30 [INF] Stock movement successfully for ProductId: 4
2025-05-09 18:05:30.707 +05:30 [INF] Product added successfully: {"ProductId":4,"Name":"Sofa","Description":"kjbe","CategoryId":5,"Price":2000,"AvailableQuantity":0,"MinimumRequiredQuantity":5,"LastRestockAt":"0001-01-01T00:00:00.0000000","CreatedBy":2,"CreatedAt":"2025-05-09T18:05:30.4089213+05:30","UpdatedBy":2,"UpdatedAt":"0001-01-01T00:00:00.0000000","IsDeleted":false,"ProductStatus":3,"CreatedByUser":null,"UpdatedByUser":null,"Category":{"CategoryId":5,"Name":"Furniture","CreatedBy":2,"CreatedAt":"2025-05-09T17:59:26.0812690","UpdatedBy":2,"UpdatedAt":"2025-05-09T18:02:55.1743823","ActiveStatus":false,"IsDeleted":false,"CreatedByUser":null,"$type":"Category"},"StockPurchaseOrderItems":null,"$type":"Products"}
2025-05-09 18:05:30.732 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:05:30.736 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:05:30.737 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:05:30.738 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:05:30.740 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:05:30.742 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:05:30.744 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem) in 532.7616ms
2025-05-09 18:05:30.746 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 18:05:30.748 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:05:30.750 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:30.751 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:05:30.753 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Product/add-product - 201 null application/json; charset=utf-8 601.2503ms
2025-05-09 18:05:42.486 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Product/get-low-stock-product - null null
2025-05-09 18:05:42.505 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/get-low-stock-product'
2025-05-09 18:05:42.507 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)' with route pattern 'api/Product/get-low-stock-product' is valid for the request path '/api/Product/get-low-stock-product'
2025-05-09 18:05:42.513 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)'
2025-05-09 18:05:42.517 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:05:42.519 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:05:42.521 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:05:42.524 +05:30 [DBG] Authorization was successful.
2025-05-09 18:05:42.527 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)'
2025-05-09 18:05:42.538 +05:30 [INF] Route matched with {action = "GetLowStockProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetLowStockProducts() on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 18:05:42.547 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:05:42.552 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:05:42.554 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:05:42.562 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:05:42.565 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:05:42.568 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:05:42.572 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:05:42.581 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:05:42.587 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .Where(p => !(p.IsDeleted) && p.AvailableQuantity <= p.MinimumRequiredQuantity || p.ProductStatus == 4)'
2025-05-09 18:05:42.601 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Products>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
        SELECT p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
        FROM Products AS p
        WHERE Not(p.IsDeleted) && ((p.AvailableQuantity <= p.MinimumRequiredQuantity) || (p.ProductStatus == 4))) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
        SELECT p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
        FROM Products AS p
        WHERE Not(p.IsDeleted) && ((p.AvailableQuantity <= p.MinimumRequiredQuantity) || (p.ProductStatus == 4)), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Products entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Products instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Products);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Products)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                        {
                            return 
                            {
                                Products instance;
                                instance = new Products();
                                instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                instance.<Name>k__BackingField = dataReader.GetString(9);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Products)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 18:05:42.677 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:05:42.680 +05:30 [DBG] Created DbConnection. (2ms).
2025-05-09 18:05:42.681 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:42.682 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:42.684 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:05:42.685 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:05:42.688 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:05:42.689 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND ([p].[AvailableQuantity] <= [p].[MinimumRequiredQuantity] OR [p].[ProductStatus] = 4)
2025-05-09 18:05:42.701 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND ([p].[AvailableQuantity] <= [p].[MinimumRequiredQuantity] OR [p].[ProductStatus] = 4)
2025-05-09 18:05:42.707 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:05:42.712 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:05:42.715 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:42.716 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 10ms reading results.
2025-05-09 18:05:42.718 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:42.719 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:05:42.722 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:05:42.727 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:05:42.728 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:05:42.729 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:05:42.730 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:05:42.731 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.ProductResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:05:42.738 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem) in 170.4349ms
2025-05-09 18:05:42.740 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)'
2025-05-09 18:05:42.742 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:05:42.743 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:05:42.745 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:05:42.746 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Product/get-low-stock-product - 200 null application/json; charset=utf-8 260.5452ms
2025-05-09 18:06:22.161 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Product/add-product - application/json 138
2025-05-09 18:06:22.192 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/add-product'
2025-05-09 18:06:22.198 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)' with route pattern 'api/Product/add-product' is valid for the request path '/api/Product/add-product'
2025-05-09 18:06:22.205 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 18:06:22.207 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:06:22.209 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:06:22.211 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:06:22.222 +05:30 [DBG] Authorization was successful.
2025-05-09 18:06:22.223 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 18:06:22.228 +05:30 [INF] Route matched with {action = "AddProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddProduct(InventoryManagementSystem.Models.Request.AddProductRequest) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 18:06:22.244 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:06:22.256 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:06:22.263 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:06:22.270 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:06:22.273 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:06:22.274 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:06:22.282 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:06:22.284 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' ...
2025-05-09 18:06:22.286 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' using the name '' in request data ...
2025-05-09 18:06:22.289 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 18:06:22.292 +05:30 [DBG] Connection id "0HNCEUIJVSIHH", Request id "0HNCEUIJVSIHH:0000001B": started reading request body.
2025-05-09 18:06:22.296 +05:30 [DBG] Connection id "0HNCEUIJVSIHH", Request id "0HNCEUIJVSIHH:0000001B": done reading request body.
2025-05-09 18:06:22.302 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.AddProductRequest'
2025-05-09 18:06:22.304 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 18:06:22.306 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 18:06:22.308 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest' ...
2025-05-09 18:06:22.313 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.AddProductRequest'.
2025-05-09 18:06:22.317 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:06:22.319 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:06:22.320 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 18:06:22.321 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:06:22.324 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:06:22.325 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:06:22.327 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:06:22.329 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-09 18:06:22.337 +05:30 [DBG] Executing DbCommand [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:06:22.352 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@__categoryId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [c].[CategoryId], [c].[ActiveStatus], [c].[CreatedAt], [c].[CreatedBy], [c].[IsDeleted], [c].[Name], [c].[UpdatedAt], [c].[UpdatedBy]
FROM [Category] AS [c]
WHERE [c].[CategoryId] = @__categoryId_0 AND [c].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:06:22.358 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:06:22.359 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 18:06:22.364 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:06:22.367 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (3ms).
2025-05-09 18:06:22.370 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:06:22.373 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:06:22.374 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:06:22.376 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:06:22.377 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:06:22.381 +05:30 [INF] Executing NotFoundObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:06:22.383 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem) in 108.3668ms
2025-05-09 18:06:22.391 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.AddProduct (InventoryManagementSystem)'
2025-05-09 18:06:22.394 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:06:22.395 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:06:22.399 +05:30 [DBG] Disposed connection to database '' on server '' (3ms).
2025-05-09 18:06:22.401 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Product/add-product - 404 null application/json; charset=utf-8 242.1974ms
2025-05-09 18:06:59.369 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Product/get-low-stock-product - null null
2025-05-09 18:06:59.390 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/get-low-stock-product'
2025-05-09 18:06:59.391 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)' with route pattern 'api/Product/get-low-stock-product' is valid for the request path '/api/Product/get-low-stock-product'
2025-05-09 18:06:59.393 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)'
2025-05-09 18:06:59.397 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:06:59.399 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:06:59.401 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:06:59.402 +05:30 [DBG] Authorization was successful.
2025-05-09 18:06:59.402 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)'
2025-05-09 18:06:59.404 +05:30 [INF] Route matched with {action = "GetLowStockProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetLowStockProducts() on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 18:06:59.407 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:06:59.408 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:06:59.410 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:06:59.415 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:06:59.417 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:06:59.419 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:06:59.421 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:06:59.424 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:06:59.428 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:06:59.429 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 18:06:59.431 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:06:59.433 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:06:59.435 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:06:59.438 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:06:59.440 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-09 18:06:59.441 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND ([p].[AvailableQuantity] <= [p].[MinimumRequiredQuantity] OR [p].[ProductStatus] = 4)
2025-05-09 18:06:59.456 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND ([p].[AvailableQuantity] <= [p].[MinimumRequiredQuantity] OR [p].[ProductStatus] = 4)
2025-05-09 18:06:59.466 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:06:59.473 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:06:59.480 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:06:59.484 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 19ms reading results.
2025-05-09 18:06:59.493 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:06:59.496 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (3ms).
2025-05-09 18:06:59.502 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:06:59.509 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:06:59.510 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:06:59.512 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:06:59.516 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:06:59.518 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.ProductResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:06:59.522 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem) in 102.4064ms
2025-05-09 18:06:59.531 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)'
2025-05-09 18:06:59.535 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:06:59.537 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:06:59.539 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:06:59.541 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Product/get-low-stock-product - 200 null application/json; charset=utf-8 172.3422ms
2025-05-09 18:08:16.260 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Product/update-product - application/json 46
2025-05-09 18:08:16.278 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/update-product'
2025-05-09 18:08:16.283 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)' with route pattern 'api/Product/update-product' is valid for the request path '/api/Product/update-product'
2025-05-09 18:08:16.292 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)'
2025-05-09 18:08:16.295 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:08:16.297 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:08:16.299 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:08:16.300 +05:30 [DBG] Authorization was successful.
2025-05-09 18:08:16.303 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)'
2025-05-09 18:08:16.315 +05:30 [INF] Route matched with {action = "UpdateProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateProduct(InventoryManagementSystem.Models.Request.UpdateProductRequest) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 18:08:16.323 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:08:16.330 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:08:16.337 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:08:16.343 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:08:16.347 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:08:16.349 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:08:16.352 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:08:16.357 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest' ...
2025-05-09 18:08:16.361 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest' using the name '' in request data ...
2025-05-09 18:08:16.363 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 18:08:16.377 +05:30 [DBG] Connection id "0HNCEUIJVSIHH", Request id "0HNCEUIJVSIHH:0000001F": started reading request body.
2025-05-09 18:08:16.380 +05:30 [DBG] Connection id "0HNCEUIJVSIHH", Request id "0HNCEUIJVSIHH:0000001F": done reading request body.
2025-05-09 18:08:16.395 +05:30 [DBG] JSON input formatter threw an exception: The JSON object contains a trailing comma at the end which is not supported in this mode. Change the reader options. Path: $ | LineNumber: 4 | BytePositionInLine: 0.
2025-05-09 18:08:16.397 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest'.
2025-05-09 18:08:16.400 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest'.
2025-05-09 18:08:16.404 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest' ...
2025-05-09 18:08:16.415 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest'.
2025-05-09 18:08:16.419 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 18:08:16.427 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 18:08:16.430 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:08:16.433 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:08:16.435 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 18:08:16.441 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 18:08:16.445 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 18:08:16.480 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem) in 130.4084ms
2025-05-09 18:08:16.502 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)'
2025-05-09 18:08:16.505 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Product/update-product - 400 null application/problem+json; charset=utf-8 244.6989ms
2025-05-09 18:08:26.615 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Product/update-product - application/json 45
2025-05-09 18:08:26.630 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/update-product'
2025-05-09 18:08:26.638 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)' with route pattern 'api/Product/update-product' is valid for the request path '/api/Product/update-product'
2025-05-09 18:08:26.644 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)'
2025-05-09 18:08:26.646 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:08:26.647 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:08:26.648 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:08:26.649 +05:30 [DBG] Authorization was successful.
2025-05-09 18:08:26.651 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)'
2025-05-09 18:08:26.654 +05:30 [INF] Route matched with {action = "UpdateProduct", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateProduct(InventoryManagementSystem.Models.Request.UpdateProductRequest) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 18:08:26.662 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:08:26.664 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:08:26.670 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:08:26.679 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:08:26.684 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:08:26.690 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:08:26.695 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:08:26.698 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest' ...
2025-05-09 18:08:26.700 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest' using the name '' in request data ...
2025-05-09 18:08:26.707 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 18:08:26.710 +05:30 [DBG] Connection id "0HNCEUIJVSIHH", Request id "0HNCEUIJVSIHH:00000021": started reading request body.
2025-05-09 18:08:26.712 +05:30 [DBG] Connection id "0HNCEUIJVSIHH", Request id "0HNCEUIJVSIHH:00000021": done reading request body.
2025-05-09 18:08:26.715 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.UpdateProductRequest'
2025-05-09 18:08:26.717 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest'.
2025-05-09 18:08:26.719 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest'.
2025-05-09 18:08:26.724 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest' ...
2025-05-09 18:08:26.732 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.UpdateProductRequest'.
2025-05-09 18:08:26.746 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:08:26.751 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .FirstOrDefault(p => p.ProductId == __productId_0 && !(p.IsDeleted))'
2025-05-09 18:08:26.778 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Products>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Products>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE (p.ProductId == @__productId_0) && Not(p.IsDeleted)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE (p.ProductId == @__productId_0) && Not(p.IsDeleted), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Products entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Products instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Products);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Products)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                            {
                                return 
                                {
                                    Products instance;
                                    instance = new Products();
                                    instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                    instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Name>k__BackingField = dataReader.GetString(9);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                    instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Products)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 18:08:26.832 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:08:26.833 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 18:08:26.835 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:08:26.839 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:08:26.843 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:08:26.846 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:08:26.847 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:08:26.849 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:08:26.858 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:08:26.862 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:08:26.863 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:08:26.864 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 18:08:26.866 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:08:26.868 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 18:08:26.872 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:08:26.875 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 18:08:26.876 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 18:08:26.878 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 18:08:26.879 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:08:26.880 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:08:26.881 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:08:26.883 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:08:26.884 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:08:26.885 +05:30 [DBG] Executing DbCommand [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
2025-05-09 18:08:26.909 +05:30 [INF] Executed DbCommand (24ms) [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
2025-05-09 18:08:26.913 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:08:26.914 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 18:08:26.916 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:08:26.918 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:08:26.920 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:08:26.922 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 18:08:26.924 +05:30 [INF] Product updated successfully. ID: 4
2025-05-09 18:08:26.925 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:08:26.928 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:08:26.929 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:08:26.930 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:08:26.931 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:08:26.933 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:08:26.935 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem) in 244.5639ms
2025-05-09 18:08:26.937 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.UpdateProduct (InventoryManagementSystem)'
2025-05-09 18:08:26.939 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:08:26.941 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:08:26.942 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:08:26.943 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Product/update-product - 200 null application/json; charset=utf-8 327.9204ms
2025-05-09 18:08:36.034 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Product/get-low-stock-product - null null
2025-05-09 18:08:36.048 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/get-low-stock-product'
2025-05-09 18:08:36.052 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)' with route pattern 'api/Product/get-low-stock-product' is valid for the request path '/api/Product/get-low-stock-product'
2025-05-09 18:08:36.056 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)'
2025-05-09 18:08:36.060 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:08:36.061 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:08:36.062 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:08:36.064 +05:30 [DBG] Authorization was successful.
2025-05-09 18:08:36.065 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)'
2025-05-09 18:08:36.066 +05:30 [INF] Route matched with {action = "GetLowStockProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetLowStockProducts() on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 18:08:36.070 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:08:36.074 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:08:36.076 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:08:36.079 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:08:36.080 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:08:36.082 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:08:36.083 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:08:36.090 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:08:36.095 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:08:36.096 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 18:08:36.097 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:08:36.099 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:08:36.100 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:08:36.101 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:08:36.104 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:08:36.107 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND ([p].[AvailableQuantity] <= [p].[MinimumRequiredQuantity] OR [p].[ProductStatus] = 4)
2025-05-09 18:08:36.116 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND ([p].[AvailableQuantity] <= [p].[MinimumRequiredQuantity] OR [p].[ProductStatus] = 4)
2025-05-09 18:08:36.121 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:08:36.123 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:08:36.125 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:08:36.127 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 5ms reading results.
2025-05-09 18:08:36.129 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:08:36.130 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:08:36.132 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:08:36.135 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:08:36.137 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:08:36.139 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:08:36.141 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:08:36.143 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.ProductResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:08:36.146 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem) in 63.8768ms
2025-05-09 18:08:36.150 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)'
2025-05-09 18:08:36.156 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:08:36.158 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:08:36.159 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:08:36.161 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Product/get-low-stock-product - 200 null application/json; charset=utf-8 127.275ms
2025-05-09 18:08:59.902 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Product/search-products?keyword=sof - null null
2025-05-09 18:08:59.920 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/search-products'
2025-05-09 18:08:59.925 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)' with route pattern 'api/Product/search-products' is valid for the request path '/api/Product/search-products'
2025-05-09 18:08:59.930 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)'
2025-05-09 18:08:59.933 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:08:59.934 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:08:59.935 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:08:59.938 +05:30 [DBG] Authorization was successful.
2025-05-09 18:08:59.939 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)'
2025-05-09 18:08:59.945 +05:30 [INF] Route matched with {action = "SearchProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] SearchProducts(System.String) on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 18:08:59.949 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:08:59.951 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:08:59.953 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:08:59.955 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:08:59.957 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:08:59.959 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:08:59.960 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:08:59.962 +05:30 [DBG] Attempting to bind parameter 'keyword' of type 'System.String' ...
2025-05-09 18:08:59.964 +05:30 [DBG] Attempting to bind parameter 'keyword' of type 'System.String' using the name 'keyword' in request data ...
2025-05-09 18:08:59.966 +05:30 [DBG] Done attempting to bind parameter 'keyword' of type 'System.String'.
2025-05-09 18:08:59.967 +05:30 [DBG] Done attempting to bind parameter 'keyword' of type 'System.String'.
2025-05-09 18:08:59.969 +05:30 [DBG] Attempting to validate the bound parameter 'keyword' of type 'System.String' ...
2025-05-09 18:08:59.970 +05:30 [DBG] Done attempting to validate the bound parameter 'keyword' of type 'System.String'.
2025-05-09 18:08:59.976 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:08:59.991 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .Where(p => !(p.IsDeleted) && p.Name.ToLower().Contains(__ToLower_0))'
2025-05-09 18:09:00.056 +05:30 [DBG] Generated query execution expression: 
'queryContext => 
{
    queryContext.AddParameter(
        name: "__ToLower_0_contains", 
        value: (object)Invoke(queryContext => SqlServerSqlTranslatingExpressionVisitor.ConstructLikePatternParameter(
            queryContext: queryContext, 
            baseParameterName: "__ToLower_0", 
            methodType: Contains), queryContext));
    return SingleQueryingEnumerable.Create<Products>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE Not(p.IsDeleted) && (LOWER(p.Name) LIKE @__ToLower_0_contains ESCAPE N'\')) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE Not(p.IsDeleted) && (LOWER(p.Name) LIKE @__ToLower_0_contains ESCAPE N'\'), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Products entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Products instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Products);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Products)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                            {
                                return 
                                {
                                    Products instance;
                                    instance = new Products();
                                    instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                    instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Name>k__BackingField = dataReader.GetString(9);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                    instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Products)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True);
}'
2025-05-09 18:09:00.103 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:09:00.107 +05:30 [DBG] Created DbConnection. (3ms).
2025-05-09 18:09:00.111 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:09:00.114 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:09:00.117 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:09:00.119 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:09:00.122 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-05-09 18:09:00.128 +05:30 [DBG] Executing DbCommand [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND LOWER([p].[Name]) LIKE @__ToLower_0_contains ESCAPE N'\'
2025-05-09 18:09:00.134 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__ToLower_0_contains='?' (Size = 100)], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND LOWER([p].[Name]) LIKE @__ToLower_0_contains ESCAPE N'\'
2025-05-09 18:09:00.138 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:09:00.140 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:09:00.143 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 5ms reading results.
2025-05-09 18:09:00.144 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:09:00.145 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:09:00.147 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:09:00.150 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:09:00.151 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:09:00.152 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:09:00.152 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:09:00.154 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.ProductResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:09:00.158 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem) in 198.6223ms
2025-05-09 18:09:00.160 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.SearchProducts (InventoryManagementSystem)'
2025-05-09 18:09:00.161 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:09:00.163 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:09:00.164 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:09:00.165 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Product/search-products?keyword=sof - 200 null application/json; charset=utf-8 262.9431ms
2025-05-09 18:09:15.629 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Product/get-low-stock-product - null null
2025-05-09 18:09:15.647 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/get-low-stock-product'
2025-05-09 18:09:15.649 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)' with route pattern 'api/Product/get-low-stock-product' is valid for the request path '/api/Product/get-low-stock-product'
2025-05-09 18:09:15.652 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)'
2025-05-09 18:09:15.653 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:09:15.654 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:09:15.656 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:09:15.658 +05:30 [DBG] Authorization was successful.
2025-05-09 18:09:15.660 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)'
2025-05-09 18:09:15.662 +05:30 [INF] Route matched with {action = "GetLowStockProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetLowStockProducts() on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 18:09:15.665 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:09:15.667 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:09:15.669 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:09:15.671 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:09:15.673 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:09:15.677 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:09:15.679 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:09:15.681 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:09:15.683 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:09:15.684 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 18:09:15.685 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:09:15.686 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:09:15.687 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:09:15.688 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:09:15.691 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:09:15.692 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND ([p].[AvailableQuantity] <= [p].[MinimumRequiredQuantity] OR [p].[ProductStatus] = 4)
2025-05-09 18:09:15.697 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit) AND ([p].[AvailableQuantity] <= [p].[MinimumRequiredQuantity] OR [p].[ProductStatus] = 4)
2025-05-09 18:09:15.700 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:09:15.702 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:09:15.703 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:09:15.705 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 4ms reading results.
2025-05-09 18:09:15.708 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:09:15.710 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:09:15.711 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:09:15.714 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:09:15.715 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:09:15.716 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:09:15.717 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:09:15.718 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.ProductResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:09:15.720 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem) in 43.2199ms
2025-05-09 18:09:15.723 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.GetLowStockProducts (InventoryManagementSystem)'
2025-05-09 18:09:15.725 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:09:15.727 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:09:15.729 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:09:15.731 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Product/get-low-stock-product - 200 null application/json; charset=utf-8 101.8217ms
2025-05-09 18:11:06.023 +05:30 [DBG] Connection id "0HNCEUIJVSIHH" received FIN.
2025-05-09 18:11:06.033 +05:30 [DBG] Connection id "0HNCEUIJVSIHH" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 18:11:06.041 +05:30 [DBG] Connection id "0HNCEUIJVSIHH" is closed. The last processed stream ID was 39.
2025-05-09 18:11:06.058 +05:30 [DBG] The connection queue processing loop for 0HNCEUIJVSIHH completed.
2025-05-09 18:11:06.065 +05:30 [DBG] Connection id "0HNCEUIJVSIHH" stopped.
2025-05-09 18:11:38.323 +05:30 [DBG] Connection id "0HNCEUIJVSIHI" accepted.
2025-05-09 18:11:38.335 +05:30 [DBG] Connection id "0HNCEUIJVSIHI" started.
2025-05-09 18:11:38.345 +05:30 [DBG] Connection 0HNCEUIJVSIHI established using the following protocol: "Tls12"
2025-05-09 18:11:38.380 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Order/customer-order - application/json 96
2025-05-09 18:11:38.441 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/customer-order'
2025-05-09 18:11:38.449 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)' with route pattern 'api/Order/customer-order' is valid for the request path '/api/Order/customer-order'
2025-05-09 18:11:38.460 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 18:11:38.477 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:11:38.480 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:11:38.481 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:11:38.488 +05:30 [DBG] Authorization was successful.
2025-05-09 18:11:38.490 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 18:11:38.498 +05:30 [INF] Route matched with {action = "PlaceOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PlaceOrder(InventoryManagementSystem.Models.Request.CustomerOrderRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 18:11:38.505 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:11:38.508 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:11:38.510 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:11:38.512 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:11:38.514 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:11:38.515 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 18:11:38.522 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 18:11:38.524 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' ...
2025-05-09 18:11:38.526 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' using the name '' in request data ...
2025-05-09 18:11:38.528 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 18:11:38.531 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:00000001": started reading request body.
2025-05-09 18:11:38.533 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:00000001": done reading request body.
2025-05-09 18:11:38.547 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'
2025-05-09 18:11:38.548 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 18:11:38.555 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 18:11:38.559 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' ...
2025-05-09 18:11:38.624 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 18:11:38.626 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 18:11:38.626 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 18:11:38.628 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:11:38.630 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:11:38.631 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 18:11:38.640 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 18:11:38.642 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 18:11:38.644 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem) in 129.0697ms
2025-05-09 18:11:38.647 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 18:11:38.652 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Order/customer-order - 400 null application/problem+json; charset=utf-8 272.5593ms
2025-05-09 18:13:07.375 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Order/customer-order - application/json 96
2025-05-09 18:13:07.390 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/customer-order'
2025-05-09 18:13:07.394 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)' with route pattern 'api/Order/customer-order' is valid for the request path '/api/Order/customer-order'
2025-05-09 18:13:07.397 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 18:13:07.399 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:13:07.400 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:13:07.401 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:13:07.403 +05:30 [DBG] Authorization was successful.
2025-05-09 18:13:07.405 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 18:13:07.409 +05:30 [INF] Route matched with {action = "PlaceOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PlaceOrder(InventoryManagementSystem.Models.Request.CustomerOrderRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 18:13:07.413 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:13:07.414 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:13:07.415 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:13:07.418 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:13:07.420 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:13:07.422 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 18:13:07.426 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 18:13:07.435 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' ...
2025-05-09 18:13:07.438 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' using the name '' in request data ...
2025-05-09 18:13:07.444 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 18:13:07.451 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:00000003": started reading request body.
2025-05-09 18:13:07.456 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:00000003": done reading request body.
2025-05-09 18:13:07.463 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'
2025-05-09 18:13:07.466 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 18:13:07.468 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 18:13:07.470 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' ...
2025-05-09 18:13:07.476 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 18:13:07.483 +05:30 [INF] Starting order placement for userId: 2
2025-05-09 18:13:07.487 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:13:07.494 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:13:07.496 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 18:13:07.497 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:13:07.499 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:13:07.501 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:13:07.503 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:13:07.504 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:13:07.507 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:13:07.534 +05:30 [INF] Executed DbCommand (28ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:13:07.545 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:13:07.548 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:13:07.549 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 4ms reading results.
2025-05-09 18:13:07.552 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:13:07.554 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:13:07.556 +05:30 [WRN] Invalid or insufficient stock for product 4
2025-05-09 18:13:07.559 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:13:07.564 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:13:07.565 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:13:07.566 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:13:07.567 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:13:07.568 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:13:07.570 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem) in 148.2254ms
2025-05-09 18:13:07.572 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 18:13:07.575 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:13:07.580 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:13:07.582 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:13:07.584 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Order/customer-order - 400 null application/json; charset=utf-8 209.8532ms
2025-05-09 18:17:36.620 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/StockPurchaseOrder/purchase-order - application/json 165
2025-05-09 18:17:36.644 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/purchase-order'
2025-05-09 18:17:36.648 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/purchase-order' is valid for the request path '/api/StockPurchaseOrder/purchase-order'
2025-05-09 18:17:36.653 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 18:17:36.655 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:17:36.657 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:17:36.659 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:17:36.661 +05:30 [DBG] Authorization was successful.
2025-05-09 18:17:36.667 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 18:17:36.680 +05:30 [INF] Route matched with {action = "CreateStockPurchaseOrder", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateStockPurchaseOrder(InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 18:17:36.687 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:17:36.690 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:17:36.693 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:17:36.699 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:17:36.700 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:17:36.703 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 18:17:36.707 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 18:17:36.712 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' ...
2025-05-09 18:17:36.716 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' using the name '' in request data ...
2025-05-09 18:17:36.717 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 18:17:36.720 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:00000005": started reading request body.
2025-05-09 18:17:36.722 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:00000005": done reading request body.
2025-05-09 18:17:36.727 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'
2025-05-09 18:17:36.732 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 18:17:36.734 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 18:17:36.738 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest' ...
2025-05-09 18:17:36.786 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderRequest'.
2025-05-09 18:17:36.794 +05:30 [INF] Creating stock purchase order for VendorId: 1 by UserId: 2
2025-05-09 18:17:36.832 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:17:36.845 +05:30 [DBG] Compiling query expression: 
'DbSet<VendorDetails>()
    .FirstOrDefault(v => v.VendorId == __vendorId_0 && !(v.IsDeleted))'
2025-05-09 18:17:36.871 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<VendorDetails>(
    asyncEnumerable: SingleQueryingEnumerable.Create<VendorDetails>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: VendorDetails.VendorId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: VendorDetails.Address (string) Required MaxLength(500), 1], [Property: VendorDetails.City (string) Required MaxLength(50), 2], [Property: VendorDetails.Country (string) Required MaxLength(50), 3], [Property: VendorDetails.CreatedAt (DateTime) Required, 4], [Property: VendorDetails.CreatedBy (long) Required FK Index, 5], [Property: VendorDetails.Email (string) Required MaxLength(100), 6], [Property: VendorDetails.IsDeleted (bool) Required, 7], [Property: VendorDetails.Name (string) Required MaxLength(50), 8], [Property: VendorDetails.Phone (string) Required MaxLength(15), 9], [Property: VendorDetails.Pincode (string) Required MaxLength(10), 10], [Property: VendorDetails.State (string) Required MaxLength(50), 11], [Property: VendorDetails.StoreName (string) Required MaxLength(100), 12], [Property: VendorDetails.UpdatedAt (DateTime) Required, 13], [Property: VendorDetails.UpdatedBy (long) Required, 14] }
            SELECT TOP(1) v.VendorId, v.Address, v.City, v.Country, v.CreatedAt, v.CreatedBy, v.Email, v.IsDeleted, v.Name, v.Phone, v.Pincode, v.State, v.StoreName, v.UpdatedAt, v.UpdatedBy
            FROM VendorDetails AS v
            WHERE (v.VendorId == @__vendorId_0) && Not(v.IsDeleted)) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: VendorDetails.VendorId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: VendorDetails.Address (string) Required MaxLength(500), 1], [Property: VendorDetails.City (string) Required MaxLength(50), 2], [Property: VendorDetails.Country (string) Required MaxLength(50), 3], [Property: VendorDetails.CreatedAt (DateTime) Required, 4], [Property: VendorDetails.CreatedBy (long) Required FK Index, 5], [Property: VendorDetails.Email (string) Required MaxLength(100), 6], [Property: VendorDetails.IsDeleted (bool) Required, 7], [Property: VendorDetails.Name (string) Required MaxLength(50), 8], [Property: VendorDetails.Phone (string) Required MaxLength(15), 9], [Property: VendorDetails.Pincode (string) Required MaxLength(10), 10], [Property: VendorDetails.State (string) Required MaxLength(50), 11], [Property: VendorDetails.StoreName (string) Required MaxLength(100), 12], [Property: VendorDetails.UpdatedAt (DateTime) Required, 13], [Property: VendorDetails.UpdatedBy (long) Required, 14] }
            SELECT TOP(1) v.VendorId, v.Address, v.City, v.Country, v.CreatedAt, v.CreatedBy, v.Email, v.IsDeleted, v.Name, v.Phone, v.Pincode, v.State, v.StoreName, v.UpdatedAt, v.UpdatedBy
            FROM VendorDetails AS v
            WHERE (v.VendorId == @__vendorId_0) && Not(v.IsDeleted), 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            VendorDetails entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                VendorDetails instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(VendorDetails);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: VendorDetails.VendorId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (VendorDetails)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")]: 
                            {
                                return 
                                {
                                    VendorDetails instance;
                                    instance = new VendorDetails();
                                    instance.<VendorId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<Address>k__BackingField = dataReader.GetString(1);
                                    instance.<City>k__BackingField = dataReader.GetString(2);
                                    instance.<Country>k__BackingField = dataReader.GetString(3);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(4);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(5);
                                    instance.<Email>k__BackingField = dataReader.GetString(6);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(7);
                                    instance.<Name>k__BackingField = dataReader.GetString(8);
                                    instance.<Phone>k__BackingField = dataReader.GetString(9);
                                    instance.<Pincode>k__BackingField = dataReader.GetString(10);
                                    instance.<State>k__BackingField = dataReader.GetString(11);
                                    instance.<StoreName>k__BackingField = dataReader.GetString(12);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(13);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(14);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(VendorDetails)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 18:17:36.899 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:17:36.900 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 18:17:36.900 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:17:36.902 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:17:36.903 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:17:36.904 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 18:17:36.905 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:17:36.906 +05:30 [DBG] Executing DbCommand [Parameters=[@__vendorId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [VendorDetails] AS [v]
WHERE [v].[VendorId] = @__vendorId_0 AND [v].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:17:36.919 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__vendorId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [VendorDetails] AS [v]
WHERE [v].[VendorId] = @__vendorId_0 AND [v].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:17:36.924 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'VendorDetails' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:17:36.947 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:17:36.949 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 26ms reading results.
2025-05-09 18:17:36.950 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:17:36.952 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:17:36.959 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StockPurchaseOrders.StockPurchaseOrderId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:17:36.985 +05:30 [DBG] The navigation 'StockPurchaseOrders.VendorDetails' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:17:36.991 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:17:36.998 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StockPurchaseOrderItems.StockPurchaseOrderItemId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:17:37.012 +05:30 [DBG] The navigation 'StockPurchaseOrderItems.StockPurchaseOrder' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:17:37.016 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:17:37.018 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 18:17:37.020 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 18:17:37.040 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 18:17:37.054 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:17:37.059 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:17:37.068 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-09 18:17:37.083 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-09 18:17:37.089 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:17:37.090 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:17:37.095 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (6ms).
2025-05-09 18:17:37.099 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int64), @p8='?' (DbType = DateTime2), @p9='?' (DbType = Int32), @p10='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StockPurchaseOrders] ([NumberOfItem], [OrderRecivedDate], [OrderStatusId], [PaymentDate], [PaymentMethodId], [PaymentStatusId], [PaymentTypeId], [PurchaseBy], [PurchaseDate], [TotalNumberOfQuantity], [TotalPrice], [UpdatedAt], [UpdatedBy], [VendorId])
OUTPUT INSERTED.[StockPurchaseOrderId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13);
2025-05-09 18:17:37.127 +05:30 [INF] Executed DbCommand (28ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int64), @p8='?' (DbType = DateTime2), @p9='?' (DbType = Int32), @p10='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StockPurchaseOrders] ([NumberOfItem], [OrderRecivedDate], [OrderStatusId], [PaymentDate], [PaymentMethodId], [PaymentStatusId], [PaymentTypeId], [PurchaseBy], [PurchaseDate], [TotalNumberOfQuantity], [TotalPrice], [UpdatedAt], [UpdatedBy], [VendorId])
OUTPUT INSERTED.[StockPurchaseOrderId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11, @p12, @p13);
2025-05-09 18:17:37.133 +05:30 [DBG] The foreign key property 'StockPurchaseOrders.StockPurchaseOrderId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:17:37.139 +05:30 [DBG] The foreign key property 'StockPurchaseOrderItems.StockPurchaseOrderId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:17:37.145 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:17:37.146 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 14ms reading results.
2025-05-09 18:17:37.148 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:17:37.149 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 18:17:37.151 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:17:37.152 +05:30 [DBG] Executing DbCommand [Parameters=[@p14='?' (DbType = Int32), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Int64), @p17='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p18='?' (DbType = Int32), @p19='?' (DbType = Int64), @p20='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StockPurchaseOrderItems] ([OrderItemStatus], [OrderRecivedDate], [ProductId], [ProductPrice], [Quantity], [StockPurchaseOrderId], [TotalPrice])
OUTPUT INSERTED.[StockPurchaseOrderItemId]
VALUES (@p14, @p15, @p16, @p17, @p18, @p19, @p20);
2025-05-09 18:17:37.161 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@p14='?' (DbType = Int32), @p15='?' (DbType = DateTime2), @p16='?' (DbType = Int64), @p17='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p18='?' (DbType = Int32), @p19='?' (DbType = Int64), @p20='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StockPurchaseOrderItems] ([OrderItemStatus], [OrderRecivedDate], [ProductId], [ProductPrice], [Quantity], [StockPurchaseOrderId], [TotalPrice])
OUTPUT INSERTED.[StockPurchaseOrderItemId]
VALUES (@p14, @p15, @p16, @p17, @p18, @p19, @p20);
2025-05-09 18:17:37.165 +05:30 [DBG] The foreign key property 'StockPurchaseOrderItems.StockPurchaseOrderItemId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:17:37.167 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:17:37.168 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-09 18:17:37.173 +05:30 [DBG] Committing transaction.
2025-05-09 18:17:37.179 +05:30 [DBG] Committed transaction.
2025-05-09 18:17:37.181 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:17:37.182 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:17:37.186 +05:30 [DBG] Disposing transaction.
2025-05-09 18:17:37.187 +05:30 [DBG] An entity of type 'StockPurchaseOrders' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:17:37.190 +05:30 [DBG] An entity of type 'StockPurchaseOrderItems' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:17:37.193 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 2 entities written to the database.
2025-05-09 18:17:37.194 +05:30 [INF] Stock purchase order created successfully for VendorId: 1
2025-05-09 18:17:37.196 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:17:37.199 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:17:37.200 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:17:37.201 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:17:37.202 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:17:37.204 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:17:37.207 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem) in 503.668ms
2025-05-09 18:17:37.209 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.CreateStockPurchaseOrder (InventoryManagementSystem)'
2025-05-09 18:17:37.211 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:17:37.212 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:17:37.214 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:17:37.216 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/StockPurchaseOrder/purchase-order - 201 null application/json; charset=utf-8 596.722ms
2025-05-09 18:18:36.939 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/StockPurchaseOrder/4 - null null
2025-05-09 18:18:36.957 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/4'
2025-05-09 18:18:36.958 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/{orderId}' is valid for the request path '/api/StockPurchaseOrder/4'
2025-05-09 18:18:36.961 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)'
2025-05-09 18:18:36.962 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:18:36.964 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:18:36.966 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:18:36.968 +05:30 [DBG] Authorization was successful.
2025-05-09 18:18:36.969 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)'
2025-05-09 18:18:36.973 +05:30 [INF] Route matched with {action = "GetStockPurchaseOrderDetails", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStockPurchaseOrderDetails(Int64) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 18:18:36.977 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:18:36.979 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:18:36.983 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:18:37.000 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:18:37.007 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:18:37.010 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 18:18:37.013 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 18:18:37.018 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' ...
2025-05-09 18:18:37.020 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' using the name 'orderId' in request data ...
2025-05-09 18:18:37.021 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-09 18:18:37.023 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-09 18:18:37.024 +05:30 [DBG] Attempting to validate the bound parameter 'orderId' of type 'System.Int64' ...
2025-05-09 18:18:37.026 +05:30 [DBG] Done attempting to validate the bound parameter 'orderId' of type 'System.Int64'.
2025-05-09 18:18:37.029 +05:30 [INF] Fetching stock purchase order details for OrderId: 4
2025-05-09 18:18:37.033 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:18:37.038 +05:30 [DBG] Compiling query expression: 
'DbSet<StockPurchaseOrders>()
    .Include(o => o.VendorDetails)
    .Include(o => o.StockPurchaseOrderItems)
    .ThenInclude(i => i.Product)
    .FirstOrDefault(o => o.StockPurchaseOrderId == __orderId_0)'
2025-05-09 18:18:37.042 +05:30 [DBG] Including navigation: 'StockPurchaseOrders.VendorDetails'.
2025-05-09 18:18:37.044 +05:30 [DBG] Including navigation: 'StockPurchaseOrders.StockPurchaseOrderItems'.
2025-05-09 18:18:37.048 +05:30 [DBG] Including navigation: 'StockPurchaseOrderItems.Product'.
2025-05-09 18:18:37.153 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<StockPurchaseOrders>(
    asyncEnumerable: SingleQueryingEnumerable.Create<StockPurchaseOrders>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrders.StockPurchaseOrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: StockPurchaseOrders.NumberOfItem (int) Required, 1], [Property: StockPurchaseOrders.OrderRecivedDate (DateTime) Required, 2], [Property: StockPurchaseOrders.OrderStatusId (int) Required FK Index, 3], [Property: StockPurchaseOrders.PaymentDate (DateTime) Required, 4], [Property: StockPurchaseOrders.PaymentMethodId (int) Required FK Index, 5], [Property: StockPurchaseOrders.PaymentStatusId (int) Required FK Index, 6], [Property: StockPurchaseOrders.PaymentTypeId (int) Required FK Index, 7], [Property: StockPurchaseOrders.PurchaseBy (long) Required, 8], [Property: StockPurchaseOrders.PurchaseDate (DateTime) Required, 9], [Property: StockPurchaseOrders.TotalNumberOfQuantity (int) Required, 10], [Property: StockPurchaseOrders.TotalPrice (decimal) Required, 11], [Property: StockPurchaseOrders.UpdatedAt (DateTime) Required, 12], [Property: StockPurchaseOrders.UpdatedBy (long) Required FK Index, 13], [Property: StockPurchaseOrders.VendorId (long) Required FK Index, 14] }
                1 -> Dictionary<IProperty, int> { [Property: VendorDetails.VendorId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: VendorDetails.Address (string) Required MaxLength(500), 16], [Property: VendorDetails.City (string) Required MaxLength(50), 17], [Property: VendorDetails.Country (string) Required MaxLength(50), 18], [Property: VendorDetails.CreatedAt (DateTime) Required, 19], [Property: VendorDetails.CreatedBy (long) Required FK Index, 20], [Property: VendorDetails.Email (string) Required MaxLength(100), 21], [Property: VendorDetails.IsDeleted (bool) Required, 22], [Property: VendorDetails.Name (string) Required MaxLength(50), 23], [Property: VendorDetails.Phone (string) Required MaxLength(15), 24], [Property: VendorDetails.Pincode (string) Required MaxLength(10), 25], [Property: VendorDetails.State (string) Required MaxLength(50), 26], [Property: VendorDetails.StoreName (string) Required MaxLength(100), 27], [Property: VendorDetails.UpdatedAt (DateTime) Required, 28], [Property: VendorDetails.UpdatedBy (long) Required, 29] }
                2 -> 0
                3 -> 15
                4 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrderItems.StockPurchaseOrderItemId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 30], [Property: StockPurchaseOrderItems.OrderItemStatus (int) Required FK Index, 31], [Property: StockPurchaseOrderItems.OrderRecivedDate (DateTime) Required, 32], [Property: StockPurchaseOrderItems.ProductId (long) Required FK Index, 33], [Property: StockPurchaseOrderItems.ProductPrice (decimal) Required, 34], [Property: StockPurchaseOrderItems.Quantity (int) Required, 35], [Property: StockPurchaseOrderItems.StockPurchaseOrderId (long) Required FK Index, 36], [Property: StockPurchaseOrderItems.TotalPrice (decimal) Required, 37] }
                5 -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 38], [Property: Products.AvailableQuantity (int) Required, 39], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 40], [Property: Products.CreatedAt (DateTime) Required, 41], [Property: Products.CreatedBy (long) Required FK Index, 42], [Property: Products.Description (string) MaxLength(225), 43], [Property: Products.IsDeleted (bool) Required, 44], [Property: Products.LastRestockAt (DateTime) Required, 45], [Property: Products.MinimumRequiredQuantity (int) Required, 46], [Property: Products.Name (string) Required MaxLength(100), 47], [Property: Products.Price (decimal) Required, 48], [Property: Products.ProductStatus (int) Required, 49], [Property: Products.UpdatedAt (DateTime) Required, 50], [Property: Products.UpdatedBy (long) Required FK Index, 51] }
                6 -> 30
                7 -> 38
            SELECT s1.StockPurchaseOrderId, s1.NumberOfItem, s1.OrderRecivedDate, s1.OrderStatusId, s1.PaymentDate, s1.PaymentMethodId, s1.PaymentStatusId, s1.PaymentTypeId, s1.PurchaseBy, s1.PurchaseDate, s1.TotalNumberOfQuantity, s1.TotalPrice, s1.UpdatedAt, s1.UpdatedBy, s1.VendorId, s1.VendorId0, s1.Address, s1.City, s1.Country, s1.CreatedAt, s1.CreatedBy, s1.Email, s1.IsDeleted, s1.Name, s1.Phone, s1.Pincode, s1.State, s1.StoreName, s1.UpdatedAt0, s1.UpdatedBy0, s2.StockPurchaseOrderItemId, s2.OrderItemStatus, s2.OrderRecivedDate, s2.ProductId, s2.ProductPrice, s2.Quantity, s2.StockPurchaseOrderId, s2.TotalPrice, s2.ProductId0, s2.AvailableQuantity, s2.CategoryId, s2.CreatedAt, s2.CreatedBy, s2.Description, s2.IsDeleted, s2.LastRestockAt, s2.MinimumRequiredQuantity, s2.Name, s2.Price, s2.ProductStatus, s2.UpdatedAt, s2.UpdatedBy
            FROM 
            (
                SELECT TOP(1) s.StockPurchaseOrderId, s.NumberOfItem, s.OrderRecivedDate, s.OrderStatusId, s.PaymentDate, s.PaymentMethodId, s.PaymentStatusId, s.PaymentTypeId, s.PurchaseBy, s.PurchaseDate, s.TotalNumberOfQuantity, s.TotalPrice, s.UpdatedAt, s.UpdatedBy, s.VendorId, v.VendorId AS VendorId0, v.Address, v.City, v.Country, v.CreatedAt, v.CreatedBy, v.Email, v.IsDeleted, v.Name, v.Phone, v.Pincode, v.State, v.StoreName, v.UpdatedAt AS UpdatedAt0, v.UpdatedBy AS UpdatedBy0
                FROM StockPurchaseOrders AS s
                INNER JOIN VendorDetails AS v ON s.VendorId == v.VendorId
                WHERE s.StockPurchaseOrderId == @__orderId_0
            ) AS s1
            LEFT JOIN 
            (
                SELECT s0.StockPurchaseOrderItemId, s0.OrderItemStatus, s0.OrderRecivedDate, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.StockPurchaseOrderId, s0.TotalPrice, p.ProductId AS ProductId0, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
                FROM StockPurchaseOrderItems AS s0
                INNER JOIN Products AS p ON s0.ProductId == p.ProductId
            ) AS s2 ON s1.StockPurchaseOrderId == s2.StockPurchaseOrderId
            ORDER BY s1.StockPurchaseOrderId ASC, s1.VendorId0 ASC, s2.StockPurchaseOrderItemId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrders.StockPurchaseOrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: StockPurchaseOrders.NumberOfItem (int) Required, 1], [Property: StockPurchaseOrders.OrderRecivedDate (DateTime) Required, 2], [Property: StockPurchaseOrders.OrderStatusId (int) Required FK Index, 3], [Property: StockPurchaseOrders.PaymentDate (DateTime) Required, 4], [Property: StockPurchaseOrders.PaymentMethodId (int) Required FK Index, 5], [Property: StockPurchaseOrders.PaymentStatusId (int) Required FK Index, 6], [Property: StockPurchaseOrders.PaymentTypeId (int) Required FK Index, 7], [Property: StockPurchaseOrders.PurchaseBy (long) Required, 8], [Property: StockPurchaseOrders.PurchaseDate (DateTime) Required, 9], [Property: StockPurchaseOrders.TotalNumberOfQuantity (int) Required, 10], [Property: StockPurchaseOrders.TotalPrice (decimal) Required, 11], [Property: StockPurchaseOrders.UpdatedAt (DateTime) Required, 12], [Property: StockPurchaseOrders.UpdatedBy (long) Required FK Index, 13], [Property: StockPurchaseOrders.VendorId (long) Required FK Index, 14] }
                1 -> Dictionary<IProperty, int> { [Property: VendorDetails.VendorId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: VendorDetails.Address (string) Required MaxLength(500), 16], [Property: VendorDetails.City (string) Required MaxLength(50), 17], [Property: VendorDetails.Country (string) Required MaxLength(50), 18], [Property: VendorDetails.CreatedAt (DateTime) Required, 19], [Property: VendorDetails.CreatedBy (long) Required FK Index, 20], [Property: VendorDetails.Email (string) Required MaxLength(100), 21], [Property: VendorDetails.IsDeleted (bool) Required, 22], [Property: VendorDetails.Name (string) Required MaxLength(50), 23], [Property: VendorDetails.Phone (string) Required MaxLength(15), 24], [Property: VendorDetails.Pincode (string) Required MaxLength(10), 25], [Property: VendorDetails.State (string) Required MaxLength(50), 26], [Property: VendorDetails.StoreName (string) Required MaxLength(100), 27], [Property: VendorDetails.UpdatedAt (DateTime) Required, 28], [Property: VendorDetails.UpdatedBy (long) Required, 29] }
                2 -> 0
                3 -> 15
                4 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrderItems.StockPurchaseOrderItemId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 30], [Property: StockPurchaseOrderItems.OrderItemStatus (int) Required FK Index, 31], [Property: StockPurchaseOrderItems.OrderRecivedDate (DateTime) Required, 32], [Property: StockPurchaseOrderItems.ProductId (long) Required FK Index, 33], [Property: StockPurchaseOrderItems.ProductPrice (decimal) Required, 34], [Property: StockPurchaseOrderItems.Quantity (int) Required, 35], [Property: StockPurchaseOrderItems.StockPurchaseOrderId (long) Required FK Index, 36], [Property: StockPurchaseOrderItems.TotalPrice (decimal) Required, 37] }
                5 -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 38], [Property: Products.AvailableQuantity (int) Required, 39], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 40], [Property: Products.CreatedAt (DateTime) Required, 41], [Property: Products.CreatedBy (long) Required FK Index, 42], [Property: Products.Description (string) MaxLength(225), 43], [Property: Products.IsDeleted (bool) Required, 44], [Property: Products.LastRestockAt (DateTime) Required, 45], [Property: Products.MinimumRequiredQuantity (int) Required, 46], [Property: Products.Name (string) Required MaxLength(100), 47], [Property: Products.Price (decimal) Required, 48], [Property: Products.ProductStatus (int) Required, 49], [Property: Products.UpdatedAt (DateTime) Required, 50], [Property: Products.UpdatedBy (long) Required FK Index, 51] }
                6 -> 30
                7 -> 38
            SELECT s1.StockPurchaseOrderId, s1.NumberOfItem, s1.OrderRecivedDate, s1.OrderStatusId, s1.PaymentDate, s1.PaymentMethodId, s1.PaymentStatusId, s1.PaymentTypeId, s1.PurchaseBy, s1.PurchaseDate, s1.TotalNumberOfQuantity, s1.TotalPrice, s1.UpdatedAt, s1.UpdatedBy, s1.VendorId, s1.VendorId0, s1.Address, s1.City, s1.Country, s1.CreatedAt, s1.CreatedBy, s1.Email, s1.IsDeleted, s1.Name, s1.Phone, s1.Pincode, s1.State, s1.StoreName, s1.UpdatedAt0, s1.UpdatedBy0, s2.StockPurchaseOrderItemId, s2.OrderItemStatus, s2.OrderRecivedDate, s2.ProductId, s2.ProductPrice, s2.Quantity, s2.StockPurchaseOrderId, s2.TotalPrice, s2.ProductId0, s2.AvailableQuantity, s2.CategoryId, s2.CreatedAt, s2.CreatedBy, s2.Description, s2.IsDeleted, s2.LastRestockAt, s2.MinimumRequiredQuantity, s2.Name, s2.Price, s2.ProductStatus, s2.UpdatedAt, s2.UpdatedBy
            FROM 
            (
                SELECT TOP(1) s.StockPurchaseOrderId, s.NumberOfItem, s.OrderRecivedDate, s.OrderStatusId, s.PaymentDate, s.PaymentMethodId, s.PaymentStatusId, s.PaymentTypeId, s.PurchaseBy, s.PurchaseDate, s.TotalNumberOfQuantity, s.TotalPrice, s.UpdatedAt, s.UpdatedBy, s.VendorId, v.VendorId AS VendorId0, v.Address, v.City, v.Country, v.CreatedAt, v.CreatedBy, v.Email, v.IsDeleted, v.Name, v.Phone, v.Pincode, v.State, v.StoreName, v.UpdatedAt AS UpdatedAt0, v.UpdatedBy AS UpdatedBy0
                FROM StockPurchaseOrders AS s
                INNER JOIN VendorDetails AS v ON s.VendorId == v.VendorId
                WHERE s.StockPurchaseOrderId == @__orderId_0
            ) AS s1
            LEFT JOIN 
            (
                SELECT s0.StockPurchaseOrderItemId, s0.OrderItemStatus, s0.OrderRecivedDate, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.StockPurchaseOrderId, s0.TotalPrice, p.ProductId AS ProductId0, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
                FROM StockPurchaseOrderItems AS s0
                INNER JOIN Products AS p ON s0.ProductId == p.ProductId
            ) AS s2 ON s1.StockPurchaseOrderId == s2.StockPurchaseOrderId
            ORDER BY s1.StockPurchaseOrderId ASC, s1.VendorId0 ASC, s2.StockPurchaseOrderItemId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                StockPurchaseOrders entity;
                VendorDetails entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    StockPurchaseOrders instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(StockPurchaseOrders);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: StockPurchaseOrders.StockPurchaseOrderId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (StockPurchaseOrders)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")]: 
                                {
                                    return 
                                    {
                                        StockPurchaseOrders instance;
                                        instance = new StockPurchaseOrders();
                                        instance.<StockPurchaseOrderId>k__BackingField = dataReader.GetInt64(0);
                                        instance.<NumberOfItem>k__BackingField = dataReader.GetInt32(1);
                                        instance.<OrderRecivedDate>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<OrderStatusId>k__BackingField = dataReader.GetInt32(3);
                                        instance.<PaymentDate>k__BackingField = dataReader.GetDateTime(4);
                                        instance.<PaymentMethodId>k__BackingField = dataReader.GetInt32(5);
                                        instance.<PaymentStatusId>k__BackingField = dataReader.GetInt32(6);
                                        instance.<PaymentTypeId>k__BackingField = dataReader.GetInt32(7);
                                        instance.<PurchaseBy>k__BackingField = dataReader.GetInt64(8);
                                        instance.<PurchaseDate>k__BackingField = dataReader.GetDateTime(9);
                                        instance.<TotalNumberOfQuantity>k__BackingField = dataReader.GetInt32(10);
                                        instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(11);
                                        instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                        instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                        instance.<VendorId>k__BackingField = dataReader.GetInt64(14);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(StockPurchaseOrders)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                entity = 
                {
                    MaterializationContext materializationContext2;
                    IEntityType entityType2;
                    VendorDetails instance2;
                    InternalEntityEntry entry2;
                    bool hasNullKey2;
                    materializationContext2 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance2 = default(VendorDetails);
                    entry2 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: VendorDetails.VendorId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt64(15) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey2);
                    !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                    {
                        entityType2 = entry2.EntityType;
                        return instance2 = (VendorDetails)entry2.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot2;
                        shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType2 = [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")];
                        instance2 = switch (entityType2)
                        {
                            case [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")]: 
                                {
                                    return 
                                    {
                                        VendorDetails instance;
                                        instance = new VendorDetails();
                                        instance.<VendorId>k__BackingField = dataReader.GetInt64(15);
                                        instance.<Address>k__BackingField = dataReader.GetString(16);
                                        instance.<City>k__BackingField = dataReader.GetString(17);
                                        instance.<Country>k__BackingField = dataReader.GetString(18);
                                        instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(19);
                                        instance.<CreatedBy>k__BackingField = dataReader.GetInt64(20);
                                        instance.<Email>k__BackingField = dataReader.GetString(21);
                                        instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(22);
                                        instance.<Name>k__BackingField = dataReader.GetString(23);
                                        instance.<Phone>k__BackingField = dataReader.GetString(24);
                                        instance.<Pincode>k__BackingField = dataReader.GetString(25);
                                        instance.<State>k__BackingField = dataReader.GetString(26);
                                        instance.<StoreName>k__BackingField = dataReader.GetString(27);
                                        instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(28);
                                        instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(29);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext2.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(VendorDetails)
                        }
                        ;
                        entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType2, 
                            entity: instance2, 
                            snapshot: shadowSnapshot2);
                        return instance2;
                    } : default(void);
                    return instance2;
                };
                resultContext.Values = new object[]
                { 
                    entity, 
                    entity 
                };
                ShaperProcessingExpressionVisitor.IncludeReference<StockPurchaseOrders, StockPurchaseOrders, VendorDetails>(
                    queryContext: queryContext, 
                    entity: (StockPurchaseOrders)(resultContext.Values[0]), 
                    relatedEntity: (VendorDetails)(resultContext.Values[1]), 
                    navigation: [LIFTABLE Constant: Navigation: StockPurchaseOrders.VendorDetails (VendorDetails) ToPrincipal VendorDetails | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("VendorDetails")], 
                    inverseNavigation: default(INavigation), 
                    fixup: (namelessParameter{7}, namelessParameter{8}) => 
                    {
                        return namelessParameter{7}.<VendorDetails>k__BackingField = namelessParameter{8};
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<StockPurchaseOrders, StockPurchaseOrders>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (StockPurchaseOrders)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(long?)dataReader.GetInt64(0), 
                        (object)(long?)dataReader.GetInt64(15) 
                    }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(long?)dataReader.GetInt64(0), 
                        (object)(long?)dataReader.GetInt64(15) 
                    }], 
                    navigation: [LIFTABLE Constant: Navigation: StockPurchaseOrders.StockPurchaseOrderItems (ICollection<StockPurchaseOrderItems>) Collection ToDependent StockPurchaseOrderItems Inverse: StockPurchaseOrder | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<StockPurchaseOrders, ICollection<StockPurchaseOrderItems>, StockPurchaseOrderItems> | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<StockPurchaseOrders, StockPurchaseOrderItems>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(long?)dataReader.GetInt64(0), 
                    (object)(long?)dataReader.GetInt64(15) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(long?)dataReader.GetInt64(0), 
                    (object)(long?)dataReader.GetInt64(15) 
                }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)dataReader.IsDBNull(30) ? default(int?) : (int?)dataReader.GetInt32(30), 
                    (object)dataReader.IsDBNull(38) ? default(long?) : (long?)dataReader.GetInt64(38) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right, 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right 
                }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right, 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right 
                }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    StockPurchaseOrderItems entity;
                    Products entity;
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        StockPurchaseOrderItems instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(StockPurchaseOrderItems);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: StockPurchaseOrderItems.StockPurchaseOrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(30) ? default(object) : (object)dataReader.GetInt32(30) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (StockPurchaseOrderItems)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")]: 
                                    {
                                        return 
                                        {
                                            StockPurchaseOrderItems instance;
                                            instance = new StockPurchaseOrderItems();
                                            instance.<StockPurchaseOrderItemId>k__BackingField = dataReader.IsDBNull(30) ? default(int) : dataReader.GetInt32(30);
                                            instance.<OrderItemStatus>k__BackingField = dataReader.IsDBNull(31) ? default(int) : dataReader.GetInt32(31);
                                            instance.<OrderRecivedDate>k__BackingField = dataReader.IsDBNull(32) ? default(DateTime) : dataReader.GetDateTime(32);
                                            instance.<ProductId>k__BackingField = dataReader.IsDBNull(33) ? default(long) : dataReader.GetInt64(33);
                                            instance.<ProductPrice>k__BackingField = dataReader.IsDBNull(34) ? default(decimal) : dataReader.GetDecimal(34);
                                            instance.<Quantity>k__BackingField = dataReader.IsDBNull(35) ? default(int) : dataReader.GetInt32(35);
                                            instance.<StockPurchaseOrderId>k__BackingField = dataReader.IsDBNull(36) ? default(long) : dataReader.GetInt64(36);
                                            instance.<TotalPrice>k__BackingField = dataReader.IsDBNull(37) ? default(decimal) : dataReader.GetDecimal(37);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(StockPurchaseOrderItems)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    entity = 
                    {
                        MaterializationContext materializationContext4;
                        IEntityType entityType4;
                        Products instance4;
                        InternalEntityEntry entry4;
                        bool hasNullKey4;
                        materializationContext4 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance4 = default(Products);
                        entry4 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(38) ? default(object) : (object)dataReader.GetInt64(38) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey4);
                        !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
                        {
                            entityType4 = entry4.EntityType;
                            return instance4 = (Products)entry4.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot4;
                            shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType4 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                            instance4 = switch (entityType4)
                            {
                                case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                                    {
                                        return 
                                        {
                                            Products instance;
                                            instance = new Products();
                                            instance.<ProductId>k__BackingField = dataReader.IsDBNull(38) ? default(long) : dataReader.GetInt64(38);
                                            instance.<AvailableQuantity>k__BackingField = dataReader.IsDBNull(39) ? default(int) : dataReader.GetInt32(39);
                                            instance.<CategoryId>k__BackingField = dataReader.IsDBNull(40) ? default(int) : dataReader.GetInt32(40);
                                            instance.<CreatedAt>k__BackingField = dataReader.IsDBNull(41) ? default(DateTime) : dataReader.GetDateTime(41);
                                            instance.<CreatedBy>k__BackingField = dataReader.IsDBNull(42) ? default(long) : dataReader.GetInt64(42);
                                            instance.<Description>k__BackingField = dataReader.IsDBNull(43) ? default(string) : dataReader.GetString(43);
                                            instance.<IsDeleted>k__BackingField = dataReader.IsDBNull(44) ? default(bool) : dataReader.GetBoolean(44);
                                            instance.<LastRestockAt>k__BackingField = dataReader.IsDBNull(45) ? default(DateTime) : dataReader.GetDateTime(45);
                                            instance.<MinimumRequiredQuantity>k__BackingField = dataReader.IsDBNull(46) ? default(int) : dataReader.GetInt32(46);
                                            instance.<Name>k__BackingField = dataReader.IsDBNull(47) ? default(string) : dataReader.GetString(47);
                                            instance.<Price>k__BackingField = dataReader.IsDBNull(48) ? default(decimal) : dataReader.GetDecimal(48);
                                            instance.<ProductStatus>k__BackingField = dataReader.IsDBNull(49) ? default(int) : dataReader.GetInt32(49);
                                            instance.<UpdatedAt>k__BackingField = dataReader.IsDBNull(50) ? default(DateTime) : dataReader.GetDateTime(50);
                                            instance.<UpdatedBy>k__BackingField = dataReader.IsDBNull(51) ? default(long) : dataReader.GetInt64(51);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext4.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Products)
                            }
                            ;
                            entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType4, 
                                entity: instance4, 
                                snapshot: shadowSnapshot4);
                            return instance4;
                        } : default(void);
                        return instance4;
                    };
                    ShaperProcessingExpressionVisitor.IncludeReference<StockPurchaseOrderItems, StockPurchaseOrderItems, Products>(
                        queryContext: queryContext, 
                        entity: entity, 
                        relatedEntity: entity, 
                        navigation: [LIFTABLE Constant: Navigation: StockPurchaseOrderItems.Product (Products) ToPrincipal Products Inverse: StockPurchaseOrderItems | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems").FindNavigation("Product")], 
                        inverseNavigation: [LIFTABLE Constant: Navigation: Products.StockPurchaseOrderItems (ICollection<StockPurchaseOrderItems>) Collection ToDependent StockPurchaseOrderItems Inverse: Product | Resolver: namelessParameter{18} => namelessParameter{18}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindNavigation("StockPurchaseOrderItems")], 
                        fixup: (namelessParameter{19}, namelessParameter{20}) => 
                        {
                            namelessParameter{19}.<Product>k__BackingField = namelessParameter{20};
                            return [LIFTABLE Constant: ClrICollectionAccessor<Products, ICollection<StockPurchaseOrderItems>, StockPurchaseOrderItems> | Resolver: namelessParameter{21} => namelessParameter{21}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindNavigation("StockPurchaseOrderItems").GetCollectionAccessor()].Add(
                                entity: namelessParameter{20}, 
                                value: namelessParameter{19}, 
                                forMaterialization: True);
                        }, 
                        trackingQuery: True);
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: StockPurchaseOrderItems.StockPurchaseOrder (StockPurchaseOrders) ToPrincipal StockPurchaseOrders Inverse: StockPurchaseOrderItems | Resolver: namelessParameter{22} => namelessParameter{22}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems").FindNavigation("StockPurchaseOrder")], 
                fixup: (namelessParameter{23}, namelessParameter{24}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<StockPurchaseOrders, ICollection<StockPurchaseOrderItems>, StockPurchaseOrderItems> | Resolver: namelessParameter{25} => namelessParameter{25}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems").GetCollectionAccessor()].Add(
                        entity: namelessParameter{23}, 
                        value: namelessParameter{24}, 
                        forMaterialization: True);
                    return namelessParameter{24}.<StockPurchaseOrder>k__BackingField = namelessParameter{23};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (StockPurchaseOrders)(resultContext.Values[0]) : default(StockPurchaseOrders);
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 18:18:37.285 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:18:37.287 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 18:18:37.289 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:18:37.291 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:18:37.292 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:18:37.294 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:18:37.295 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:18:37.298 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s1].[VendorId0], [s1].[Address], [s1].[City], [s1].[Country], [s1].[CreatedAt], [s1].[CreatedBy], [s1].[Email], [s1].[IsDeleted], [s1].[Name], [s1].[Phone], [s1].[Pincode], [s1].[State], [s1].[StoreName], [s1].[UpdatedAt0], [s1].[UpdatedBy0], [s2].[StockPurchaseOrderItemId], [s2].[OrderItemStatus], [s2].[OrderRecivedDate], [s2].[ProductId], [s2].[ProductPrice], [s2].[Quantity], [s2].[StockPurchaseOrderId], [s2].[TotalPrice], [s2].[ProductId0], [s2].[AvailableQuantity], [s2].[CategoryId], [s2].[CreatedAt], [s2].[CreatedBy], [s2].[Description], [s2].[IsDeleted], [s2].[LastRestockAt], [s2].[MinimumRequiredQuantity], [s2].[Name], [s2].[Price], [s2].[ProductStatus], [s2].[UpdatedAt], [s2].[UpdatedBy]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId], [v].[VendorId] AS [VendorId0], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt] AS [UpdatedAt0], [v].[UpdatedBy] AS [UpdatedBy0]
    FROM [StockPurchaseOrders] AS [s]
    INNER JOIN [VendorDetails] AS [v] ON [s].[VendorId] = [v].[VendorId]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN (
    SELECT [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice], [p].[ProductId] AS [ProductId0], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
    FROM [StockPurchaseOrderItems] AS [s0]
    INNER JOIN [Products] AS [p] ON [s0].[ProductId] = [p].[ProductId]
) AS [s2] ON [s1].[StockPurchaseOrderId] = [s2].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId], [s1].[VendorId0], [s2].[StockPurchaseOrderItemId]
2025-05-09 18:18:37.328 +05:30 [INF] Executed DbCommand (30ms) [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s1].[VendorId0], [s1].[Address], [s1].[City], [s1].[Country], [s1].[CreatedAt], [s1].[CreatedBy], [s1].[Email], [s1].[IsDeleted], [s1].[Name], [s1].[Phone], [s1].[Pincode], [s1].[State], [s1].[StoreName], [s1].[UpdatedAt0], [s1].[UpdatedBy0], [s2].[StockPurchaseOrderItemId], [s2].[OrderItemStatus], [s2].[OrderRecivedDate], [s2].[ProductId], [s2].[ProductPrice], [s2].[Quantity], [s2].[StockPurchaseOrderId], [s2].[TotalPrice], [s2].[ProductId0], [s2].[AvailableQuantity], [s2].[CategoryId], [s2].[CreatedAt], [s2].[CreatedBy], [s2].[Description], [s2].[IsDeleted], [s2].[LastRestockAt], [s2].[MinimumRequiredQuantity], [s2].[Name], [s2].[Price], [s2].[ProductStatus], [s2].[UpdatedAt], [s2].[UpdatedBy]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId], [v].[VendorId] AS [VendorId0], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt] AS [UpdatedAt0], [v].[UpdatedBy] AS [UpdatedBy0]
    FROM [StockPurchaseOrders] AS [s]
    INNER JOIN [VendorDetails] AS [v] ON [s].[VendorId] = [v].[VendorId]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN (
    SELECT [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice], [p].[ProductId] AS [ProductId0], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
    FROM [StockPurchaseOrderItems] AS [s0]
    INNER JOIN [Products] AS [p] ON [s0].[ProductId] = [p].[ProductId]
) AS [s2] ON [s1].[StockPurchaseOrderId] = [s2].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId], [s1].[VendorId0], [s2].[StockPurchaseOrderItemId]
2025-05-09 18:18:37.391 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:18:37.421 +05:30 [DBG] The navigation 'StockPurchaseOrders.VendorDetails' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:18:37.424 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'VendorDetails' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:18:37.460 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:18:37.467 +05:30 [DBG] The navigation 'StockPurchaseOrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:18:37.469 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:18:37.472 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:18:37.473 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 86ms reading results.
2025-05-09 18:18:37.475 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:18:37.478 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 18:18:37.485 +05:30 [INF] Successfully fetched stock purchase order details for OrderId: 4
2025-05-09 18:18:37.487 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:18:37.490 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:18:37.491 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:18:37.492 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:18:37.493 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:18:37.494 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.StockPurchaseOrderDetailsResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-09 18:18:37.508 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem) in 497.9835ms
2025-05-09 18:18:37.519 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)'
2025-05-09 18:18:37.521 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:18:37.526 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:18:37.528 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:18:37.532 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/StockPurchaseOrder/4 - 200 null application/json; charset=utf-8 592.7541ms
2025-05-09 18:20:02.985 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order-status - application/json 62
2025-05-09 18:20:03.005 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/update-stock-order-status'
2025-05-09 18:20:03.009 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/update-stock-order-status' is valid for the request path '/api/StockPurchaseOrder/update-stock-order-status'
2025-05-09 18:20:03.016 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 18:20:03.018 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:20:03.023 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:20:03.033 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:20:03.041 +05:30 [DBG] Authorization was successful.
2025-05-09 18:20:03.045 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 18:20:03.089 +05:30 [INF] Route matched with {action = "UpdateStockPurchaseOrderStatus", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateStockPurchaseOrderStatus(InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 18:20:03.132 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:20:03.133 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:20:03.135 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:20:03.140 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:20:03.142 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:20:03.144 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 18:20:03.149 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 18:20:03.151 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 18:20:03.154 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' using the name '' in request data ...
2025-05-09 18:20:03.158 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 18:20:03.161 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:00000009": started reading request body.
2025-05-09 18:20:03.163 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:00000009": done reading request body.
2025-05-09 18:20:03.167 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'
2025-05-09 18:20:03.169 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 18:20:03.172 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 18:20:03.174 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 18:20:03.195 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 18:20:03.197 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 18:20:03.199 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 18:20:03.200 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:20:03.203 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:20:03.204 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 18:20:03.208 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 18:20:03.210 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 18:20:03.212 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem) in 67.7094ms
2025-05-09 18:20:03.219 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 18:20:03.221 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order-status - 400 null application/problem+json; charset=utf-8 236.9019ms
2025-05-09 18:20:11.683 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order-status - application/json 61
2025-05-09 18:20:11.695 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/update-stock-order-status'
2025-05-09 18:20:11.696 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/update-stock-order-status' is valid for the request path '/api/StockPurchaseOrder/update-stock-order-status'
2025-05-09 18:20:11.699 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 18:20:11.701 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:20:11.702 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:20:11.703 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:20:11.705 +05:30 [DBG] Authorization was successful.
2025-05-09 18:20:11.707 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 18:20:11.713 +05:30 [INF] Route matched with {action = "UpdateStockPurchaseOrderStatus", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateStockPurchaseOrderStatus(InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 18:20:11.716 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:20:11.717 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:20:11.719 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:20:11.728 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:20:11.731 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:20:11.733 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 18:20:11.736 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 18:20:11.741 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 18:20:11.744 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' using the name '' in request data ...
2025-05-09 18:20:11.745 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 18:20:11.747 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:0000000B": started reading request body.
2025-05-09 18:20:11.748 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:0000000B": done reading request body.
2025-05-09 18:20:11.750 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'
2025-05-09 18:20:11.751 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 18:20:11.752 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 18:20:11.756 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest' ...
2025-05-09 18:20:11.763 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.StockPurchaseOrderPartialReceiveRequest'.
2025-05-09 18:20:11.769 +05:30 [INF] Partial update of order status for OrderId: 4 by UserId: 2
2025-05-09 18:20:11.777 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:20:11.779 +05:30 [DBG] Compiling query expression: 
'DbSet<StockPurchaseOrders>()
    .Include(o => o.StockPurchaseOrderItems)
    .FirstOrDefault(o => o.StockPurchaseOrderId == __orderId_0)'
2025-05-09 18:20:11.782 +05:30 [DBG] Including navigation: 'StockPurchaseOrders.StockPurchaseOrderItems'.
2025-05-09 18:20:11.802 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<StockPurchaseOrders>(
    asyncEnumerable: SingleQueryingEnumerable.Create<StockPurchaseOrders>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrders.StockPurchaseOrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: StockPurchaseOrders.NumberOfItem (int) Required, 1], [Property: StockPurchaseOrders.OrderRecivedDate (DateTime) Required, 2], [Property: StockPurchaseOrders.OrderStatusId (int) Required FK Index, 3], [Property: StockPurchaseOrders.PaymentDate (DateTime) Required, 4], [Property: StockPurchaseOrders.PaymentMethodId (int) Required FK Index, 5], [Property: StockPurchaseOrders.PaymentStatusId (int) Required FK Index, 6], [Property: StockPurchaseOrders.PaymentTypeId (int) Required FK Index, 7], [Property: StockPurchaseOrders.PurchaseBy (long) Required, 8], [Property: StockPurchaseOrders.PurchaseDate (DateTime) Required, 9], [Property: StockPurchaseOrders.TotalNumberOfQuantity (int) Required, 10], [Property: StockPurchaseOrders.TotalPrice (decimal) Required, 11], [Property: StockPurchaseOrders.UpdatedAt (DateTime) Required, 12], [Property: StockPurchaseOrders.UpdatedBy (long) Required FK Index, 13], [Property: StockPurchaseOrders.VendorId (long) Required FK Index, 14] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrderItems.StockPurchaseOrderItemId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: StockPurchaseOrderItems.OrderItemStatus (int) Required FK Index, 16], [Property: StockPurchaseOrderItems.OrderRecivedDate (DateTime) Required, 17], [Property: StockPurchaseOrderItems.ProductId (long) Required FK Index, 18], [Property: StockPurchaseOrderItems.ProductPrice (decimal) Required, 19], [Property: StockPurchaseOrderItems.Quantity (int) Required, 20], [Property: StockPurchaseOrderItems.StockPurchaseOrderId (long) Required FK Index, 21], [Property: StockPurchaseOrderItems.TotalPrice (decimal) Required, 22] }
                3 -> 15
            SELECT s1.StockPurchaseOrderId, s1.NumberOfItem, s1.OrderRecivedDate, s1.OrderStatusId, s1.PaymentDate, s1.PaymentMethodId, s1.PaymentStatusId, s1.PaymentTypeId, s1.PurchaseBy, s1.PurchaseDate, s1.TotalNumberOfQuantity, s1.TotalPrice, s1.UpdatedAt, s1.UpdatedBy, s1.VendorId, s0.StockPurchaseOrderItemId, s0.OrderItemStatus, s0.OrderRecivedDate, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.StockPurchaseOrderId, s0.TotalPrice
            FROM 
            (
                SELECT TOP(1) s.StockPurchaseOrderId, s.NumberOfItem, s.OrderRecivedDate, s.OrderStatusId, s.PaymentDate, s.PaymentMethodId, s.PaymentStatusId, s.PaymentTypeId, s.PurchaseBy, s.PurchaseDate, s.TotalNumberOfQuantity, s.TotalPrice, s.UpdatedAt, s.UpdatedBy, s.VendorId
                FROM StockPurchaseOrders AS s
                WHERE s.StockPurchaseOrderId == @__orderId_0
            ) AS s1
            LEFT JOIN StockPurchaseOrderItems AS s0 ON s1.StockPurchaseOrderId == s0.StockPurchaseOrderId
            ORDER BY s1.StockPurchaseOrderId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrders.StockPurchaseOrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: StockPurchaseOrders.NumberOfItem (int) Required, 1], [Property: StockPurchaseOrders.OrderRecivedDate (DateTime) Required, 2], [Property: StockPurchaseOrders.OrderStatusId (int) Required FK Index, 3], [Property: StockPurchaseOrders.PaymentDate (DateTime) Required, 4], [Property: StockPurchaseOrders.PaymentMethodId (int) Required FK Index, 5], [Property: StockPurchaseOrders.PaymentStatusId (int) Required FK Index, 6], [Property: StockPurchaseOrders.PaymentTypeId (int) Required FK Index, 7], [Property: StockPurchaseOrders.PurchaseBy (long) Required, 8], [Property: StockPurchaseOrders.PurchaseDate (DateTime) Required, 9], [Property: StockPurchaseOrders.TotalNumberOfQuantity (int) Required, 10], [Property: StockPurchaseOrders.TotalPrice (decimal) Required, 11], [Property: StockPurchaseOrders.UpdatedAt (DateTime) Required, 12], [Property: StockPurchaseOrders.UpdatedBy (long) Required FK Index, 13], [Property: StockPurchaseOrders.VendorId (long) Required FK Index, 14] }
                1 -> 0
                2 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrderItems.StockPurchaseOrderItemId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: StockPurchaseOrderItems.OrderItemStatus (int) Required FK Index, 16], [Property: StockPurchaseOrderItems.OrderRecivedDate (DateTime) Required, 17], [Property: StockPurchaseOrderItems.ProductId (long) Required FK Index, 18], [Property: StockPurchaseOrderItems.ProductPrice (decimal) Required, 19], [Property: StockPurchaseOrderItems.Quantity (int) Required, 20], [Property: StockPurchaseOrderItems.StockPurchaseOrderId (long) Required FK Index, 21], [Property: StockPurchaseOrderItems.TotalPrice (decimal) Required, 22] }
                3 -> 15
            SELECT s1.StockPurchaseOrderId, s1.NumberOfItem, s1.OrderRecivedDate, s1.OrderStatusId, s1.PaymentDate, s1.PaymentMethodId, s1.PaymentStatusId, s1.PaymentTypeId, s1.PurchaseBy, s1.PurchaseDate, s1.TotalNumberOfQuantity, s1.TotalPrice, s1.UpdatedAt, s1.UpdatedBy, s1.VendorId, s0.StockPurchaseOrderItemId, s0.OrderItemStatus, s0.OrderRecivedDate, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.StockPurchaseOrderId, s0.TotalPrice
            FROM 
            (
                SELECT TOP(1) s.StockPurchaseOrderId, s.NumberOfItem, s.OrderRecivedDate, s.OrderStatusId, s.PaymentDate, s.PaymentMethodId, s.PaymentStatusId, s.PaymentTypeId, s.PurchaseBy, s.PurchaseDate, s.TotalNumberOfQuantity, s.TotalPrice, s.UpdatedAt, s.UpdatedBy, s.VendorId
                FROM StockPurchaseOrders AS s
                WHERE s.StockPurchaseOrderId == @__orderId_0
            ) AS s1
            LEFT JOIN StockPurchaseOrderItems AS s0 ON s1.StockPurchaseOrderId == s0.StockPurchaseOrderId
            ORDER BY s1.StockPurchaseOrderId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                StockPurchaseOrders entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    StockPurchaseOrders instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(StockPurchaseOrders);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: StockPurchaseOrders.StockPurchaseOrderId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (StockPurchaseOrders)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")]: 
                                {
                                    return 
                                    {
                                        StockPurchaseOrders instance;
                                        instance = new StockPurchaseOrders();
                                        instance.<StockPurchaseOrderId>k__BackingField = dataReader.GetInt64(0);
                                        instance.<NumberOfItem>k__BackingField = dataReader.GetInt32(1);
                                        instance.<OrderRecivedDate>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<OrderStatusId>k__BackingField = dataReader.GetInt32(3);
                                        instance.<PaymentDate>k__BackingField = dataReader.GetDateTime(4);
                                        instance.<PaymentMethodId>k__BackingField = dataReader.GetInt32(5);
                                        instance.<PaymentStatusId>k__BackingField = dataReader.GetInt32(6);
                                        instance.<PaymentTypeId>k__BackingField = dataReader.GetInt32(7);
                                        instance.<PurchaseBy>k__BackingField = dataReader.GetInt64(8);
                                        instance.<PurchaseDate>k__BackingField = dataReader.GetDateTime(9);
                                        instance.<TotalNumberOfQuantity>k__BackingField = dataReader.GetInt32(10);
                                        instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(11);
                                        instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                        instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                        instance.<VendorId>k__BackingField = dataReader.GetInt64(14);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(StockPurchaseOrders)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                resultContext.Values = new object[]{ entity };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<StockPurchaseOrders, StockPurchaseOrders>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (StockPurchaseOrders)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(long?)dataReader.GetInt64(0) }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(long?)dataReader.GetInt64(0) }], 
                    navigation: [LIFTABLE Constant: Navigation: StockPurchaseOrders.StockPurchaseOrderItems (ICollection<StockPurchaseOrderItems>) Collection ToDependent StockPurchaseOrderItems Inverse: StockPurchaseOrder | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<StockPurchaseOrders, ICollection<StockPurchaseOrderItems>, StockPurchaseOrderItems> | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<StockPurchaseOrders, StockPurchaseOrderItems>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(long?)dataReader.GetInt64(0) }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)(long?)dataReader.GetInt64(0) }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]{ (object)dataReader.IsDBNull(15) ? default(int?) : (int?)dataReader.GetInt32(15) }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (long)left == (long)right }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (long)left == (long)right }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]{ (left, right) => left == null ? right == null : right != null && (int)left == (int)right }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    StockPurchaseOrderItems entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        StockPurchaseOrderItems instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(StockPurchaseOrderItems);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: StockPurchaseOrderItems.StockPurchaseOrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(15) ? default(object) : (object)dataReader.GetInt32(15) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (StockPurchaseOrderItems)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")]: 
                                    {
                                        return 
                                        {
                                            StockPurchaseOrderItems instance;
                                            instance = new StockPurchaseOrderItems();
                                            instance.<StockPurchaseOrderItemId>k__BackingField = dataReader.IsDBNull(15) ? default(int) : dataReader.GetInt32(15);
                                            instance.<OrderItemStatus>k__BackingField = dataReader.IsDBNull(16) ? default(int) : dataReader.GetInt32(16);
                                            instance.<OrderRecivedDate>k__BackingField = dataReader.IsDBNull(17) ? default(DateTime) : dataReader.GetDateTime(17);
                                            instance.<ProductId>k__BackingField = dataReader.IsDBNull(18) ? default(long) : dataReader.GetInt64(18);
                                            instance.<ProductPrice>k__BackingField = dataReader.IsDBNull(19) ? default(decimal) : dataReader.GetDecimal(19);
                                            instance.<Quantity>k__BackingField = dataReader.IsDBNull(20) ? default(int) : dataReader.GetInt32(20);
                                            instance.<StockPurchaseOrderId>k__BackingField = dataReader.IsDBNull(21) ? default(long) : dataReader.GetInt64(21);
                                            instance.<TotalPrice>k__BackingField = dataReader.IsDBNull(22) ? default(decimal) : dataReader.GetDecimal(22);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: StockPurchaseOrderItems | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(StockPurchaseOrderItems)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: StockPurchaseOrderItems.StockPurchaseOrder (StockPurchaseOrders) ToPrincipal StockPurchaseOrders Inverse: StockPurchaseOrderItems | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrderItems").FindNavigation("StockPurchaseOrder")], 
                fixup: (namelessParameter{9}, namelessParameter{10}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<StockPurchaseOrders, ICollection<StockPurchaseOrderItems>, StockPurchaseOrderItems> | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("StockPurchaseOrderItems").GetCollectionAccessor()].Add(
                        entity: namelessParameter{9}, 
                        value: namelessParameter{10}, 
                        forMaterialization: True);
                    return namelessParameter{10}.<StockPurchaseOrder>k__BackingField = namelessParameter{9};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (StockPurchaseOrders)(resultContext.Values[0]) : default(StockPurchaseOrders);
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 18:20:11.914 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:20:11.915 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 18:20:11.916 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:11.918 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:11.919 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:20:11.921 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:20:11.922 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:20:11.924 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId]
    FROM [StockPurchaseOrders] AS [s]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN [StockPurchaseOrderItems] AS [s0] ON [s1].[StockPurchaseOrderId] = [s0].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId]
2025-05-09 18:20:11.941 +05:30 [INF] Executed DbCommand (17ms) [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId]
    FROM [StockPurchaseOrders] AS [s]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN [StockPurchaseOrderItems] AS [s0] ON [s1].[StockPurchaseOrderId] = [s0].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId]
2025-05-09 18:20:11.948 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:11.953 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:11.969 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:11.972 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 24ms reading results.
2025-05-09 18:20:11.976 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:11.979 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 18:20:11.984 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:11.987 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:11.991 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:20:12.008 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (17ms).
2025-05-09 18:20:12.010 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (19ms).
2025-05-09 18:20:12.012 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 18:20:12.019 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 18:20:12.024 +05:30 [DBG] The navigation 'StockPurchaseOrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:12.026 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:12.027 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:12.028 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 4ms reading results.
2025-05-09 18:20:12.030 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:12.031 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:20:12.051 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:12.068 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 18:20:12.072 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 18:20:12.076 +05:30 [DBG] The unchanged property 'StockPurchaseOrders.OrderRecivedDate' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:20:12.078 +05:30 [DBG] An entity of type 'StockPurchaseOrders' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:12.081 +05:30 [DBG] The unchanged property 'StockPurchaseOrders.OrderStatusId' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:20:12.083 +05:30 [DBG] The foreign key property 'StockPurchaseOrders.OrderStatusId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:20:12.086 +05:30 [DBG] The unchanged property 'StockPurchaseOrders.PaymentDate' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:20:12.089 +05:30 [DBG] The unchanged property 'StockPurchaseOrders.UpdatedAt' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:20:12.091 +05:30 [DBG] The unchanged property 'StockPurchaseOrderItems.OrderItemStatus' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:20:12.110 +05:30 [DBG] An entity of type 'StockPurchaseOrderItems' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:12.113 +05:30 [DBG] The foreign key property 'StockPurchaseOrderItems.OrderItemStatus' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:20:12.115 +05:30 [DBG] The unchanged property 'StockPurchaseOrderItems.OrderRecivedDate' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:20:12.118 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 18:20:12.136 +05:30 [DBG] Executing 3 update commands as a batch.
2025-05-09 18:20:12.138 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:12.140 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:12.141 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-09 18:20:12.142 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-09 18:20:12.144 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:20:12.146 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:20:12.147 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:20:12.149 +05:30 [DBG] Executing DbCommand [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p16='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (DbType = DateTime2), @p21='?' (DbType = Int64), @p17='?' (DbType = DateTime2), @p18='?' (DbType = Int32), @p19='?' (DbType = DateTime2), @p20='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
UPDATE [StockPurchaseOrderItems] SET [OrderItemStatus] = @p14, [OrderRecivedDate] = @p15
OUTPUT 1
WHERE [StockPurchaseOrderItemId] = @p16;
UPDATE [StockPurchaseOrders] SET [OrderRecivedDate] = @p17, [OrderStatusId] = @p18, [PaymentDate] = @p19, [UpdatedAt] = @p20
OUTPUT 1
WHERE [StockPurchaseOrderId] = @p21;
2025-05-09 18:20:12.228 +05:30 [INF] Executed DbCommand (80ms) [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p16='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (DbType = DateTime2), @p21='?' (DbType = Int64), @p17='?' (DbType = DateTime2), @p18='?' (DbType = Int32), @p19='?' (DbType = DateTime2), @p20='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
UPDATE [StockPurchaseOrderItems] SET [OrderItemStatus] = @p14, [OrderRecivedDate] = @p15
OUTPUT 1
WHERE [StockPurchaseOrderItemId] = @p16;
UPDATE [StockPurchaseOrders] SET [OrderRecivedDate] = @p17, [OrderStatusId] = @p18, [PaymentDate] = @p19, [UpdatedAt] = @p20
OUTPUT 1
WHERE [StockPurchaseOrderId] = @p21;
2025-05-09 18:20:12.257 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:12.259 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 18:20:12.261 +05:30 [DBG] Committing transaction.
2025-05-09 18:20:12.263 +05:30 [DBG] Committed transaction.
2025-05-09 18:20:12.264 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:12.266 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:20:12.267 +05:30 [DBG] Disposing transaction.
2025-05-09 18:20:12.268 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:12.270 +05:30 [DBG] An entity of type 'StockPurchaseOrders' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:12.273 +05:30 [DBG] An entity of type 'StockPurchaseOrderItems' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:12.277 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 3 entities written to the database.
2025-05-09 18:20:12.280 +05:30 [INF] Starting stock movement for ProductId: 4, UserId: 2, Status: "Recived"
2025-05-09 18:20:12.282 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:12.283 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:12.285 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:20:12.286 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:20:12.288 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:20:12.290 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 18:20:12.297 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 18:20:12.301 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:12.302 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 18:20:12.305 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:12.307 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 18:20:12.312 +05:30 [INF] 'Restock' movement for ProductId: 4
2025-05-09 18:20:12.314 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:12.316 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:12.319 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:12.321 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 18:20:12.322 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 18:20:12.326 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 18:20:12.328 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:12.330 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:12.331 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:20:12.332 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 18:20:12.334 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:20:12.335 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 18:20:12.353 +05:30 [INF] Executed DbCommand (18ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 18:20:12.403 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:20:12.421 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:12.431 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 28ms reading results.
2025-05-09 18:20:12.442 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:12.460 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (18ms).
2025-05-09 18:20:12.465 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:12.468 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 18:20:12.469 +05:30 [INF] Stock movement successfully for ProductId: 4
2025-05-09 18:20:12.472 +05:30 [DBG] An entity of type 'StockPurchaseOrders' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:12.474 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 18:20:12.476 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 18:20:12.478 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 18:20:12.480 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:12.481 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:12.483 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:20:12.484 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:20:12.485 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:20:12.487 +05:30 [DBG] Executing DbCommand [Parameters=[@p14='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int64), @p8='?' (DbType = DateTime2), @p9='?' (DbType = Int32), @p10='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [StockPurchaseOrders] SET [NumberOfItem] = @p0, [OrderRecivedDate] = @p1, [OrderStatusId] = @p2, [PaymentDate] = @p3, [PaymentMethodId] = @p4, [PaymentStatusId] = @p5, [PaymentTypeId] = @p6, [PurchaseBy] = @p7, [PurchaseDate] = @p8, [TotalNumberOfQuantity] = @p9, [TotalPrice] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12, [VendorId] = @p13
OUTPUT 1
WHERE [StockPurchaseOrderId] = @p14;
2025-05-09 18:20:12.504 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[@p14='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int64), @p8='?' (DbType = DateTime2), @p9='?' (DbType = Int32), @p10='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64), @p13='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [StockPurchaseOrders] SET [NumberOfItem] = @p0, [OrderRecivedDate] = @p1, [OrderStatusId] = @p2, [PaymentDate] = @p3, [PaymentMethodId] = @p4, [PaymentStatusId] = @p5, [PaymentTypeId] = @p6, [PurchaseBy] = @p7, [PurchaseDate] = @p8, [TotalNumberOfQuantity] = @p9, [TotalPrice] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12, [VendorId] = @p13
OUTPUT 1
WHERE [StockPurchaseOrderId] = @p14;
2025-05-09 18:20:12.509 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:12.511 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 18:20:12.513 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:12.514 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:20:12.516 +05:30 [DBG] An entity of type 'StockPurchaseOrders' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:12.518 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 18:20:12.520 +05:30 [INF] Stock purchase order fully received for OrderId: 4
2025-05-09 18:20:12.521 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:20:12.525 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:20:12.526 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:20:12.528 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:20:12.530 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:20:12.531 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:20:12.533 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem) in 800.0198ms
2025-05-09 18:20:12.535 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.UpdateStockPurchaseOrderStatus (InventoryManagementSystem)'
2025-05-09 18:20:12.552 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:20:12.555 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:12.557 +05:30 [DBG] Disposed connection to database '' on server '' (2ms).
2025-05-09 18:20:12.574 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/StockPurchaseOrder/update-stock-order-status - 200 null application/json; charset=utf-8 891.5782ms
2025-05-09 18:20:24.199 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/StockPurchaseOrder/4 - null null
2025-05-09 18:20:24.213 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/4'
2025-05-09 18:20:24.219 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/{orderId}' is valid for the request path '/api/StockPurchaseOrder/4'
2025-05-09 18:20:24.224 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)'
2025-05-09 18:20:24.227 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:20:24.229 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:20:24.231 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:20:24.232 +05:30 [DBG] Authorization was successful.
2025-05-09 18:20:24.233 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)'
2025-05-09 18:20:24.235 +05:30 [INF] Route matched with {action = "GetStockPurchaseOrderDetails", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetStockPurchaseOrderDetails(Int64) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 18:20:24.239 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:20:24.242 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:20:24.243 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:20:24.245 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:20:24.246 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:20:24.248 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 18:20:24.249 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 18:20:24.252 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' ...
2025-05-09 18:20:24.253 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' using the name 'orderId' in request data ...
2025-05-09 18:20:24.256 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-09 18:20:24.258 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-09 18:20:24.260 +05:30 [DBG] Attempting to validate the bound parameter 'orderId' of type 'System.Int64' ...
2025-05-09 18:20:24.262 +05:30 [DBG] Done attempting to validate the bound parameter 'orderId' of type 'System.Int64'.
2025-05-09 18:20:24.263 +05:30 [INF] Fetching stock purchase order details for OrderId: 4
2025-05-09 18:20:24.264 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:20:24.267 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:20:24.268 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 18:20:24.269 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:24.271 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:24.273 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:20:24.274 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:20:24.275 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:20:24.277 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s1].[VendorId0], [s1].[Address], [s1].[City], [s1].[Country], [s1].[CreatedAt], [s1].[CreatedBy], [s1].[Email], [s1].[IsDeleted], [s1].[Name], [s1].[Phone], [s1].[Pincode], [s1].[State], [s1].[StoreName], [s1].[UpdatedAt0], [s1].[UpdatedBy0], [s2].[StockPurchaseOrderItemId], [s2].[OrderItemStatus], [s2].[OrderRecivedDate], [s2].[ProductId], [s2].[ProductPrice], [s2].[Quantity], [s2].[StockPurchaseOrderId], [s2].[TotalPrice], [s2].[ProductId0], [s2].[AvailableQuantity], [s2].[CategoryId], [s2].[CreatedAt], [s2].[CreatedBy], [s2].[Description], [s2].[IsDeleted], [s2].[LastRestockAt], [s2].[MinimumRequiredQuantity], [s2].[Name], [s2].[Price], [s2].[ProductStatus], [s2].[UpdatedAt], [s2].[UpdatedBy]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId], [v].[VendorId] AS [VendorId0], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt] AS [UpdatedAt0], [v].[UpdatedBy] AS [UpdatedBy0]
    FROM [StockPurchaseOrders] AS [s]
    INNER JOIN [VendorDetails] AS [v] ON [s].[VendorId] = [v].[VendorId]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN (
    SELECT [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice], [p].[ProductId] AS [ProductId0], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
    FROM [StockPurchaseOrderItems] AS [s0]
    INNER JOIN [Products] AS [p] ON [s0].[ProductId] = [p].[ProductId]
) AS [s2] ON [s1].[StockPurchaseOrderId] = [s2].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId], [s1].[VendorId0], [s2].[StockPurchaseOrderItemId]
2025-05-09 18:20:24.301 +05:30 [INF] Executed DbCommand (24ms) [Parameters=[@__orderId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s1].[StockPurchaseOrderId], [s1].[NumberOfItem], [s1].[OrderRecivedDate], [s1].[OrderStatusId], [s1].[PaymentDate], [s1].[PaymentMethodId], [s1].[PaymentStatusId], [s1].[PaymentTypeId], [s1].[PurchaseBy], [s1].[PurchaseDate], [s1].[TotalNumberOfQuantity], [s1].[TotalPrice], [s1].[UpdatedAt], [s1].[UpdatedBy], [s1].[VendorId], [s1].[VendorId0], [s1].[Address], [s1].[City], [s1].[Country], [s1].[CreatedAt], [s1].[CreatedBy], [s1].[Email], [s1].[IsDeleted], [s1].[Name], [s1].[Phone], [s1].[Pincode], [s1].[State], [s1].[StoreName], [s1].[UpdatedAt0], [s1].[UpdatedBy0], [s2].[StockPurchaseOrderItemId], [s2].[OrderItemStatus], [s2].[OrderRecivedDate], [s2].[ProductId], [s2].[ProductPrice], [s2].[Quantity], [s2].[StockPurchaseOrderId], [s2].[TotalPrice], [s2].[ProductId0], [s2].[AvailableQuantity], [s2].[CategoryId], [s2].[CreatedAt], [s2].[CreatedBy], [s2].[Description], [s2].[IsDeleted], [s2].[LastRestockAt], [s2].[MinimumRequiredQuantity], [s2].[Name], [s2].[Price], [s2].[ProductStatus], [s2].[UpdatedAt], [s2].[UpdatedBy]
FROM (
    SELECT TOP(1) [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId], [v].[VendorId] AS [VendorId0], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt] AS [UpdatedAt0], [v].[UpdatedBy] AS [UpdatedBy0]
    FROM [StockPurchaseOrders] AS [s]
    INNER JOIN [VendorDetails] AS [v] ON [s].[VendorId] = [v].[VendorId]
    WHERE [s].[StockPurchaseOrderId] = @__orderId_0
) AS [s1]
LEFT JOIN (
    SELECT [s0].[StockPurchaseOrderItemId], [s0].[OrderItemStatus], [s0].[OrderRecivedDate], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[StockPurchaseOrderId], [s0].[TotalPrice], [p].[ProductId] AS [ProductId0], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
    FROM [StockPurchaseOrderItems] AS [s0]
    INNER JOIN [Products] AS [p] ON [s0].[ProductId] = [p].[ProductId]
) AS [s2] ON [s1].[StockPurchaseOrderId] = [s2].[StockPurchaseOrderId]
ORDER BY [s1].[StockPurchaseOrderId], [s1].[VendorId0], [s2].[StockPurchaseOrderItemId]
2025-05-09 18:20:24.309 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:24.311 +05:30 [DBG] The navigation 'StockPurchaseOrders.VendorDetails' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:24.312 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'VendorDetails' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:24.314 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:24.315 +05:30 [DBG] The navigation 'StockPurchaseOrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:24.317 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:20:24.319 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:24.321 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 11ms reading results.
2025-05-09 18:20:24.323 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:24.324 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:20:24.326 +05:30 [INF] Successfully fetched stock purchase order details for OrderId: 4
2025-05-09 18:20:24.328 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:20:24.331 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:20:24.332 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:20:24.334 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:20:24.335 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:20:24.336 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.StockPurchaseOrderDetailsResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-09 18:20:24.339 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem) in 91.9581ms
2025-05-09 18:20:24.342 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetStockPurchaseOrderDetails (InventoryManagementSystem)'
2025-05-09 18:20:24.344 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:20:24.345 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:20:24.346 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:20:24.348 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/StockPurchaseOrder/4 - 200 null application/json; charset=utf-8 148.7345ms
2025-05-09 18:21:12.173 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Product/get-all-products - null null
2025-05-09 18:21:12.189 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/get-all-products'
2025-05-09 18:21:12.195 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)' with route pattern 'api/Product/get-all-products' is valid for the request path '/api/Product/get-all-products'
2025-05-09 18:21:12.200 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 18:21:12.202 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:21:12.205 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:21:12.207 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:21:12.212 +05:30 [DBG] Authorization was successful.
2025-05-09 18:21:12.216 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 18:21:12.243 +05:30 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 18:21:12.254 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:21:12.258 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:21:12.265 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:21:12.270 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:21:12.272 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:21:12.275 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:21:12.282 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:21:12.290 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:21:12.296 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .Where(p => !(p.IsDeleted))'
2025-05-09 18:21:12.306 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<Products>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
        SELECT p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
        FROM Products AS p
        WHERE Not(p.IsDeleted)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
        SELECT p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
        FROM Products AS p
        WHERE Not(p.IsDeleted), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        Products entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            Products instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(Products);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (Products)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                        {
                            return 
                            {
                                Products instance;
                                instance = new Products();
                                instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                instance.<Name>k__BackingField = dataReader.GetString(9);
                                instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(Products)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 18:21:12.334 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:21:12.335 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 18:21:12.337 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:21:12.339 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:21:12.340 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:21:12.342 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:21:12.344 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:21:12.346 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:21:12.358 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:21:12.364 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:21:12.366 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:21:12.367 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:21:12.369 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:21:12.371 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:21:12.372 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 8ms reading results.
2025-05-09 18:21:12.375 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:21:12.377 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 18:21:12.381 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:21:12.383 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:21:12.384 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:21:12.386 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:21:12.387 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:21:12.389 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.ProductResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:21:12.392 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem) in 117.1515ms
2025-05-09 18:21:12.401 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 18:21:12.403 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:21:12.404 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:21:12.405 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:21:12.407 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Product/get-all-products - 200 null application/json; charset=utf-8 233.8061ms
2025-05-09 18:22:25.613 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/Order/customer-order - application/json 96
2025-05-09 18:22:25.638 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/customer-order'
2025-05-09 18:22:25.641 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)' with route pattern 'api/Order/customer-order' is valid for the request path '/api/Order/customer-order'
2025-05-09 18:22:25.643 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 18:22:25.645 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:22:25.646 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:22:25.648 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:22:25.650 +05:30 [DBG] Authorization was successful.
2025-05-09 18:22:25.651 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 18:22:25.652 +05:30 [INF] Route matched with {action = "PlaceOrder", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] PlaceOrder(InventoryManagementSystem.Models.Request.CustomerOrderRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 18:22:25.656 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:22:25.657 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:22:25.659 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:22:25.663 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:22:25.665 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:22:25.667 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 18:22:25.670 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 18:22:25.671 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' ...
2025-05-09 18:22:25.672 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' using the name '' in request data ...
2025-05-09 18:22:25.674 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 18:22:25.675 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:00000011": started reading request body.
2025-05-09 18:22:25.676 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:00000011": done reading request body.
2025-05-09 18:22:25.677 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'
2025-05-09 18:22:25.678 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 18:22:25.682 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 18:22:25.683 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest' ...
2025-05-09 18:22:25.686 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.CustomerOrderRequest'.
2025-05-09 18:22:25.688 +05:30 [INF] Starting order placement for userId: 2
2025-05-09 18:22:25.690 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:22:25.692 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:22:25.693 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 18:22:25.694 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:25.696 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:25.700 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:22:25.702 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:22:25.703 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:22:25.704 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:22:25.710 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0 AND [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:22:25.716 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:22:25.719 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:25.721 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 4ms reading results.
2025-05-09 18:22:25.724 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:25.726 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:22:25.728 +05:30 [INF] Product 4 is now out of stock
2025-05-09 18:22:25.734 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:22:25.739 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 18:22:25.741 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 18:22:25.742 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 18:22:25.744 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:25.746 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:25.748 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:22:25.749 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:22:25.751 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:22:25.752 +05:30 [DBG] Executing DbCommand [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
2025-05-09 18:22:25.770 +05:30 [INF] Executed DbCommand (18ms) [Parameters=[@p13='?' (DbType = Int64), @p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTime2), @p3='?' (DbType = Int64), @p4='?' (Size = 225), @p5='?' (DbType = Boolean), @p6='?' (DbType = DateTime2), @p7='?' (DbType = Int32), @p8='?' (Size = 100), @p9='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Products] SET [AvailableQuantity] = @p0, [CategoryId] = @p1, [CreatedAt] = @p2, [CreatedBy] = @p3, [Description] = @p4, [IsDeleted] = @p5, [LastRestockAt] = @p6, [MinimumRequiredQuantity] = @p7, [Name] = @p8, [Price] = @p9, [ProductStatus] = @p10, [UpdatedAt] = @p11, [UpdatedBy] = @p12
OUTPUT 1
WHERE [ProductId] = @p13;
2025-05-09 18:22:25.775 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:25.777 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 18:22:25.779 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:25.781 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 18:22:25.783 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:22:25.785 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 18:22:25.786 +05:30 [INF] Starting stock movement for ProductId: 4, UserId: 2, Status: "Completed"
2025-05-09 18:22:25.788 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:25.790 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:25.792 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:22:25.793 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:22:25.794 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:22:25.795 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 18:22:25.802 +05:30 [INF] Executed DbCommand (7ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 18:22:25.806 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:25.808 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 18:22:25.810 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:25.812 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:22:25.820 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'Orders.OrderId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:22:25.928 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Orders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:22:25.943 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'OrderItems.OrderItemId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:22:25.971 +05:30 [DBG] The navigation 'OrderItems.Order' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:22:25.976 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:22:25.980 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:22:25.983 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 18:22:25.984 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 18:22:25.993 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 18:22:25.996 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:25.998 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:25.999 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-09 18:22:26.001 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-09 18:22:26.002 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:22:26.003 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:22:26.005 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:22:26.006 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p8='?' (DbType = Int32), @p9='?' (DbType = Int64), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Orders] ([NumberOfItems], [OrderDate], [OrderStatus], [PaymentDate], [PaymentMethod], [PaymentStatus], [PaymentType], [TotalCost], [TotalQuantity], [UpdatedBy], [UpdatedDate], [UserId])
OUTPUT INSERTED.[OrderId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11);
2025-05-09 18:22:26.021 +05:30 [INF] Executed DbCommand (15ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = DateTime2), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p8='?' (DbType = Int32), @p9='?' (DbType = Int64), @p10='?' (DbType = DateTime2), @p11='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Orders] ([NumberOfItems], [OrderDate], [OrderStatus], [PaymentDate], [PaymentMethod], [PaymentStatus], [PaymentType], [TotalCost], [TotalQuantity], [UpdatedBy], [UpdatedDate], [UserId])
OUTPUT INSERTED.[OrderId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10, @p11);
2025-05-09 18:22:26.027 +05:30 [DBG] The foreign key property 'Orders.OrderId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:22:26.031 +05:30 [DBG] The foreign key property 'OrderItems.OrderId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:22:26.034 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:26.035 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 9ms reading results.
2025-05-09 18:22:26.038 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:22:26.038 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (0ms).
2025-05-09 18:22:26.040 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:22:26.042 +05:30 [DBG] Executing DbCommand [Parameters=[@p12='?' (DbType = DateTime2), @p13='?' (DbType = Int64), @p14='?' (DbType = Int32), @p15='?' (DbType = Int64), @p16='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p17='?' (DbType = Int32), @p18='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [OrderItems] ([OrderDate], [OrderId], [OrderItemStatus], [ProductId], [ProductPrice], [Quantity], [TotalPrice])
OUTPUT INSERTED.[OrderItemId]
VALUES (@p12, @p13, @p14, @p15, @p16, @p17, @p18);
2025-05-09 18:22:26.050 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@p12='?' (DbType = DateTime2), @p13='?' (DbType = Int64), @p14='?' (DbType = Int32), @p15='?' (DbType = Int64), @p16='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p17='?' (DbType = Int32), @p18='?' (Precision = 18) (Scale = 2) (DbType = Decimal)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [OrderItems] ([OrderDate], [OrderId], [OrderItemStatus], [ProductId], [ProductPrice], [Quantity], [TotalPrice])
OUTPUT INSERTED.[OrderItemId]
VALUES (@p12, @p13, @p14, @p15, @p16, @p17, @p18);
2025-05-09 18:22:26.054 +05:30 [DBG] The foreign key property 'OrderItems.OrderItemId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:22:26.055 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:26.057 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 3ms reading results.
2025-05-09 18:22:26.058 +05:30 [DBG] Committing transaction.
2025-05-09 18:22:26.060 +05:30 [DBG] Committed transaction.
2025-05-09 18:22:26.061 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:26.062 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:22:26.064 +05:30 [DBG] Disposing transaction.
2025-05-09 18:22:26.065 +05:30 [DBG] An entity of type 'Orders' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:22:26.068 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:22:26.070 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 2 entities written to the database.
2025-05-09 18:22:26.072 +05:30 [INF] Order successfully placed for userId: 2
2025-05-09 18:22:26.074 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:22:26.077 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:22:26.078 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:22:26.080 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:22:26.081 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:22:26.084 +05:30 [INF] Executing ObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:22:26.086 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem) in 418.8402ms
2025-05-09 18:22:26.095 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.PlaceOrder (InventoryManagementSystem)'
2025-05-09 18:22:26.098 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:22:26.116 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:26.119 +05:30 [DBG] Disposed connection to database '' on server '' (3ms).
2025-05-09 18:22:26.122 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/Order/customer-order - 201 null application/json; charset=utf-8 509.9702ms
2025-05-09 18:22:34.759 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Product/get-all-products - null null
2025-05-09 18:22:34.768 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/get-all-products'
2025-05-09 18:22:34.796 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)' with route pattern 'api/Product/get-all-products' is valid for the request path '/api/Product/get-all-products'
2025-05-09 18:22:34.810 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 18:22:34.813 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:22:34.817 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:22:34.818 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:22:34.820 +05:30 [DBG] Authorization was successful.
2025-05-09 18:22:34.821 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 18:22:34.822 +05:30 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 18:22:34.825 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:22:34.826 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:22:34.828 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:22:34.831 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:22:34.833 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:22:34.835 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:22:34.837 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:22:34.839 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:22:34.842 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:22:34.843 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 18:22:34.844 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:34.846 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:34.848 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:22:34.849 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:22:34.851 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:22:34.852 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:22:34.858 +05:30 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:22:34.862 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:22:34.864 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:22:34.867 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:22:34.869 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:22:34.870 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:34.871 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 9ms reading results.
2025-05-09 18:22:34.873 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:34.874 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:22:34.876 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:22:34.878 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:22:34.879 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:22:34.882 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:22:34.883 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:22:34.885 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.ProductResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:22:34.887 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem) in 51.8274ms
2025-05-09 18:22:34.889 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 18:22:34.891 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:22:34.892 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:22:34.894 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:22:34.896 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Product/get-all-products - 200 null application/json; charset=utf-8 137.2446ms
2025-05-09 18:23:25.866 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/StockPurchaseOrder/filter-by-dates - application/json 74
2025-05-09 18:23:25.888 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/filter-by-dates'
2025-05-09 18:23:25.892 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetOrdersBetweenDates (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/filter-by-dates' is valid for the request path '/api/StockPurchaseOrder/filter-by-dates'
2025-05-09 18:23:25.896 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetOrdersBetweenDates (InventoryManagementSystem)'
2025-05-09 18:23:25.898 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:23:25.899 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:23:25.902 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:23:25.904 +05:30 [DBG] Authorization was successful.
2025-05-09 18:23:25.908 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetOrdersBetweenDates (InventoryManagementSystem)'
2025-05-09 18:23:25.927 +05:30 [INF] Route matched with {action = "GetOrdersBetweenDates", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetOrdersBetweenDates(InventoryManagementSystem.Models.Responces.OrderFilterByDateRequest) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 18:23:25.975 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:23:25.979 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:23:25.982 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:23:25.992 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:23:25.997 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:23:26.000 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 18:23:26.003 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 18:23:26.011 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Responces.OrderFilterByDateRequest' ...
2025-05-09 18:23:26.014 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Responces.OrderFilterByDateRequest' using the name '' in request data ...
2025-05-09 18:23:26.016 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 18:23:26.019 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:00000015": started reading request body.
2025-05-09 18:23:26.025 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:00000015": done reading request body.
2025-05-09 18:23:26.030 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Responces.OrderFilterByDateRequest'
2025-05-09 18:23:26.032 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Responces.OrderFilterByDateRequest'.
2025-05-09 18:23:26.034 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Responces.OrderFilterByDateRequest'.
2025-05-09 18:23:26.038 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Responces.OrderFilterByDateRequest' ...
2025-05-09 18:23:26.045 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Responces.OrderFilterByDateRequest'.
2025-05-09 18:23:26.049 +05:30 [INF] Fetching orders between dates: 2/2025 - 6/2026
2025-05-09 18:23:26.052 +05:30 [WRN] Invalid year input
2025-05-09 18:23:26.054 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:23:26.068 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:23:26.069 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:23:26.072 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:23:26.075 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:23:26.080 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.StockPurchaseOrderSummaryResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:23:26.088 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetOrdersBetweenDates (InventoryManagementSystem) in 87.6389ms
2025-05-09 18:23:26.102 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetOrdersBetweenDates (InventoryManagementSystem)'
2025-05-09 18:23:26.111 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/StockPurchaseOrder/filter-by-dates - 400 null application/json; charset=utf-8 244.738ms
2025-05-09 18:23:45.643 +05:30 [INF] Request starting HTTP/2 POST https://localhost:7150/api/StockPurchaseOrder/filter-by-dates - application/json 74
2025-05-09 18:23:45.700 +05:30 [DBG] 1 candidate(s) found for the request path '/api/StockPurchaseOrder/filter-by-dates'
2025-05-09 18:23:45.704 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetOrdersBetweenDates (InventoryManagementSystem)' with route pattern 'api/StockPurchaseOrder/filter-by-dates' is valid for the request path '/api/StockPurchaseOrder/filter-by-dates'
2025-05-09 18:23:45.709 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetOrdersBetweenDates (InventoryManagementSystem)'
2025-05-09 18:23:45.712 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:23:45.715 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:23:45.716 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:23:45.717 +05:30 [DBG] Authorization was successful.
2025-05-09 18:23:45.719 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetOrdersBetweenDates (InventoryManagementSystem)'
2025-05-09 18:23:45.725 +05:30 [INF] Route matched with {action = "GetOrdersBetweenDates", controller = "StockPurchaseOrder"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetOrdersBetweenDates(InventoryManagementSystem.Models.Responces.OrderFilterByDateRequest) on controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem).
2025-05-09 18:23:45.728 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:23:45.729 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:23:45.730 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:23:45.733 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:23:45.734 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:23:45.737 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 18:23:45.740 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.StockPurchaseOrderController (InventoryManagementSystem)
2025-05-09 18:23:45.741 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Responces.OrderFilterByDateRequest' ...
2025-05-09 18:23:45.743 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Responces.OrderFilterByDateRequest' using the name '' in request data ...
2025-05-09 18:23:45.745 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 18:23:45.747 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:00000017": started reading request body.
2025-05-09 18:23:45.749 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:00000017": done reading request body.
2025-05-09 18:23:45.750 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Responces.OrderFilterByDateRequest'
2025-05-09 18:23:45.753 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Responces.OrderFilterByDateRequest'.
2025-05-09 18:23:45.756 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Responces.OrderFilterByDateRequest'.
2025-05-09 18:23:45.758 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Responces.OrderFilterByDateRequest' ...
2025-05-09 18:23:45.760 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Responces.OrderFilterByDateRequest'.
2025-05-09 18:23:45.764 +05:30 [INF] Fetching orders between dates: 2/2025 - 6/2025
2025-05-09 18:23:45.768 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:23:45.775 +05:30 [DBG] Compiling query expression: 
'DbSet<StockPurchaseOrders>()
    .Include(o => o.VendorDetails)
    .Where(o => o.PurchaseDate >= __fromDate_0 && o.PurchaseDate <= __toDate_1)'
2025-05-09 18:23:45.780 +05:30 [DBG] Including navigation: 'StockPurchaseOrders.VendorDetails'.
2025-05-09 18:23:45.794 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<StockPurchaseOrders>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrders.StockPurchaseOrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: StockPurchaseOrders.NumberOfItem (int) Required, 1], [Property: StockPurchaseOrders.OrderRecivedDate (DateTime) Required, 2], [Property: StockPurchaseOrders.OrderStatusId (int) Required FK Index, 3], [Property: StockPurchaseOrders.PaymentDate (DateTime) Required, 4], [Property: StockPurchaseOrders.PaymentMethodId (int) Required FK Index, 5], [Property: StockPurchaseOrders.PaymentStatusId (int) Required FK Index, 6], [Property: StockPurchaseOrders.PaymentTypeId (int) Required FK Index, 7], [Property: StockPurchaseOrders.PurchaseBy (long) Required, 8], [Property: StockPurchaseOrders.PurchaseDate (DateTime) Required, 9], [Property: StockPurchaseOrders.TotalNumberOfQuantity (int) Required, 10], [Property: StockPurchaseOrders.TotalPrice (decimal) Required, 11], [Property: StockPurchaseOrders.UpdatedAt (DateTime) Required, 12], [Property: StockPurchaseOrders.UpdatedBy (long) Required FK Index, 13], [Property: StockPurchaseOrders.VendorId (long) Required FK Index, 14] }
            1 -> Dictionary<IProperty, int> { [Property: VendorDetails.VendorId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: VendorDetails.Address (string) Required MaxLength(500), 16], [Property: VendorDetails.City (string) Required MaxLength(50), 17], [Property: VendorDetails.Country (string) Required MaxLength(50), 18], [Property: VendorDetails.CreatedAt (DateTime) Required, 19], [Property: VendorDetails.CreatedBy (long) Required FK Index, 20], [Property: VendorDetails.Email (string) Required MaxLength(100), 21], [Property: VendorDetails.IsDeleted (bool) Required, 22], [Property: VendorDetails.Name (string) Required MaxLength(50), 23], [Property: VendorDetails.Phone (string) Required MaxLength(15), 24], [Property: VendorDetails.Pincode (string) Required MaxLength(10), 25], [Property: VendorDetails.State (string) Required MaxLength(50), 26], [Property: VendorDetails.StoreName (string) Required MaxLength(100), 27], [Property: VendorDetails.UpdatedAt (DateTime) Required, 28], [Property: VendorDetails.UpdatedBy (long) Required, 29] }
        SELECT s.StockPurchaseOrderId, s.NumberOfItem, s.OrderRecivedDate, s.OrderStatusId, s.PaymentDate, s.PaymentMethodId, s.PaymentStatusId, s.PaymentTypeId, s.PurchaseBy, s.PurchaseDate, s.TotalNumberOfQuantity, s.TotalPrice, s.UpdatedAt, s.UpdatedBy, s.VendorId, v.VendorId, v.Address, v.City, v.Country, v.CreatedAt, v.CreatedBy, v.Email, v.IsDeleted, v.Name, v.Phone, v.Pincode, v.State, v.StoreName, v.UpdatedAt, v.UpdatedBy
        FROM StockPurchaseOrders AS s
        INNER JOIN VendorDetails AS v ON s.VendorId == v.VendorId
        WHERE (s.PurchaseDate >= @__fromDate_0) && (s.PurchaseDate <= @__toDate_1)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Client Projections:
            0 -> Dictionary<IProperty, int> { [Property: StockPurchaseOrders.StockPurchaseOrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: StockPurchaseOrders.NumberOfItem (int) Required, 1], [Property: StockPurchaseOrders.OrderRecivedDate (DateTime) Required, 2], [Property: StockPurchaseOrders.OrderStatusId (int) Required FK Index, 3], [Property: StockPurchaseOrders.PaymentDate (DateTime) Required, 4], [Property: StockPurchaseOrders.PaymentMethodId (int) Required FK Index, 5], [Property: StockPurchaseOrders.PaymentStatusId (int) Required FK Index, 6], [Property: StockPurchaseOrders.PaymentTypeId (int) Required FK Index, 7], [Property: StockPurchaseOrders.PurchaseBy (long) Required, 8], [Property: StockPurchaseOrders.PurchaseDate (DateTime) Required, 9], [Property: StockPurchaseOrders.TotalNumberOfQuantity (int) Required, 10], [Property: StockPurchaseOrders.TotalPrice (decimal) Required, 11], [Property: StockPurchaseOrders.UpdatedAt (DateTime) Required, 12], [Property: StockPurchaseOrders.UpdatedBy (long) Required FK Index, 13], [Property: StockPurchaseOrders.VendorId (long) Required FK Index, 14] }
            1 -> Dictionary<IProperty, int> { [Property: VendorDetails.VendorId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: VendorDetails.Address (string) Required MaxLength(500), 16], [Property: VendorDetails.City (string) Required MaxLength(50), 17], [Property: VendorDetails.Country (string) Required MaxLength(50), 18], [Property: VendorDetails.CreatedAt (DateTime) Required, 19], [Property: VendorDetails.CreatedBy (long) Required FK Index, 20], [Property: VendorDetails.Email (string) Required MaxLength(100), 21], [Property: VendorDetails.IsDeleted (bool) Required, 22], [Property: VendorDetails.Name (string) Required MaxLength(50), 23], [Property: VendorDetails.Phone (string) Required MaxLength(15), 24], [Property: VendorDetails.Pincode (string) Required MaxLength(10), 25], [Property: VendorDetails.State (string) Required MaxLength(50), 26], [Property: VendorDetails.StoreName (string) Required MaxLength(100), 27], [Property: VendorDetails.UpdatedAt (DateTime) Required, 28], [Property: VendorDetails.UpdatedBy (long) Required, 29] }
        SELECT s.StockPurchaseOrderId, s.NumberOfItem, s.OrderRecivedDate, s.OrderStatusId, s.PaymentDate, s.PaymentMethodId, s.PaymentStatusId, s.PaymentTypeId, s.PurchaseBy, s.PurchaseDate, s.TotalNumberOfQuantity, s.TotalPrice, s.UpdatedAt, s.UpdatedBy, s.VendorId, v.VendorId, v.Address, v.City, v.Country, v.CreatedAt, v.CreatedBy, v.Email, v.IsDeleted, v.Name, v.Phone, v.Pincode, v.State, v.StoreName, v.UpdatedAt, v.UpdatedBy
        FROM StockPurchaseOrders AS s
        INNER JOIN VendorDetails AS v ON s.VendorId == v.VendorId
        WHERE (s.PurchaseDate >= @__fromDate_0) && (s.PurchaseDate <= @__toDate_1), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        StockPurchaseOrders entity;
        VendorDetails entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            StockPurchaseOrders instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(StockPurchaseOrders);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: StockPurchaseOrders.StockPurchaseOrderId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (StockPurchaseOrders)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")]: 
                        {
                            return 
                            {
                                StockPurchaseOrders instance;
                                instance = new StockPurchaseOrders();
                                instance.<StockPurchaseOrderId>k__BackingField = dataReader.GetInt64(0);
                                instance.<NumberOfItem>k__BackingField = dataReader.GetInt32(1);
                                instance.<OrderRecivedDate>k__BackingField = dataReader.GetDateTime(2);
                                instance.<OrderStatusId>k__BackingField = dataReader.GetInt32(3);
                                instance.<PaymentDate>k__BackingField = dataReader.GetDateTime(4);
                                instance.<PaymentMethodId>k__BackingField = dataReader.GetInt32(5);
                                instance.<PaymentStatusId>k__BackingField = dataReader.GetInt32(6);
                                instance.<PaymentTypeId>k__BackingField = dataReader.GetInt32(7);
                                instance.<PurchaseBy>k__BackingField = dataReader.GetInt64(8);
                                instance.<PurchaseDate>k__BackingField = dataReader.GetDateTime(9);
                                instance.<TotalNumberOfQuantity>k__BackingField = dataReader.GetInt32(10);
                                instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(11);
                                instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                instance.<VendorId>k__BackingField = dataReader.GetInt64(14);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: StockPurchaseOrders | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(StockPurchaseOrders)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        entity = 
        {
            MaterializationContext materializationContext2;
            IEntityType entityType2;
            VendorDetails instance2;
            InternalEntityEntry entry2;
            bool hasNullKey2;
            materializationContext2 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance2 = default(VendorDetails);
            entry2 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: VendorDetails.VendorId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(15) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey2);
            !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
            {
                entityType2 = entry2.EntityType;
                return instance2 = (VendorDetails)entry2.Entity;
            } : 
            {
                ISnapshot shadowSnapshot2;
                shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType2 = [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")];
                instance2 = switch (entityType2)
                {
                    case [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")]: 
                        {
                            return 
                            {
                                VendorDetails instance;
                                instance = new VendorDetails();
                                instance.<VendorId>k__BackingField = dataReader.GetInt64(15);
                                instance.<Address>k__BackingField = dataReader.GetString(16);
                                instance.<City>k__BackingField = dataReader.GetString(17);
                                instance.<Country>k__BackingField = dataReader.GetString(18);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(19);
                                instance.<CreatedBy>k__BackingField = dataReader.GetInt64(20);
                                instance.<Email>k__BackingField = dataReader.GetString(21);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(22);
                                instance.<Name>k__BackingField = dataReader.GetString(23);
                                instance.<Phone>k__BackingField = dataReader.GetString(24);
                                instance.<Pincode>k__BackingField = dataReader.GetString(25);
                                instance.<State>k__BackingField = dataReader.GetString(26);
                                instance.<StoreName>k__BackingField = dataReader.GetString(27);
                                instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(28);
                                instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(29);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext2.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(VendorDetails)
                }
                ;
                entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType2, 
                    entity: instance2, 
                    snapshot: shadowSnapshot2);
                return instance2;
            } : default(void);
            return instance2;
        };
        ShaperProcessingExpressionVisitor.IncludeReference<StockPurchaseOrders, StockPurchaseOrders, VendorDetails>(
            queryContext: queryContext, 
            entity: entity, 
            relatedEntity: entity, 
            navigation: [LIFTABLE Constant: Navigation: StockPurchaseOrders.VendorDetails (VendorDetails) ToPrincipal VendorDetails | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.StockPurchaseOrders").FindNavigation("VendorDetails")], 
            inverseNavigation: default(INavigation), 
            fixup: (namelessParameter{7}, namelessParameter{8}) => 
            {
                return namelessParameter{7}.<VendorDetails>k__BackingField = namelessParameter{8};
            }, 
            trackingQuery: True);
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 18:23:45.865 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:23:45.866 +05:30 [DBG] Created DbConnection. (1ms).
2025-05-09 18:23:45.868 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:23:45.876 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:23:45.878 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:23:45.880 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:23:45.882 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:23:45.883 +05:30 [DBG] Executing DbCommand [Parameters=[@__fromDate_0='?' (DbType = DateTime2), @__toDate_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId], [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [StockPurchaseOrders] AS [s]
INNER JOIN [VendorDetails] AS [v] ON [s].[VendorId] = [v].[VendorId]
WHERE [s].[PurchaseDate] >= @__fromDate_0 AND [s].[PurchaseDate] <= @__toDate_1
2025-05-09 18:23:45.924 +05:30 [INF] Executed DbCommand (40ms) [Parameters=[@__fromDate_0='?' (DbType = DateTime2), @__toDate_1='?' (DbType = DateTime2)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[StockPurchaseOrderId], [s].[NumberOfItem], [s].[OrderRecivedDate], [s].[OrderStatusId], [s].[PaymentDate], [s].[PaymentMethodId], [s].[PaymentStatusId], [s].[PaymentTypeId], [s].[PurchaseBy], [s].[PurchaseDate], [s].[TotalNumberOfQuantity], [s].[TotalPrice], [s].[UpdatedAt], [s].[UpdatedBy], [s].[VendorId], [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [StockPurchaseOrders] AS [s]
INNER JOIN [VendorDetails] AS [v] ON [s].[VendorId] = [v].[VendorId]
WHERE [s].[PurchaseDate] >= @__fromDate_0 AND [s].[PurchaseDate] <= @__toDate_1
2025-05-09 18:23:45.932 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:23:45.935 +05:30 [DBG] The navigation 'StockPurchaseOrders.VendorDetails' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:23:45.938 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'VendorDetails' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:23:45.940 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:23:45.941 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StockPurchaseOrders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:23:45.943 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:23:45.944 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 12ms reading results.
2025-05-09 18:23:45.946 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:23:45.948 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:23:45.951 +05:30 [INF] Fetched 3 orders
2025-05-09 18:23:45.953 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:23:45.957 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:23:45.958 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:23:45.959 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:23:45.961 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:23:45.963 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.StockPurchaseOrderSummaryResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:23:45.967 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetOrdersBetweenDates (InventoryManagementSystem) in 230.2782ms
2025-05-09 18:23:45.969 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.StockPurchaseOrderController.GetOrdersBetweenDates (InventoryManagementSystem)'
2025-05-09 18:23:45.972 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:23:45.973 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:23:45.975 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:23:45.977 +05:30 [INF] Request finished HTTP/2 POST https://localhost:7150/api/StockPurchaseOrder/filter-by-dates - 200 null application/json; charset=utf-8 333.7926ms
2025-05-09 18:25:51.968 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - application/json 46
2025-05-09 18:25:51.981 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/return-order-items'
2025-05-09 18:25:51.985 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)' with route pattern 'api/Order/return-order-items' is valid for the request path '/api/Order/return-order-items'
2025-05-09 18:25:51.989 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 18:25:51.992 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:25:51.993 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:25:51.995 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:25:51.998 +05:30 [DBG] Authorization was successful.
2025-05-09 18:25:52.001 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 18:25:52.006 +05:30 [INF] Route matched with {action = "ReturnOrderItems", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReturnOrderItems(InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 18:25:52.009 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:25:52.011 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:25:52.017 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:25:52.027 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:25:52.031 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:25:52.038 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 18:25:52.042 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 18:25:52.051 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-09 18:25:52.057 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' using the name '' in request data ...
2025-05-09 18:25:52.059 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 18:25:52.079 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:00000019": started reading request body.
2025-05-09 18:25:52.119 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:00000019": done reading request body.
2025-05-09 18:25:52.129 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'
2025-05-09 18:25:52.136 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 18:25:52.141 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 18:25:52.144 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-09 18:25:52.160 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 18:25:52.164 +05:30 [DBG] The request has model state errors, returning an error response.
2025-05-09 18:25:52.174 +05:30 [DBG] Request was short circuited at action filter 'Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter'.
2025-05-09 18:25:52.176 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:25:52.190 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:25:52.191 +05:30 [DBG] Attempting to select the first output formatter in the output formatters list which supports a content type from the explicitly specified content types '["application/problem+json","application/problem+xml","application/problem+json","application/problem+xml"]'.
2025-05-09 18:25:52.197 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/problem+json' to write the response.
2025-05-09 18:25:52.219 +05:30 [INF] Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
2025-05-09 18:25:52.222 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem) in 183.5907ms
2025-05-09 18:25:52.233 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 18:25:52.235 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - 400 null application/problem+json; charset=utf-8 266.4836ms
2025-05-09 18:26:14.333 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - application/json 47
2025-05-09 18:26:14.341 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/return-order-items'
2025-05-09 18:26:14.345 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)' with route pattern 'api/Order/return-order-items' is valid for the request path '/api/Order/return-order-items'
2025-05-09 18:26:14.351 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 18:26:14.353 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:26:14.354 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:26:14.356 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:26:14.358 +05:30 [DBG] Authorization was successful.
2025-05-09 18:26:14.359 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 18:26:14.362 +05:30 [INF] Route matched with {action = "ReturnOrderItems", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReturnOrderItems(InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 18:26:14.372 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:26:14.376 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:26:14.378 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:26:14.384 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:26:14.388 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:26:14.391 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 18:26:14.393 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 18:26:14.395 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-09 18:26:14.399 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' using the name '' in request data ...
2025-05-09 18:26:14.403 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 18:26:14.405 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:0000001B": started reading request body.
2025-05-09 18:26:14.406 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:0000001B": done reading request body.
2025-05-09 18:26:14.408 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'
2025-05-09 18:26:14.409 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 18:26:14.410 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 18:26:14.411 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-09 18:26:14.415 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 18:26:14.420 +05:30 [INF] Processing return for OrderId 4
2025-05-09 18:26:14.423 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:26:14.427 +05:30 [DBG] Compiling query expression: 
'DbSet<OrderItems>()
    .Where(x => x.OrderId == __orderId_0 && __productIds_1.Contains(x.ProductId))'
2025-05-09 18:26:14.532 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<OrderItems>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE (o.OrderId == @__orderId_0) && o.ProductId IN (
            SELECT p.value
            FROM OPENJSON(@__productIds_1) WITH (value bigint '') AS p)) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 1], [Property: OrderItems.OrderId (long) Required FK Index, 2], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 3], [Property: OrderItems.ProductId (long) Required FK Index, 4], [Property: OrderItems.ProductPrice (decimal) Required, 5], [Property: OrderItems.Quantity (int) Required, 6], [Property: OrderItems.TotalPrice (decimal) Required, 7] }
        SELECT o.OrderItemId, o.OrderDate, o.OrderId, o.OrderItemStatus, o.ProductId, o.ProductPrice, o.Quantity, o.TotalPrice
        FROM OrderItems AS o
        WHERE (o.OrderId == @__orderId_0) && o.ProductId IN (
            SELECT p.value
            FROM OPENJSON(@__productIds_1) WITH (value bigint '') AS p), 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        OrderItems entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            OrderItems instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(OrderItems);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: OrderItems.OrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (OrderItems)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]: 
                        {
                            return 
                            {
                                OrderItems instance;
                                instance = new OrderItems();
                                instance.<OrderItemId>k__BackingField = dataReader.GetInt64(0);
                                instance.<OrderDate>k__BackingField = dataReader.GetDateTime(1);
                                instance.<OrderId>k__BackingField = dataReader.GetInt64(2);
                                instance.<OrderItemStatus>k__BackingField = dataReader.GetInt32(3);
                                instance.<ProductId>k__BackingField = dataReader.GetInt64(4);
                                instance.<ProductPrice>k__BackingField = dataReader.GetDecimal(5);
                                instance.<Quantity>k__BackingField = dataReader.GetInt32(6);
                                instance.<TotalPrice>k__BackingField = dataReader.GetDecimal(7);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(OrderItems)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 18:26:14.584 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:26:14.586 +05:30 [DBG] Created DbConnection. (2ms).
2025-05-09 18:26:14.588 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:26:14.590 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:26:14.592 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:26:14.593 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:26:14.599 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-05-09 18:26:14.601 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-09 18:26:14.618 +05:30 [INF] Executed DbCommand (18ms) [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-09 18:26:14.624 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:26:14.626 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 18:26:14.628 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:26:14.630 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:26:14.632 +05:30 [WRN] No matching items found for return in OrderId 4
2025-05-09 18:26:14.633 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:26:14.637 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:26:14.638 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:26:14.639 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:26:14.641 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:26:14.643 +05:30 [INF] Executing NotFoundObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:26:14.645 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem) in 253.8526ms
2025-05-09 18:26:14.656 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 18:26:14.658 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:26:14.659 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:26:14.661 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:26:14.663 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - 404 null application/json; charset=utf-8 330.0063ms
2025-05-09 18:26:49.130 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - application/json 47
2025-05-09 18:26:49.141 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/return-order-items'
2025-05-09 18:26:49.146 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)' with route pattern 'api/Order/return-order-items' is valid for the request path '/api/Order/return-order-items'
2025-05-09 18:26:49.154 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 18:26:49.157 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:26:49.158 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:26:49.159 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:26:49.161 +05:30 [DBG] Authorization was successful.
2025-05-09 18:26:49.162 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 18:26:49.170 +05:30 [INF] Route matched with {action = "ReturnOrderItems", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReturnOrderItems(InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 18:26:49.240 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:26:49.244 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:26:49.247 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:26:49.255 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:26:49.258 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:26:49.261 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 18:26:49.268 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 18:26:49.271 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-09 18:26:49.276 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' using the name '' in request data ...
2025-05-09 18:26:49.278 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 18:26:49.280 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:0000001D": started reading request body.
2025-05-09 18:26:49.283 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:0000001D": done reading request body.
2025-05-09 18:26:49.287 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'
2025-05-09 18:26:49.290 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 18:26:49.292 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 18:26:49.293 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-09 18:26:49.296 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 18:26:49.299 +05:30 [INF] Processing return for OrderId 4
2025-05-09 18:26:49.303 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:26:49.306 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:26:49.307 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 18:26:49.308 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:26:49.310 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:26:49.311 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:26:49.312 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:26:49.314 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:26:49.316 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-09 18:26:49.339 +05:30 [INF] Executed DbCommand (23ms) [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-09 18:26:49.343 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:26:49.345 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 18:26:49.348 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:26:49.349 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:26:49.353 +05:30 [WRN] No matching items found for return in OrderId 4
2025-05-09 18:26:49.355 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:26:49.358 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:26:49.359 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:26:49.361 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:26:49.361 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:26:49.363 +05:30 [INF] Executing NotFoundObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:26:49.367 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem) in 105.4634ms
2025-05-09 18:26:49.376 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 18:26:49.378 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:26:49.379 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:26:49.381 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:26:49.383 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - 404 null application/json; charset=utf-8 252.9843ms
2025-05-09 18:27:22.454 +05:30 [INF] Request starting HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - application/json 47
2025-05-09 18:27:22.472 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/return-order-items'
2025-05-09 18:27:22.476 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)' with route pattern 'api/Order/return-order-items' is valid for the request path '/api/Order/return-order-items'
2025-05-09 18:27:22.481 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 18:27:22.488 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:27:22.493 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:27:22.496 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:27:22.503 +05:30 [DBG] Authorization was successful.
2025-05-09 18:27:22.512 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 18:27:22.541 +05:30 [INF] Route matched with {action = "ReturnOrderItems", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReturnOrderItems(InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 18:27:22.550 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:27:22.557 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:27:22.559 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:27:22.564 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:27:22.568 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:27:22.572 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 18:27:22.575 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 18:27:22.578 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-09 18:27:22.581 +05:30 [DBG] Attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' using the name '' in request data ...
2025-05-09 18:27:22.583 +05:30 [DBG] Selected input formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonInputFormatter' for content type 'application/json'.
2025-05-09 18:27:22.604 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:0000001F": started reading request body.
2025-05-09 18:27:22.631 +05:30 [DBG] Connection id "0HNCEUIJVSIHI", Request id "0HNCEUIJVSIHI:0000001F": done reading request body.
2025-05-09 18:27:22.633 +05:30 [DBG] JSON input formatter succeeded, deserializing to type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'
2025-05-09 18:27:22.636 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 18:27:22.642 +05:30 [DBG] Done attempting to bind parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 18:27:22.644 +05:30 [DBG] Attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest' ...
2025-05-09 18:27:22.646 +05:30 [DBG] Done attempting to validate the bound parameter 'request' of type 'InventoryManagementSystem.Models.Request.ReturnOrderItemsRequest'.
2025-05-09 18:27:22.648 +05:30 [INF] Processing return for OrderId 3
2025-05-09 18:27:22.650 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:27:22.656 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:27:22.658 +05:30 [DBG] Created DbConnection. (2ms).
2025-05-09 18:27:22.660 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.661 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.664 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:27:22.666 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:27:22.668 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-09 18:27:22.674 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-09 18:27:22.687 +05:30 [INF] Executed DbCommand (13ms) [Parameters=[@__orderId_0='?' (DbType = Int64), @__productIds_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT [o].[OrderItemId], [o].[OrderDate], [o].[OrderId], [o].[OrderItemStatus], [o].[ProductId], [o].[ProductPrice], [o].[Quantity], [o].[TotalPrice]
FROM [OrderItems] AS [o]
WHERE [o].[OrderId] = @__orderId_0 AND [o].[ProductId] IN (
    SELECT [p].[value]
    FROM OPENJSON(@__productIds_1) WITH ([value] bigint '$') AS [p]
)
2025-05-09 18:27:22.694 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:22.697 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.699 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 4ms reading results.
2025-05-09 18:27:22.708 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.711 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 18:27:22.724 +05:30 [DBG] Compiling query expression: 
'DbSet<Products>()
    .FirstOrDefault(e => EF.Property<long>(e, "ProductId") == __p_0)'
2025-05-09 18:27:22.732 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Products>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Products>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Products.AvailableQuantity (int) Required, 1], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 2], [Property: Products.CreatedAt (DateTime) Required, 3], [Property: Products.CreatedBy (long) Required FK Index, 4], [Property: Products.Description (string) MaxLength(225), 5], [Property: Products.IsDeleted (bool) Required, 6], [Property: Products.LastRestockAt (DateTime) Required, 7], [Property: Products.MinimumRequiredQuantity (int) Required, 8], [Property: Products.Name (string) Required MaxLength(100), 9], [Property: Products.Price (decimal) Required, 10], [Property: Products.ProductStatus (int) Required, 11], [Property: Products.UpdatedAt (DateTime) Required, 12], [Property: Products.UpdatedBy (long) Required FK Index, 13] }
            SELECT TOP(1) p.ProductId, p.AvailableQuantity, p.CategoryId, p.CreatedAt, p.CreatedBy, p.Description, p.IsDeleted, p.LastRestockAt, p.MinimumRequiredQuantity, p.Name, p.Price, p.ProductStatus, p.UpdatedAt, p.UpdatedBy
            FROM Products AS p
            WHERE p.ProductId == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Products entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Products instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Products);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Products)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                            {
                                return 
                                {
                                    Products instance;
                                    instance = new Products();
                                    instance.<ProductId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<AvailableQuantity>k__BackingField = dataReader.GetInt32(1);
                                    instance.<CategoryId>k__BackingField = dataReader.GetInt32(2);
                                    instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(3);
                                    instance.<CreatedBy>k__BackingField = dataReader.GetInt64(4);
                                    instance.<Description>k__BackingField = dataReader.IsDBNull(5) ? default(string) : dataReader.GetString(5);
                                    instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(6);
                                    instance.<LastRestockAt>k__BackingField = dataReader.GetDateTime(7);
                                    instance.<MinimumRequiredQuantity>k__BackingField = dataReader.GetInt32(8);
                                    instance.<Name>k__BackingField = dataReader.GetString(9);
                                    instance.<Price>k__BackingField = dataReader.GetDecimal(10);
                                    instance.<ProductStatus>k__BackingField = dataReader.GetInt32(11);
                                    instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(12);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(13);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Products)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 18:27:22.760 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.762 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.764 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:27:22.766 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:27:22.769 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-09 18:27:22.772 +05:30 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__p_0
2025-05-09 18:27:22.781 +05:30 [INF] Executed DbCommand (9ms) [Parameters=[@__p_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__p_0
2025-05-09 18:27:22.787 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:22.793 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:22.796 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.797 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 11ms reading results.
2025-05-09 18:27:22.801 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.806 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (4ms).
2025-05-09 18:27:22.813 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:22.816 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 18:27:22.819 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 18:27:22.821 +05:30 [DBG] The unchanged property 'OrderItems.OrderDate' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:27:22.823 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:22.827 +05:30 [DBG] The unchanged property 'OrderItems.OrderItemStatus' was detected as changed and will be marked as modified. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:27:22.829 +05:30 [DBG] The foreign key property 'OrderItems.OrderItemStatus' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:27:22.831 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 18:27:22.833 +05:30 [DBG] Executing 2 update commands as a batch.
2025-05-09 18:27:22.834 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.836 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.839 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-09 18:27:22.841 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-09 18:27:22.842 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:27:22.843 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:27:22.845 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:27:22.847 +05:30 [DBG] Executing DbCommand [Parameters=[@p2='?' (DbType = Int64), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32), @p16='?' (DbType = Int64), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64), @p7='?' (Size = 225), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Int32), @p11='?' (Size = 100), @p12='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p13='?' (DbType = Int32), @p14='?' (DbType = DateTime2), @p15='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [OrderItems] SET [OrderDate] = @p0, [OrderItemStatus] = @p1
OUTPUT 1
WHERE [OrderItemId] = @p2;
UPDATE [Products] SET [AvailableQuantity] = @p3, [CategoryId] = @p4, [CreatedAt] = @p5, [CreatedBy] = @p6, [Description] = @p7, [IsDeleted] = @p8, [LastRestockAt] = @p9, [MinimumRequiredQuantity] = @p10, [Name] = @p11, [Price] = @p12, [ProductStatus] = @p13, [UpdatedAt] = @p14, [UpdatedBy] = @p15
OUTPUT 1
WHERE [ProductId] = @p16;
2025-05-09 18:27:22.867 +05:30 [INF] Executed DbCommand (20ms) [Parameters=[@p2='?' (DbType = Int64), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int32), @p16='?' (DbType = Int64), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTime2), @p6='?' (DbType = Int64), @p7='?' (Size = 225), @p8='?' (DbType = Boolean), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Int32), @p11='?' (Size = 100), @p12='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p13='?' (DbType = Int32), @p14='?' (DbType = DateTime2), @p15='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [OrderItems] SET [OrderDate] = @p0, [OrderItemStatus] = @p1
OUTPUT 1
WHERE [OrderItemId] = @p2;
UPDATE [Products] SET [AvailableQuantity] = @p3, [CategoryId] = @p4, [CreatedAt] = @p5, [CreatedBy] = @p6, [Description] = @p7, [IsDeleted] = @p8, [LastRestockAt] = @p9, [MinimumRequiredQuantity] = @p10, [Name] = @p11, [Price] = @p12, [ProductStatus] = @p13, [UpdatedAt] = @p14, [UpdatedBy] = @p15
OUTPUT 1
WHERE [ProductId] = @p16;
2025-05-09 18:27:22.875 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.876 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 18:27:22.879 +05:30 [DBG] Committing transaction.
2025-05-09 18:27:22.880 +05:30 [DBG] Committed transaction.
2025-05-09 18:27:22.881 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.882 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:27:22.886 +05:30 [DBG] Disposing transaction.
2025-05-09 18:27:22.888 +05:30 [DBG] An entity of type 'Products' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:22.891 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:22.893 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 2 entities written to the database.
2025-05-09 18:27:22.895 +05:30 [INF] Starting stock movement for ProductId: 4, UserId: 2, Status: "Returned"
2025-05-09 18:27:22.897 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.898 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.900 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:27:22.902 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:27:22.904 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-09 18:27:22.906 +05:30 [DBG] Executing DbCommand [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 18:27:22.912 +05:30 [INF] Executed DbCommand (6ms) [Parameters=[@__productId_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[ProductId] = @__productId_0
2025-05-09 18:27:22.917 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.919 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 18:27:22.922 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.924 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:27:22.926 +05:30 [INF] 'Return' movement for ProductId: 4
2025-05-09 18:27:22.927 +05:30 [DBG] 'ApplicationDbContext' generated a temporary value for the property 'StocksMovement.MovementId'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:22.930 +05:30 [DBG] The navigation 'StocksMovement.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:22.932 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'StocksMovement' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:22.935 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 18:27:22.936 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 18:27:22.938 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 18:27:22.940 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.942 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.944 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:27:22.946 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:27:22.948 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (4ms).
2025-05-09 18:27:22.950 +05:30 [DBG] Executing DbCommand [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 18:27:22.962 +05:30 [INF] Executed DbCommand (12ms) [Parameters=[@p0='?' (Size = 4000), @p1='?' (DbType = DateTime2), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int64), @p5='?' (DbType = Int32), @p6='?' (DbType = Int64), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [StocksMovement] ([Comments], [MovementDate], [MovementTypeId], [PreviousQuantity], [ProductId], [QuantityChange], [UpdateBy], [UpdateQuantity])
OUTPUT INSERTED.[MovementId]
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7);
2025-05-09 18:27:22.967 +05:30 [DBG] The foreign key property 'StocksMovement.MovementId' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:27:22.969 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.971 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 4ms reading results.
2025-05-09 18:27:22.975 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:22.977 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:27:22.979 +05:30 [DBG] An entity of type 'StocksMovement' tracked by 'ApplicationDbContext' changed state from '"Added"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:22.982 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 1 entities written to the database.
2025-05-09 18:27:22.983 +05:30 [INF] Stock movement successfully for ProductId: 4
2025-05-09 18:27:22.989 +05:30 [DBG] Compiling query expression: 
'DbSet<Orders>()
    .FirstOrDefault(e => EF.Property<long>(e, "OrderId") == __p_0)'
2025-05-09 18:27:22.997 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Orders>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Orders>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Orders.OrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Orders.NumberOfItems (int) Required, 1], [Property: Orders.OrderDate (DateTime) Required ValueGenerated.OnAdd, 2], [Property: Orders.OrderStatus (int) Required FK Index, 3], [Property: Orders.PaymentDate (DateTime) Required, 4], [Property: Orders.PaymentMethod (int) Required FK Index, 5], [Property: Orders.PaymentStatus (int) Required FK Index, 6], [Property: Orders.PaymentType (int) Required FK Index, 7], [Property: Orders.TotalCost (decimal) Required, 8], [Property: Orders.TotalQuantity (int) Required, 9], [Property: Orders.UpdatedBy (long) Required FK Index, 10], [Property: Orders.UpdatedDate (DateTime) Required ValueGenerated.OnAdd, 11], [Property: Orders.UserId (long) Required FK Index, 12] }
            SELECT TOP(1) o.OrderId, o.NumberOfItems, o.OrderDate, o.OrderStatus, o.PaymentDate, o.PaymentMethod, o.PaymentStatus, o.PaymentType, o.TotalCost, o.TotalQuantity, o.UpdatedBy, o.UpdatedDate, o.UserId
            FROM Orders AS o
            WHERE o.OrderId == @__p_0) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Projection Mapping:
                EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: Orders.OrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Orders.NumberOfItems (int) Required, 1], [Property: Orders.OrderDate (DateTime) Required ValueGenerated.OnAdd, 2], [Property: Orders.OrderStatus (int) Required FK Index, 3], [Property: Orders.PaymentDate (DateTime) Required, 4], [Property: Orders.PaymentMethod (int) Required FK Index, 5], [Property: Orders.PaymentStatus (int) Required FK Index, 6], [Property: Orders.PaymentType (int) Required FK Index, 7], [Property: Orders.TotalCost (decimal) Required, 8], [Property: Orders.TotalQuantity (int) Required, 9], [Property: Orders.UpdatedBy (long) Required FK Index, 10], [Property: Orders.UpdatedDate (DateTime) Required ValueGenerated.OnAdd, 11], [Property: Orders.UserId (long) Required FK Index, 12] }
            SELECT TOP(1) o.OrderId, o.NumberOfItems, o.OrderDate, o.OrderStatus, o.PaymentDate, o.PaymentMethod, o.PaymentStatus, o.PaymentType, o.TotalCost, o.TotalQuantity, o.UpdatedBy, o.UpdatedDate, o.UserId
            FROM Orders AS o
            WHERE o.OrderId == @__p_0, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            Orders entity;
            entity = 
            {
                MaterializationContext materializationContext1;
                IEntityType entityType1;
                Orders instance1;
                InternalEntityEntry entry1;
                bool hasNullKey1;
                materializationContext1 = new MaterializationContext(
                    [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                    queryContext.Context
                );
                instance1 = default(Orders);
                entry1 = queryContext.TryGetEntry(
                    key: [LIFTABLE Constant: Key: Orders.OrderId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindPrimaryKey()], 
                    keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                    throwOnNullKey: True, 
                    hasNullKey: hasNullKey1);
                !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                {
                    entityType1 = entry1.EntityType;
                    return instance1 = (Orders)entry1.Entity;
                } : 
                {
                    ISnapshot shadowSnapshot1;
                    shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                    entityType1 = [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")];
                    instance1 = switch (entityType1)
                    {
                        case [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")]: 
                            {
                                return 
                                {
                                    Orders instance;
                                    instance = new Orders();
                                    instance.<OrderId>k__BackingField = dataReader.GetInt64(0);
                                    instance.<NumberOfItems>k__BackingField = dataReader.GetInt32(1);
                                    instance.<OrderDate>k__BackingField = dataReader.GetDateTime(2);
                                    instance.<OrderStatus>k__BackingField = dataReader.GetInt32(3);
                                    instance.<PaymentDate>k__BackingField = dataReader.GetDateTime(4);
                                    instance.<PaymentMethod>k__BackingField = dataReader.GetInt32(5);
                                    instance.<PaymentStatus>k__BackingField = dataReader.GetInt32(6);
                                    instance.<PaymentType>k__BackingField = dataReader.GetInt32(7);
                                    instance.<TotalCost>k__BackingField = dataReader.GetDecimal(8);
                                    instance.<TotalQuantity>k__BackingField = dataReader.GetInt32(9);
                                    instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(10);
                                    instance.<UpdatedDate>k__BackingField = dataReader.GetDateTime(11);
                                    instance.<UserId>k__BackingField = dataReader.GetInt64(12);
                                    (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                        context: materializationContext1.Context, 
                                        entity: instance, 
                                        queryTrackingBehavior: TrackAll, 
                                        structuralType: [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")]) : default(void);
                                    return instance;
                                }}
                        default: 
                            default(Orders)
                    }
                    ;
                    entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                        entityType: entityType1, 
                        entity: instance1, 
                        snapshot: shadowSnapshot1);
                    return instance1;
                } : default(void);
                return instance1;
            };
            return entity;
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 18:27:23.074 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:23.077 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:23.079 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:27:23.081 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:27:23.087 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (7ms).
2025-05-09 18:27:23.090 +05:30 [DBG] Executing DbCommand [Parameters=[@__p_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[OrderId], [o].[NumberOfItems], [o].[OrderDate], [o].[OrderStatus], [o].[PaymentDate], [o].[PaymentMethod], [o].[PaymentStatus], [o].[PaymentType], [o].[TotalCost], [o].[TotalQuantity], [o].[UpdatedBy], [o].[UpdatedDate], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[OrderId] = @__p_0
2025-05-09 18:27:23.097 +05:30 [INF] Executed DbCommand (8ms) [Parameters=[@__p_0='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [o].[OrderId], [o].[NumberOfItems], [o].[OrderDate], [o].[OrderStatus], [o].[PaymentDate], [o].[PaymentMethod], [o].[PaymentStatus], [o].[PaymentType], [o].[TotalCost], [o].[TotalQuantity], [o].[UpdatedBy], [o].[UpdatedDate], [o].[UserId]
FROM [Orders] AS [o]
WHERE [o].[OrderId] = @__p_0
2025-05-09 18:27:23.110 +05:30 [DBG] The navigation 'OrderItems.Order' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:23.113 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Orders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:23.116 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:23.119 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 10ms reading results.
2025-05-09 18:27:23.123 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:23.126 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 18:27:23.129 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:23.132 +05:30 [DBG] An entity of type 'Orders' tracked by 'ApplicationDbContext' changed state from '"Unchanged"' to '"Modified"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:23.135 +05:30 [DBG] SaveChanges starting for 'ApplicationDbContext'.
2025-05-09 18:27:23.137 +05:30 [DBG] DetectChanges starting for 'ApplicationDbContext'.
2025-05-09 18:27:23.139 +05:30 [DBG] The foreign key property 'Orders.UpdatedBy' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see property values.
2025-05-09 18:27:23.141 +05:30 [DBG] DetectChanges completed for 'ApplicationDbContext'.
2025-05-09 18:27:23.143 +05:30 [DBG] Executing 2 update commands as a batch.
2025-05-09 18:27:23.144 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:23.146 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:23.147 +05:30 [DBG] Beginning transaction with isolation level 'Unspecified'.
2025-05-09 18:27:23.149 +05:30 [DBG] Began transaction with isolation level 'ReadCommitted'.
2025-05-09 18:27:23.150 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:27:23.152 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:27:23.153 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:27:23.155 +05:30 [DBG] Executing DbCommand [Parameters=[@p7='?' (DbType = Int64), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int64), @p2='?' (DbType = Int32), @p3='?' (DbType = Int64), @p4='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p5='?' (DbType = Int32), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p20='?' (DbType = Int64), @p8='?' (DbType = Int32), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int32), @p13='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p16='?' (DbType = Int32), @p17='?' (DbType = Int64), @p18='?' (DbType = DateTime2), @p19='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [OrderItems] SET [OrderDate] = @p0, [OrderId] = @p1, [OrderItemStatus] = @p2, [ProductId] = @p3, [ProductPrice] = @p4, [Quantity] = @p5, [TotalPrice] = @p6
OUTPUT 1
WHERE [OrderItemId] = @p7;
UPDATE [Orders] SET [NumberOfItems] = @p8, [OrderDate] = @p9, [OrderStatus] = @p10, [PaymentDate] = @p11, [PaymentMethod] = @p12, [PaymentStatus] = @p13, [PaymentType] = @p14, [TotalCost] = @p15, [TotalQuantity] = @p16, [UpdatedBy] = @p17, [UpdatedDate] = @p18, [UserId] = @p19
OUTPUT 1
WHERE [OrderId] = @p20;
2025-05-09 18:27:23.173 +05:30 [INF] Executed DbCommand (18ms) [Parameters=[@p7='?' (DbType = Int64), @p0='?' (DbType = DateTime2), @p1='?' (DbType = Int64), @p2='?' (DbType = Int32), @p3='?' (DbType = Int64), @p4='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p5='?' (DbType = Int32), @p6='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p20='?' (DbType = Int64), @p8='?' (DbType = Int32), @p9='?' (DbType = DateTime2), @p10='?' (DbType = Int32), @p11='?' (DbType = DateTime2), @p12='?' (DbType = Int32), @p13='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (Precision = 18) (Scale = 2) (DbType = Decimal), @p16='?' (DbType = Int32), @p17='?' (DbType = Int64), @p18='?' (DbType = DateTime2), @p19='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
UPDATE [OrderItems] SET [OrderDate] = @p0, [OrderId] = @p1, [OrderItemStatus] = @p2, [ProductId] = @p3, [ProductPrice] = @p4, [Quantity] = @p5, [TotalPrice] = @p6
OUTPUT 1
WHERE [OrderItemId] = @p7;
UPDATE [Orders] SET [NumberOfItems] = @p8, [OrderDate] = @p9, [OrderStatus] = @p10, [PaymentDate] = @p11, [PaymentMethod] = @p12, [PaymentStatus] = @p13, [PaymentType] = @p14, [TotalCost] = @p15, [TotalQuantity] = @p16, [UpdatedBy] = @p17, [UpdatedDate] = @p18, [UserId] = @p19
OUTPUT 1
WHERE [OrderId] = @p20;
2025-05-09 18:27:23.180 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:23.181 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 1ms reading results.
2025-05-09 18:27:23.183 +05:30 [DBG] Committing transaction.
2025-05-09 18:27:23.186 +05:30 [DBG] Committed transaction.
2025-05-09 18:27:23.187 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:23.188 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:27:23.190 +05:30 [DBG] Disposing transaction.
2025-05-09 18:27:23.191 +05:30 [DBG] An entity of type 'Orders' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:23.194 +05:30 [DBG] An entity of type 'OrderItems' tracked by 'ApplicationDbContext' changed state from '"Modified"' to '"Unchanged"'. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:23.196 +05:30 [DBG] SaveChanges completed for 'ApplicationDbContext' with 2 entities written to the database.
2025-05-09 18:27:23.198 +05:30 [INF] Return processed successfully for OrderId 3
2025-05-09 18:27:23.199 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:27:23.203 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:27:23.204 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:27:23.206 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:27:23.207 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:27:23.210 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:27:23.212 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem) in 639.774ms
2025-05-09 18:27:23.214 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.ReturnOrderItems (InventoryManagementSystem)'
2025-05-09 18:27:23.216 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:27:23.218 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:23.220 +05:30 [DBG] Disposed connection to database '' on server '' (2ms).
2025-05-09 18:27:23.222 +05:30 [INF] Request finished HTTP/2 PUT https://localhost:7150/api/Order/return-order-items - 200 null application/json; charset=utf-8 768.4778ms
2025-05-09 18:27:43.911 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Product/get-all-products - null null
2025-05-09 18:27:43.931 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Product/get-all-products'
2025-05-09 18:27:43.933 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)' with route pattern 'api/Product/get-all-products' is valid for the request path '/api/Product/get-all-products'
2025-05-09 18:27:43.937 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 18:27:43.941 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:27:43.944 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:27:43.949 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:27:43.952 +05:30 [DBG] Authorization was successful.
2025-05-09 18:27:43.953 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 18:27:43.958 +05:30 [INF] Route matched with {action = "GetAllProducts", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllProducts() on controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem).
2025-05-09 18:27:43.967 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:27:43.972 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:27:43.975 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:27:43.978 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:27:43.981 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:27:43.984 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:27:43.989 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.ProductController (InventoryManagementSystem)
2025-05-09 18:27:43.993 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:27:43.997 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:27:44.000 +05:30 [DBG] Created DbConnection. (2ms).
2025-05-09 18:27:44.003 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:44.007 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:44.009 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:27:44.013 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:27:44.015 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-05-09 18:27:44.017 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:27:44.040 +05:30 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[ProductId], [p].[AvailableQuantity], [p].[CategoryId], [p].[CreatedAt], [p].[CreatedBy], [p].[Description], [p].[IsDeleted], [p].[LastRestockAt], [p].[MinimumRequiredQuantity], [p].[Name], [p].[Price], [p].[ProductStatus], [p].[UpdatedAt], [p].[UpdatedBy]
FROM [Products] AS [p]
WHERE [p].[IsDeleted] = CAST(0 AS bit)
2025-05-09 18:27:44.045 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:44.047 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:44.049 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:44.051 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:27:44.055 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:44.057 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 12ms reading results.
2025-05-09 18:27:44.061 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:44.063 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (1ms).
2025-05-09 18:27:44.065 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:27:44.069 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:27:44.071 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:27:44.074 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:27:44.075 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:27:44.077 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Responces.ProductResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:27:44.081 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem) in 96.7243ms
2025-05-09 18:27:44.083 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.ProductController.GetAllProducts (InventoryManagementSystem)'
2025-05-09 18:27:44.087 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:27:44.089 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:27:44.092 +05:30 [DBG] Disposed connection to database '' on server '' (2ms).
2025-05-09 18:27:44.095 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Product/get-all-products - 200 null application/json; charset=utf-8 184.1933ms
2025-05-09 18:28:20.067 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Order/customer-order/3 - null null
2025-05-09 18:28:20.081 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Order/customer-order/3'
2025-05-09 18:28:20.082 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)' with route pattern 'api/Order/customer-order/{orderId}' is valid for the request path '/api/Order/customer-order/3'
2025-05-09 18:28:20.086 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)'
2025-05-09 18:28:20.088 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:28:20.092 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:28:20.095 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:28:20.098 +05:30 [DBG] Authorization was successful.
2025-05-09 18:28:20.099 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)'
2025-05-09 18:28:20.105 +05:30 [INF] Route matched with {action = "GetCustomerOrderById", controller = "Order"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCustomerOrderById(Int64) on controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem).
2025-05-09 18:28:20.112 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:28:20.115 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:28:20.117 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:28:20.125 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:28:20.128 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:28:20.131 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 18:28:20.135 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.OrderController (InventoryManagementSystem)
2025-05-09 18:28:20.137 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' ...
2025-05-09 18:28:20.140 +05:30 [DBG] Attempting to bind parameter 'orderId' of type 'System.Int64' using the name 'orderId' in request data ...
2025-05-09 18:28:20.143 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-09 18:28:20.145 +05:30 [DBG] Done attempting to bind parameter 'orderId' of type 'System.Int64'.
2025-05-09 18:28:20.146 +05:30 [DBG] Attempting to validate the bound parameter 'orderId' of type 'System.Int64' ...
2025-05-09 18:28:20.149 +05:30 [DBG] Done attempting to validate the bound parameter 'orderId' of type 'System.Int64'.
2025-05-09 18:28:20.153 +05:30 [INF] Fetching order details for OrderId 3, UserId 2
2025-05-09 18:28:20.158 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:28:20.163 +05:30 [DBG] Compiling query expression: 
'DbSet<Orders>()
    .Include(o => o.OrderItems)
    .ThenInclude(oi => oi.Product)
    .Include(o => o.OrderStatusNavigation)
    .Include(o => o.PaymentTypeNavigation)
    .Include(o => o.PaymentMethodNavigation)
    .Include(o => o.PaymentStatusNavigation)
    .FirstOrDefault(o => o.OrderId == __orderId_0 && o.UserId == __userId_1)'
2025-05-09 18:28:20.169 +05:30 [DBG] Including navigation: 'Orders.OrderItems'.
2025-05-09 18:28:20.172 +05:30 [DBG] Including navigation: 'Orders.OrderStatusNavigation'.
2025-05-09 18:28:20.177 +05:30 [DBG] Including navigation: 'Orders.PaymentTypeNavigation'.
2025-05-09 18:28:20.181 +05:30 [DBG] Including navigation: 'Orders.PaymentMethodNavigation'.
2025-05-09 18:28:20.201 +05:30 [DBG] Including navigation: 'Orders.PaymentStatusNavigation'.
2025-05-09 18:28:20.236 +05:30 [DBG] Including navigation: 'OrderItems.Product'.
2025-05-09 18:28:20.283 +05:30 [DBG] Generated query execution expression: 
'queryContext => ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync<Orders>(
    asyncEnumerable: SingleQueryingEnumerable.Create<Orders>(
        relationalQueryContext: (RelationalQueryContext)queryContext, 
        relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Orders.OrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Orders.NumberOfItems (int) Required, 1], [Property: Orders.OrderDate (DateTime) Required ValueGenerated.OnAdd, 2], [Property: Orders.OrderStatus (int) Required FK Index, 3], [Property: Orders.PaymentDate (DateTime) Required, 4], [Property: Orders.PaymentMethod (int) Required FK Index, 5], [Property: Orders.PaymentStatus (int) Required FK Index, 6], [Property: Orders.PaymentType (int) Required FK Index, 7], [Property: Orders.TotalCost (decimal) Required, 8], [Property: Orders.TotalQuantity (int) Required, 9], [Property: Orders.UpdatedBy (long) Required FK Index, 10], [Property: Orders.UpdatedDate (DateTime) Required ValueGenerated.OnAdd, 11], [Property: Orders.UserId (long) Required FK Index, 12] }
                1 -> 0
                2 -> 13
                3 -> 14
                4 -> 15
                5 -> 16
                6 -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 18], [Property: OrderItems.OrderId (long) Required FK Index, 19], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 20], [Property: OrderItems.ProductId (long) Required FK Index, 21], [Property: OrderItems.ProductPrice (decimal) Required, 22], [Property: OrderItems.Quantity (int) Required, 23], [Property: OrderItems.TotalPrice (decimal) Required, 24] }
                7 -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Products.AvailableQuantity (int) Required, 26], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 27], [Property: Products.CreatedAt (DateTime) Required, 28], [Property: Products.CreatedBy (long) Required FK Index, 29], [Property: Products.Description (string) MaxLength(225), 30], [Property: Products.IsDeleted (bool) Required, 31], [Property: Products.LastRestockAt (DateTime) Required, 32], [Property: Products.MinimumRequiredQuantity (int) Required, 33], [Property: Products.Name (string) Required MaxLength(100), 34], [Property: Products.Price (decimal) Required, 35], [Property: Products.ProductStatus (int) Required, 36], [Property: Products.UpdatedAt (DateTime) Required, 37], [Property: Products.UpdatedBy (long) Required FK Index, 38] }
                8 -> 17
                9 -> 25
                10 -> Dictionary<IProperty, int> { [Property: OrderStatus.StatusId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: OrderStatus.Name (string) Required MaxLength(100), 39] }
                11 -> Dictionary<IProperty, int> { [Property: PaymentType.PaymentTypeId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 14], [Property: PaymentType.Name (string) Required MaxLength(100), 40] }
                12 -> Dictionary<IProperty, int> { [Property: PaymentMethod.PaymentMethodId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: PaymentMethod.Name (string) Required MaxLength(100), 41] }
                13 -> Dictionary<IProperty, int> { [Property: PaymentStatus.PaymentStatusId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 16], [Property: PaymentStatus.Name (string) Required MaxLength(100), 42] }
            SELECT s.OrderId, s.NumberOfItems, s.OrderDate, s.OrderStatus, s.PaymentDate, s.PaymentMethod, s.PaymentStatus, s.PaymentType, s.TotalCost, s.TotalQuantity, s.UpdatedBy, s.UpdatedDate, s.UserId, s.StatusId, s.PaymentTypeId, s.PaymentMethodId, s.PaymentStatusId, s0.OrderItemId, s0.OrderDate, s0.OrderId, s0.OrderItemStatus, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.TotalPrice, s0.ProductId0, s0.AvailableQuantity, s0.CategoryId, s0.CreatedAt, s0.CreatedBy, s0.Description, s0.IsDeleted, s0.LastRestockAt, s0.MinimumRequiredQuantity, s0.Name, s0.Price, s0.ProductStatus, s0.UpdatedAt, s0.UpdatedBy, s.Name, s.Name0, s.Name1, s.Name2
            FROM 
            (
                SELECT TOP(1) o.OrderId, o.NumberOfItems, o.OrderDate, o.OrderStatus, o.PaymentDate, o.PaymentMethod, o.PaymentStatus, o.PaymentType, o.TotalCost, o.TotalQuantity, o.UpdatedBy, o.UpdatedDate, o.UserId, o0.StatusId, o0.Name, p.PaymentTypeId, p.Name AS Name0, p0.PaymentMethodId, p0.Name AS Name1, p1.PaymentStatusId, p1.Name AS Name2
                FROM Orders AS o
                INNER JOIN OrderStatus AS o0 ON o.OrderStatus == o0.StatusId
                INNER JOIN PaymentType AS p ON o.PaymentType == p.PaymentTypeId
                INNER JOIN PaymentMethod AS p0 ON o.PaymentMethod == p0.PaymentMethodId
                INNER JOIN PaymentStatus AS p1 ON o.PaymentStatus == p1.PaymentStatusId
                WHERE (o.OrderId == @__orderId_0) && (o.UserId == @__userId_1)
            ) AS s
            LEFT JOIN 
            (
                SELECT o1.OrderItemId, o1.OrderDate, o1.OrderId, o1.OrderItemStatus, o1.ProductId, o1.ProductPrice, o1.Quantity, o1.TotalPrice, p2.ProductId AS ProductId0, p2.AvailableQuantity, p2.CategoryId, p2.CreatedAt, p2.CreatedBy, p2.Description, p2.IsDeleted, p2.LastRestockAt, p2.MinimumRequiredQuantity, p2.Name, p2.Price, p2.ProductStatus, p2.UpdatedAt, p2.UpdatedBy
                FROM OrderItems AS o1
                INNER JOIN Products AS p2 ON o1.ProductId == p2.ProductId
            ) AS s0 ON s.OrderId == s0.OrderId
            ORDER BY s.OrderId ASC, s.StatusId ASC, s.PaymentTypeId ASC, s.PaymentMethodId ASC, s.PaymentStatusId ASC, s0.OrderItemId ASC) | Resolver: c => new RelationalCommandCache(
            c.Dependencies.MemoryCache, 
            c.RelationalDependencies.QuerySqlGeneratorFactory, 
            c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
            Client Projections:
                0 -> Dictionary<IProperty, int> { [Property: Orders.OrderId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: Orders.NumberOfItems (int) Required, 1], [Property: Orders.OrderDate (DateTime) Required ValueGenerated.OnAdd, 2], [Property: Orders.OrderStatus (int) Required FK Index, 3], [Property: Orders.PaymentDate (DateTime) Required, 4], [Property: Orders.PaymentMethod (int) Required FK Index, 5], [Property: Orders.PaymentStatus (int) Required FK Index, 6], [Property: Orders.PaymentType (int) Required FK Index, 7], [Property: Orders.TotalCost (decimal) Required, 8], [Property: Orders.TotalQuantity (int) Required, 9], [Property: Orders.UpdatedBy (long) Required FK Index, 10], [Property: Orders.UpdatedDate (DateTime) Required ValueGenerated.OnAdd, 11], [Property: Orders.UserId (long) Required FK Index, 12] }
                1 -> 0
                2 -> 13
                3 -> 14
                4 -> 15
                5 -> 16
                6 -> Dictionary<IProperty, int> { [Property: OrderItems.OrderItemId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 17], [Property: OrderItems.OrderDate (DateTime) Required ValueGenerated.OnAdd, 18], [Property: OrderItems.OrderId (long) Required FK Index, 19], [Property: OrderItems.OrderItemStatus (int) Required FK Index, 20], [Property: OrderItems.ProductId (long) Required FK Index, 21], [Property: OrderItems.ProductPrice (decimal) Required, 22], [Property: OrderItems.Quantity (int) Required, 23], [Property: OrderItems.TotalPrice (decimal) Required, 24] }
                7 -> Dictionary<IProperty, int> { [Property: Products.ProductId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 25], [Property: Products.AvailableQuantity (int) Required, 26], [Property: Products.CategoryId (int) Required FK Index MaxLength(100), 27], [Property: Products.CreatedAt (DateTime) Required, 28], [Property: Products.CreatedBy (long) Required FK Index, 29], [Property: Products.Description (string) MaxLength(225), 30], [Property: Products.IsDeleted (bool) Required, 31], [Property: Products.LastRestockAt (DateTime) Required, 32], [Property: Products.MinimumRequiredQuantity (int) Required, 33], [Property: Products.Name (string) Required MaxLength(100), 34], [Property: Products.Price (decimal) Required, 35], [Property: Products.ProductStatus (int) Required, 36], [Property: Products.UpdatedAt (DateTime) Required, 37], [Property: Products.UpdatedBy (long) Required FK Index, 38] }
                8 -> 17
                9 -> 25
                10 -> Dictionary<IProperty, int> { [Property: OrderStatus.StatusId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 13], [Property: OrderStatus.Name (string) Required MaxLength(100), 39] }
                11 -> Dictionary<IProperty, int> { [Property: PaymentType.PaymentTypeId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 14], [Property: PaymentType.Name (string) Required MaxLength(100), 40] }
                12 -> Dictionary<IProperty, int> { [Property: PaymentMethod.PaymentMethodId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 15], [Property: PaymentMethod.Name (string) Required MaxLength(100), 41] }
                13 -> Dictionary<IProperty, int> { [Property: PaymentStatus.PaymentStatusId (int) Required PK AfterSave:Throw ValueGenerated.OnAdd, 16], [Property: PaymentStatus.Name (string) Required MaxLength(100), 42] }
            SELECT s.OrderId, s.NumberOfItems, s.OrderDate, s.OrderStatus, s.PaymentDate, s.PaymentMethod, s.PaymentStatus, s.PaymentType, s.TotalCost, s.TotalQuantity, s.UpdatedBy, s.UpdatedDate, s.UserId, s.StatusId, s.PaymentTypeId, s.PaymentMethodId, s.PaymentStatusId, s0.OrderItemId, s0.OrderDate, s0.OrderId, s0.OrderItemStatus, s0.ProductId, s0.ProductPrice, s0.Quantity, s0.TotalPrice, s0.ProductId0, s0.AvailableQuantity, s0.CategoryId, s0.CreatedAt, s0.CreatedBy, s0.Description, s0.IsDeleted, s0.LastRestockAt, s0.MinimumRequiredQuantity, s0.Name, s0.Price, s0.ProductStatus, s0.UpdatedAt, s0.UpdatedBy, s.Name, s.Name0, s.Name1, s.Name2
            FROM 
            (
                SELECT TOP(1) o.OrderId, o.NumberOfItems, o.OrderDate, o.OrderStatus, o.PaymentDate, o.PaymentMethod, o.PaymentStatus, o.PaymentType, o.TotalCost, o.TotalQuantity, o.UpdatedBy, o.UpdatedDate, o.UserId, o0.StatusId, o0.Name, p.PaymentTypeId, p.Name AS Name0, p0.PaymentMethodId, p0.Name AS Name1, p1.PaymentStatusId, p1.Name AS Name2
                FROM Orders AS o
                INNER JOIN OrderStatus AS o0 ON o.OrderStatus == o0.StatusId
                INNER JOIN PaymentType AS p ON o.PaymentType == p.PaymentTypeId
                INNER JOIN PaymentMethod AS p0 ON o.PaymentMethod == p0.PaymentMethodId
                INNER JOIN PaymentStatus AS p1 ON o.PaymentStatus == p1.PaymentStatusId
                WHERE (o.OrderId == @__orderId_0) && (o.UserId == @__userId_1)
            ) AS s
            LEFT JOIN 
            (
                SELECT o1.OrderItemId, o1.OrderDate, o1.OrderId, o1.OrderItemStatus, o1.ProductId, o1.ProductPrice, o1.Quantity, o1.TotalPrice, p2.ProductId AS ProductId0, p2.AvailableQuantity, p2.CategoryId, p2.CreatedAt, p2.CreatedBy, p2.Description, p2.IsDeleted, p2.LastRestockAt, p2.MinimumRequiredQuantity, p2.Name, p2.Price, p2.ProductStatus, p2.UpdatedAt, p2.UpdatedBy
                FROM OrderItems AS o1
                INNER JOIN Products AS p2 ON o1.ProductId == p2.ProductId
            ) AS s0 ON s.OrderId == s0.OrderId
            ORDER BY s.OrderId ASC, s.StatusId ASC, s.PaymentTypeId ASC, s.PaymentMethodId ASC, s.PaymentStatusId ASC, s0.OrderItemId ASC, 
            False, 
            new HashSet<string>(
                new string[]{ }, 
                StringComparer.Ordinal
            )
        )].GetRelationalCommandTemplate(parameters), 
        readerColumns: null, 
        shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
        {
            resultContext.Values == null ? 
            {
                Orders entity;
                OrderStatus entity;
                PaymentType entity;
                PaymentMethod entity;
                PaymentStatus entity;
                entity = 
                {
                    MaterializationContext materializationContext1;
                    IEntityType entityType1;
                    Orders instance1;
                    InternalEntityEntry entry1;
                    bool hasNullKey1;
                    materializationContext1 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance1 = default(Orders);
                    entry1 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: Orders.OrderId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey1);
                    !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
                    {
                        entityType1 = entry1.EntityType;
                        return instance1 = (Orders)entry1.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot1;
                        shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType1 = [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")];
                        instance1 = switch (entityType1)
                        {
                            case [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")]: 
                                {
                                    return 
                                    {
                                        Orders instance;
                                        instance = new Orders();
                                        instance.<OrderId>k__BackingField = dataReader.GetInt64(0);
                                        instance.<NumberOfItems>k__BackingField = dataReader.GetInt32(1);
                                        instance.<OrderDate>k__BackingField = dataReader.GetDateTime(2);
                                        instance.<OrderStatus>k__BackingField = dataReader.GetInt32(3);
                                        instance.<PaymentDate>k__BackingField = dataReader.GetDateTime(4);
                                        instance.<PaymentMethod>k__BackingField = dataReader.GetInt32(5);
                                        instance.<PaymentStatus>k__BackingField = dataReader.GetInt32(6);
                                        instance.<PaymentType>k__BackingField = dataReader.GetInt32(7);
                                        instance.<TotalCost>k__BackingField = dataReader.GetDecimal(8);
                                        instance.<TotalQuantity>k__BackingField = dataReader.GetInt32(9);
                                        instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(10);
                                        instance.<UpdatedDate>k__BackingField = dataReader.GetDateTime(11);
                                        instance.<UserId>k__BackingField = dataReader.GetInt64(12);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext1.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: Orders | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(Orders)
                        }
                        ;
                        entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType1, 
                            entity: instance1, 
                            snapshot: shadowSnapshot1);
                        return instance1;
                    } : default(void);
                    return instance1;
                };
                entity = 
                {
                    MaterializationContext materializationContext4;
                    IEntityType entityType4;
                    OrderStatus instance4;
                    InternalEntityEntry entry4;
                    bool hasNullKey4;
                    materializationContext4 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance4 = default(OrderStatus);
                    entry4 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: OrderStatus.StatusId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(13) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey4);
                    !(hasNullKey4) ? entry4 != default(InternalEntityEntry) ? 
                    {
                        entityType4 = entry4.EntityType;
                        return instance4 = (OrderStatus)entry4.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot4;
                        shadowSnapshot4 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType4 = [LIFTABLE Constant: EntityType: OrderStatus | Resolver: namelessParameter{3} => namelessParameter{3}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus")];
                        instance4 = switch (entityType4)
                        {
                            case [LIFTABLE Constant: EntityType: OrderStatus | Resolver: namelessParameter{4} => namelessParameter{4}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus")]: 
                                {
                                    return 
                                    {
                                        OrderStatus instance;
                                        instance = new OrderStatus();
                                        instance.<StatusId>k__BackingField = dataReader.GetInt32(13);
                                        instance.<Name>k__BackingField = dataReader.GetString(39);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext4.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: OrderStatus | Resolver: namelessParameter{5} => namelessParameter{5}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderStatus")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(OrderStatus)
                        }
                        ;
                        entry4 = entityType4 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType4, 
                            entity: instance4, 
                            snapshot: shadowSnapshot4);
                        return instance4;
                    } : default(void);
                    return instance4;
                };
                entity = 
                {
                    MaterializationContext materializationContext5;
                    IEntityType entityType5;
                    PaymentType instance5;
                    InternalEntityEntry entry5;
                    bool hasNullKey5;
                    materializationContext5 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance5 = default(PaymentType);
                    entry5 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: PaymentType.PaymentTypeId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentType").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(14) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey5);
                    !(hasNullKey5) ? entry5 != default(InternalEntityEntry) ? 
                    {
                        entityType5 = entry5.EntityType;
                        return instance5 = (PaymentType)entry5.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot5;
                        shadowSnapshot5 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType5 = [LIFTABLE Constant: EntityType: PaymentType | Resolver: namelessParameter{6} => namelessParameter{6}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentType")];
                        instance5 = switch (entityType5)
                        {
                            case [LIFTABLE Constant: EntityType: PaymentType | Resolver: namelessParameter{7} => namelessParameter{7}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentType")]: 
                                {
                                    return 
                                    {
                                        PaymentType instance;
                                        instance = new PaymentType();
                                        instance.<PaymentTypeId>k__BackingField = dataReader.GetInt32(14);
                                        instance.<Name>k__BackingField = dataReader.GetString(40);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext5.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: PaymentType | Resolver: namelessParameter{8} => namelessParameter{8}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentType")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(PaymentType)
                        }
                        ;
                        entry5 = entityType5 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType5, 
                            entity: instance5, 
                            snapshot: shadowSnapshot5);
                        return instance5;
                    } : default(void);
                    return instance5;
                };
                entity = 
                {
                    MaterializationContext materializationContext6;
                    IEntityType entityType6;
                    PaymentMethod instance6;
                    InternalEntityEntry entry6;
                    bool hasNullKey6;
                    materializationContext6 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance6 = default(PaymentMethod);
                    entry6 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: PaymentMethod.PaymentMethodId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentMethod").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(15) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey6);
                    !(hasNullKey6) ? entry6 != default(InternalEntityEntry) ? 
                    {
                        entityType6 = entry6.EntityType;
                        return instance6 = (PaymentMethod)entry6.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot6;
                        shadowSnapshot6 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType6 = [LIFTABLE Constant: EntityType: PaymentMethod | Resolver: namelessParameter{9} => namelessParameter{9}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentMethod")];
                        instance6 = switch (entityType6)
                        {
                            case [LIFTABLE Constant: EntityType: PaymentMethod | Resolver: namelessParameter{10} => namelessParameter{10}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentMethod")]: 
                                {
                                    return 
                                    {
                                        PaymentMethod instance;
                                        instance = new PaymentMethod();
                                        instance.<PaymentMethodId>k__BackingField = dataReader.GetInt32(15);
                                        instance.<Name>k__BackingField = dataReader.GetString(41);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext6.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: PaymentMethod | Resolver: namelessParameter{11} => namelessParameter{11}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentMethod")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(PaymentMethod)
                        }
                        ;
                        entry6 = entityType6 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType6, 
                            entity: instance6, 
                            snapshot: shadowSnapshot6);
                        return instance6;
                    } : default(void);
                    return instance6;
                };
                entity = 
                {
                    MaterializationContext materializationContext7;
                    IEntityType entityType7;
                    PaymentStatus instance7;
                    InternalEntityEntry entry7;
                    bool hasNullKey7;
                    materializationContext7 = new MaterializationContext(
                        [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                        queryContext.Context
                    );
                    instance7 = default(PaymentStatus);
                    entry7 = queryContext.TryGetEntry(
                        key: [LIFTABLE Constant: Key: PaymentStatus.PaymentStatusId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentStatus").FindPrimaryKey()], 
                        keyValues: new object[]{ (object)dataReader.GetInt32(16) }, 
                        throwOnNullKey: True, 
                        hasNullKey: hasNullKey7);
                    !(hasNullKey7) ? entry7 != default(InternalEntityEntry) ? 
                    {
                        entityType7 = entry7.EntityType;
                        return instance7 = (PaymentStatus)entry7.Entity;
                    } : 
                    {
                        ISnapshot shadowSnapshot7;
                        shadowSnapshot7 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                        entityType7 = [LIFTABLE Constant: EntityType: PaymentStatus | Resolver: namelessParameter{12} => namelessParameter{12}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentStatus")];
                        instance7 = switch (entityType7)
                        {
                            case [LIFTABLE Constant: EntityType: PaymentStatus | Resolver: namelessParameter{13} => namelessParameter{13}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentStatus")]: 
                                {
                                    return 
                                    {
                                        PaymentStatus instance;
                                        instance = new PaymentStatus();
                                        instance.<PaymentStatusId>k__BackingField = dataReader.GetInt32(16);
                                        instance.<Name>k__BackingField = dataReader.GetString(42);
                                        (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                            context: materializationContext7.Context, 
                                            entity: instance, 
                                            queryTrackingBehavior: TrackAll, 
                                            structuralType: [LIFTABLE Constant: EntityType: PaymentStatus | Resolver: namelessParameter{14} => namelessParameter{14}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.PaymentStatus")]) : default(void);
                                        return instance;
                                    }}
                            default: 
                                default(PaymentStatus)
                        }
                        ;
                        entry7 = entityType7 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                            entityType: entityType7, 
                            entity: instance7, 
                            snapshot: shadowSnapshot7);
                        return instance7;
                    } : default(void);
                    return instance7;
                };
                resultContext.Values = new object[]
                { 
                    entity, 
                    entity, 
                    entity, 
                    entity, 
                    entity 
                };
                ShaperProcessingExpressionVisitor.InitializeIncludeCollection<Orders, Orders>(
                    collectionId: 0, 
                    queryContext: queryContext, 
                    dbDataReader: dataReader, 
                    resultCoordinator: resultCoordinator, 
                    entity: (Orders)(resultContext.Values[0]), 
                    parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(long?)dataReader.GetInt64(0), 
                        (object)(int?)dataReader.GetInt32(13), 
                        (object)(int?)dataReader.GetInt32(14), 
                        (object)(int?)dataReader.GetInt32(15), 
                        (object)(int?)dataReader.GetInt32(16) 
                    }], 
                    outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                    { 
                        (object)(long?)dataReader.GetInt64(0), 
                        (object)(int?)dataReader.GetInt32(13), 
                        (object)(int?)dataReader.GetInt32(14), 
                        (object)(int?)dataReader.GetInt32(15), 
                        (object)(int?)dataReader.GetInt32(16) 
                    }], 
                    navigation: [LIFTABLE Constant: Navigation: Orders.OrderItems (ICollection<OrderItems>) Collection ToDependent OrderItems Inverse: Order | Resolver: namelessParameter{15} => namelessParameter{15}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("OrderItems")], 
                    clrCollectionAccessor: [LIFTABLE Constant: ClrICollectionAccessor<Orders, ICollection<OrderItems>, OrderItems> | Resolver: namelessParameter{16} => namelessParameter{16}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("OrderItems").GetCollectionAccessor()], 
                    trackingQuery: True, 
                    setLoaded: True);
                ShaperProcessingExpressionVisitor.IncludeReference<Orders, Orders, OrderStatus>(
                    queryContext: queryContext, 
                    entity: (Orders)(resultContext.Values[0]), 
                    relatedEntity: (OrderStatus)(resultContext.Values[1]), 
                    navigation: [LIFTABLE Constant: Navigation: Orders.OrderStatusNavigation (OrderStatus) ToPrincipal OrderStatus | Resolver: namelessParameter{17} => namelessParameter{17}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("OrderStatusNavigation")], 
                    inverseNavigation: default(INavigation), 
                    fixup: (namelessParameter{18}, namelessParameter{19}) => 
                    {
                        return namelessParameter{18}.<OrderStatusNavigation>k__BackingField = namelessParameter{19};
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.IncludeReference<Orders, Orders, PaymentType>(
                    queryContext: queryContext, 
                    entity: (Orders)(resultContext.Values[0]), 
                    relatedEntity: (PaymentType)(resultContext.Values[2]), 
                    navigation: [LIFTABLE Constant: Navigation: Orders.PaymentTypeNavigation (PaymentType) ToPrincipal PaymentType | Resolver: namelessParameter{20} => namelessParameter{20}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("PaymentTypeNavigation")], 
                    inverseNavigation: default(INavigation), 
                    fixup: (namelessParameter{21}, namelessParameter{22}) => 
                    {
                        return namelessParameter{21}.<PaymentTypeNavigation>k__BackingField = namelessParameter{22};
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.IncludeReference<Orders, Orders, PaymentMethod>(
                    queryContext: queryContext, 
                    entity: (Orders)(resultContext.Values[0]), 
                    relatedEntity: (PaymentMethod)(resultContext.Values[3]), 
                    navigation: [LIFTABLE Constant: Navigation: Orders.PaymentMethodNavigation (PaymentMethod) ToPrincipal PaymentMethod | Resolver: namelessParameter{23} => namelessParameter{23}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("PaymentMethodNavigation")], 
                    inverseNavigation: default(INavigation), 
                    fixup: (namelessParameter{24}, namelessParameter{25}) => 
                    {
                        return namelessParameter{24}.<PaymentMethodNavigation>k__BackingField = namelessParameter{25};
                    }, 
                    trackingQuery: True);
                ShaperProcessingExpressionVisitor.IncludeReference<Orders, Orders, PaymentStatus>(
                    queryContext: queryContext, 
                    entity: (Orders)(resultContext.Values[0]), 
                    relatedEntity: (PaymentStatus)(resultContext.Values[4]), 
                    navigation: [LIFTABLE Constant: Navigation: Orders.PaymentStatusNavigation (PaymentStatus) ToPrincipal PaymentStatus | Resolver: namelessParameter{26} => namelessParameter{26}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("PaymentStatusNavigation")], 
                    inverseNavigation: default(INavigation), 
                    fixup: (namelessParameter{27}, namelessParameter{28}) => 
                    {
                        return namelessParameter{27}.<PaymentStatusNavigation>k__BackingField = namelessParameter{28};
                    }, 
                    trackingQuery: True);
            } : default(void);
            ShaperProcessingExpressionVisitor.PopulateIncludeCollection<Orders, OrderItems>(
                collectionId: 0, 
                queryContext: queryContext, 
                dbDataReader: dataReader, 
                resultCoordinator: resultCoordinator, 
                parentIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(long?)dataReader.GetInt64(0), 
                    (object)(int?)dataReader.GetInt32(13), 
                    (object)(int?)dataReader.GetInt32(14), 
                    (object)(int?)dataReader.GetInt32(15), 
                    (object)(int?)dataReader.GetInt32(16) 
                }], 
                outerIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)(long?)dataReader.GetInt64(0), 
                    (object)(int?)dataReader.GetInt32(13), 
                    (object)(int?)dataReader.GetInt32(14), 
                    (object)(int?)dataReader.GetInt32(15), 
                    (object)(int?)dataReader.GetInt32(16) 
                }], 
                selfIdentifier: [LIFTABLE Constant: Func<QueryContext, DbDataReader, object[]> | Resolver: _ => (queryContext, dataReader) => new object[]
                { 
                    (object)dataReader.IsDBNull(17) ? default(long?) : (long?)dataReader.GetInt64(17), 
                    (object)dataReader.IsDBNull(25) ? default(long?) : (long?)dataReader.GetInt64(25) 
                }], 
                parentIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                outerIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right, 
                    (left, right) => left == null ? right == null : right != null && (int)left == (int)right 
                }], 
                selfIdentifierValueComparers: [LIFTABLE Constant: Func<object, object, bool>[] { Func<object, object, bool>, Func<object, object, bool> } | Resolver: _ => new Func<object, object, bool>[]
                { 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right, 
                    (left, right) => left == null ? right == null : right != null && (long)left == (long)right 
                }], 
                innerShaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
                {
                    OrderItems entity;
                    Products entity;
                    entity = 
                    {
                        MaterializationContext materializationContext2;
                        IEntityType entityType2;
                        OrderItems instance2;
                        InternalEntityEntry entry2;
                        bool hasNullKey2;
                        materializationContext2 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance2 = default(OrderItems);
                        entry2 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: OrderItems.OrderItemId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(17) ? default(object) : (object)dataReader.GetInt64(17) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey2);
                        !(hasNullKey2) ? entry2 != default(InternalEntityEntry) ? 
                        {
                            entityType2 = entry2.EntityType;
                            return instance2 = (OrderItems)entry2.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot2;
                            shadowSnapshot2 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType2 = [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{29} => namelessParameter{29}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")];
                            instance2 = switch (entityType2)
                            {
                                case [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{30} => namelessParameter{30}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]: 
                                    {
                                        return 
                                        {
                                            OrderItems instance;
                                            instance = new OrderItems();
                                            instance.<OrderItemId>k__BackingField = dataReader.IsDBNull(17) ? default(long) : dataReader.GetInt64(17);
                                            instance.<OrderDate>k__BackingField = dataReader.IsDBNull(18) ? default(DateTime) : dataReader.GetDateTime(18);
                                            instance.<OrderId>k__BackingField = dataReader.IsDBNull(19) ? default(long) : dataReader.GetInt64(19);
                                            instance.<OrderItemStatus>k__BackingField = dataReader.IsDBNull(20) ? default(int) : dataReader.GetInt32(20);
                                            instance.<ProductId>k__BackingField = dataReader.IsDBNull(21) ? default(long) : dataReader.GetInt64(21);
                                            instance.<ProductPrice>k__BackingField = dataReader.IsDBNull(22) ? default(decimal) : dataReader.GetDecimal(22);
                                            instance.<Quantity>k__BackingField = dataReader.IsDBNull(23) ? default(int) : dataReader.GetInt32(23);
                                            instance.<TotalPrice>k__BackingField = dataReader.IsDBNull(24) ? default(decimal) : dataReader.GetDecimal(24);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext2.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: OrderItems | Resolver: namelessParameter{31} => namelessParameter{31}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(OrderItems)
                            }
                            ;
                            entry2 = entityType2 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType2, 
                                entity: instance2, 
                                snapshot: shadowSnapshot2);
                            return instance2;
                        } : default(void);
                        return instance2;
                    };
                    entity = 
                    {
                        MaterializationContext materializationContext3;
                        IEntityType entityType3;
                        Products instance3;
                        InternalEntityEntry entry3;
                        bool hasNullKey3;
                        materializationContext3 = new MaterializationContext(
                            [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                            queryContext.Context
                        );
                        instance3 = default(Products);
                        entry3 = queryContext.TryGetEntry(
                            key: [LIFTABLE Constant: Key: Products.ProductId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products").FindPrimaryKey()], 
                            keyValues: new object[]{ dataReader.IsDBNull(25) ? default(object) : (object)dataReader.GetInt64(25) }, 
                            throwOnNullKey: False, 
                            hasNullKey: hasNullKey3);
                        !(hasNullKey3) ? entry3 != default(InternalEntityEntry) ? 
                        {
                            entityType3 = entry3.EntityType;
                            return instance3 = (Products)entry3.Entity;
                        } : 
                        {
                            ISnapshot shadowSnapshot3;
                            shadowSnapshot3 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                            entityType3 = [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{32} => namelessParameter{32}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")];
                            instance3 = switch (entityType3)
                            {
                                case [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{33} => namelessParameter{33}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]: 
                                    {
                                        return 
                                        {
                                            Products instance;
                                            instance = new Products();
                                            instance.<ProductId>k__BackingField = dataReader.IsDBNull(25) ? default(long) : dataReader.GetInt64(25);
                                            instance.<AvailableQuantity>k__BackingField = dataReader.IsDBNull(26) ? default(int) : dataReader.GetInt32(26);
                                            instance.<CategoryId>k__BackingField = dataReader.IsDBNull(27) ? default(int) : dataReader.GetInt32(27);
                                            instance.<CreatedAt>k__BackingField = dataReader.IsDBNull(28) ? default(DateTime) : dataReader.GetDateTime(28);
                                            instance.<CreatedBy>k__BackingField = dataReader.IsDBNull(29) ? default(long) : dataReader.GetInt64(29);
                                            instance.<Description>k__BackingField = dataReader.IsDBNull(30) ? default(string) : dataReader.GetString(30);
                                            instance.<IsDeleted>k__BackingField = dataReader.IsDBNull(31) ? default(bool) : dataReader.GetBoolean(31);
                                            instance.<LastRestockAt>k__BackingField = dataReader.IsDBNull(32) ? default(DateTime) : dataReader.GetDateTime(32);
                                            instance.<MinimumRequiredQuantity>k__BackingField = dataReader.IsDBNull(33) ? default(int) : dataReader.GetInt32(33);
                                            instance.<Name>k__BackingField = dataReader.IsDBNull(34) ? default(string) : dataReader.GetString(34);
                                            instance.<Price>k__BackingField = dataReader.IsDBNull(35) ? default(decimal) : dataReader.GetDecimal(35);
                                            instance.<ProductStatus>k__BackingField = dataReader.IsDBNull(36) ? default(int) : dataReader.GetInt32(36);
                                            instance.<UpdatedAt>k__BackingField = dataReader.IsDBNull(37) ? default(DateTime) : dataReader.GetDateTime(37);
                                            instance.<UpdatedBy>k__BackingField = dataReader.IsDBNull(38) ? default(long) : dataReader.GetInt64(38);
                                            (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                                context: materializationContext3.Context, 
                                                entity: instance, 
                                                queryTrackingBehavior: TrackAll, 
                                                structuralType: [LIFTABLE Constant: EntityType: Products | Resolver: namelessParameter{34} => namelessParameter{34}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Products")]) : default(void);
                                            return instance;
                                        }}
                                default: 
                                    default(Products)
                            }
                            ;
                            entry3 = entityType3 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                                entityType: entityType3, 
                                entity: instance3, 
                                snapshot: shadowSnapshot3);
                            return instance3;
                        } : default(void);
                        return instance3;
                    };
                    ShaperProcessingExpressionVisitor.IncludeReference<OrderItems, OrderItems, Products>(
                        queryContext: queryContext, 
                        entity: entity, 
                        relatedEntity: entity, 
                        navigation: [LIFTABLE Constant: Navigation: OrderItems.Product (Products) ToPrincipal Products | Resolver: namelessParameter{35} => namelessParameter{35}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindNavigation("Product")], 
                        inverseNavigation: default(INavigation), 
                        fixup: (namelessParameter{36}, namelessParameter{37}) => 
                        {
                            return namelessParameter{36}.<Product>k__BackingField = namelessParameter{37};
                        }, 
                        trackingQuery: True);
                    return entity;
                }, 
                inverseNavigation: [LIFTABLE Constant: Navigation: OrderItems.Order (Orders) ToPrincipal Orders Inverse: OrderItems | Resolver: namelessParameter{38} => namelessParameter{38}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.OrderItems").FindNavigation("Order")], 
                fixup: (namelessParameter{39}, namelessParameter{40}) => 
                {
                    [LIFTABLE Constant: ClrICollectionAccessor<Orders, ICollection<OrderItems>, OrderItems> | Resolver: namelessParameter{41} => namelessParameter{41}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.Orders").FindNavigation("OrderItems").GetCollectionAccessor()].Add(
                        entity: namelessParameter{39}, 
                        value: namelessParameter{40}, 
                        forMaterialization: True);
                    return namelessParameter{40}.<Order>k__BackingField = namelessParameter{39};
                }, 
                trackingQuery: True);
            return IsTrue(resultCoordinator.ResultReady)
             ? (Orders)(resultContext.Values[0]) : default(Orders);
        }, 
        contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
        standAloneStateManager: False, 
        detailedErrorsEnabled: False, 
        threadSafetyChecksEnabled: True), 
    cancellationToken: queryContext.CancellationToken)'
2025-05-09 18:28:20.511 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:28:20.514 +05:30 [DBG] Created DbConnection. (2ms).
2025-05-09 18:28:20.516 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:28:20.519 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:28:20.520 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:28:20.524 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (3ms).
2025-05-09 18:28:20.526 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (5ms).
2025-05-09 18:28:20.528 +05:30 [DBG] Executing DbCommand [Parameters=[@__orderId_0='?' (DbType = Int64), @__userId_1='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[OrderId], [s].[NumberOfItems], [s].[OrderDate], [s].[OrderStatus], [s].[PaymentDate], [s].[PaymentMethod], [s].[PaymentStatus], [s].[PaymentType], [s].[TotalCost], [s].[TotalQuantity], [s].[UpdatedBy], [s].[UpdatedDate], [s].[UserId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId], [s0].[OrderDate], [s0].[OrderId], [s0].[OrderItemStatus], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[TotalPrice], [s0].[ProductId0], [s0].[AvailableQuantity], [s0].[CategoryId], [s0].[CreatedAt], [s0].[CreatedBy], [s0].[Description], [s0].[IsDeleted], [s0].[LastRestockAt], [s0].[MinimumRequiredQuantity], [s0].[Name], [s0].[Price], [s0].[ProductStatus], [s0].[UpdatedAt], [s0].[UpdatedBy], [s].[Name], [s].[Name0], [s].[Name1], [s].[Name2]
FROM (
    SELECT TOP(1) [o].[OrderId], [o].[NumberOfItems], [o].[OrderDate], [o].[OrderStatus], [o].[PaymentDate], [o].[PaymentMethod], [o].[PaymentStatus], [o].[PaymentType], [o].[TotalCost], [o].[TotalQuantity], [o].[UpdatedBy], [o].[UpdatedDate], [o].[UserId], [o0].[StatusId], [o0].[Name], [p].[PaymentTypeId], [p].[Name] AS [Name0], [p0].[PaymentMethodId], [p0].[Name] AS [Name1], [p1].[PaymentStatusId], [p1].[Name] AS [Name2]
    FROM [Orders] AS [o]
    INNER JOIN [OrderStatus] AS [o0] ON [o].[OrderStatus] = [o0].[StatusId]
    INNER JOIN [PaymentType] AS [p] ON [o].[PaymentType] = [p].[PaymentTypeId]
    INNER JOIN [PaymentMethod] AS [p0] ON [o].[PaymentMethod] = [p0].[PaymentMethodId]
    INNER JOIN [PaymentStatus] AS [p1] ON [o].[PaymentStatus] = [p1].[PaymentStatusId]
    WHERE [o].[OrderId] = @__orderId_0 AND [o].[UserId] = @__userId_1
) AS [s]
LEFT JOIN (
    SELECT [o1].[OrderItemId], [o1].[OrderDate], [o1].[OrderId], [o1].[OrderItemStatus], [o1].[ProductId], [o1].[ProductPrice], [o1].[Quantity], [o1].[TotalPrice], [p2].[ProductId] AS [ProductId0], [p2].[AvailableQuantity], [p2].[CategoryId], [p2].[CreatedAt], [p2].[CreatedBy], [p2].[Description], [p2].[IsDeleted], [p2].[LastRestockAt], [p2].[MinimumRequiredQuantity], [p2].[Name], [p2].[Price], [p2].[ProductStatus], [p2].[UpdatedAt], [p2].[UpdatedBy]
    FROM [OrderItems] AS [o1]
    INNER JOIN [Products] AS [p2] ON [o1].[ProductId] = [p2].[ProductId]
) AS [s0] ON [s].[OrderId] = [s0].[OrderId]
ORDER BY [s].[OrderId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId]
2025-05-09 18:28:20.570 +05:30 [INF] Executed DbCommand (42ms) [Parameters=[@__orderId_0='?' (DbType = Int64), @__userId_1='?' (DbType = Int64)], CommandType='"Text"', CommandTimeout='30']
SELECT [s].[OrderId], [s].[NumberOfItems], [s].[OrderDate], [s].[OrderStatus], [s].[PaymentDate], [s].[PaymentMethod], [s].[PaymentStatus], [s].[PaymentType], [s].[TotalCost], [s].[TotalQuantity], [s].[UpdatedBy], [s].[UpdatedDate], [s].[UserId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId], [s0].[OrderDate], [s0].[OrderId], [s0].[OrderItemStatus], [s0].[ProductId], [s0].[ProductPrice], [s0].[Quantity], [s0].[TotalPrice], [s0].[ProductId0], [s0].[AvailableQuantity], [s0].[CategoryId], [s0].[CreatedAt], [s0].[CreatedBy], [s0].[Description], [s0].[IsDeleted], [s0].[LastRestockAt], [s0].[MinimumRequiredQuantity], [s0].[Name], [s0].[Price], [s0].[ProductStatus], [s0].[UpdatedAt], [s0].[UpdatedBy], [s].[Name], [s].[Name0], [s].[Name1], [s].[Name2]
FROM (
    SELECT TOP(1) [o].[OrderId], [o].[NumberOfItems], [o].[OrderDate], [o].[OrderStatus], [o].[PaymentDate], [o].[PaymentMethod], [o].[PaymentStatus], [o].[PaymentType], [o].[TotalCost], [o].[TotalQuantity], [o].[UpdatedBy], [o].[UpdatedDate], [o].[UserId], [o0].[StatusId], [o0].[Name], [p].[PaymentTypeId], [p].[Name] AS [Name0], [p0].[PaymentMethodId], [p0].[Name] AS [Name1], [p1].[PaymentStatusId], [p1].[Name] AS [Name2]
    FROM [Orders] AS [o]
    INNER JOIN [OrderStatus] AS [o0] ON [o].[OrderStatus] = [o0].[StatusId]
    INNER JOIN [PaymentType] AS [p] ON [o].[PaymentType] = [p].[PaymentTypeId]
    INNER JOIN [PaymentMethod] AS [p0] ON [o].[PaymentMethod] = [p0].[PaymentMethodId]
    INNER JOIN [PaymentStatus] AS [p1] ON [o].[PaymentStatus] = [p1].[PaymentStatusId]
    WHERE [o].[OrderId] = @__orderId_0 AND [o].[UserId] = @__userId_1
) AS [s]
LEFT JOIN (
    SELECT [o1].[OrderItemId], [o1].[OrderDate], [o1].[OrderId], [o1].[OrderItemStatus], [o1].[ProductId], [o1].[ProductPrice], [o1].[Quantity], [o1].[TotalPrice], [p2].[ProductId] AS [ProductId0], [p2].[AvailableQuantity], [p2].[CategoryId], [p2].[CreatedAt], [p2].[CreatedBy], [p2].[Description], [p2].[IsDeleted], [p2].[LastRestockAt], [p2].[MinimumRequiredQuantity], [p2].[Name], [p2].[Price], [p2].[ProductStatus], [p2].[UpdatedAt], [p2].[UpdatedBy]
    FROM [OrderItems] AS [o1]
    INNER JOIN [Products] AS [p2] ON [o1].[ProductId] = [p2].[ProductId]
) AS [s0] ON [s].[OrderId] = [s0].[OrderId]
ORDER BY [s].[OrderId], [s].[StatusId], [s].[PaymentTypeId], [s].[PaymentMethodId], [s].[PaymentStatusId], [s0].[OrderItemId]
2025-05-09 18:28:20.579 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Orders' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:28:20.584 +05:30 [DBG] The navigation 'Orders.OrderStatusNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:28:20.586 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderStatus' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:28:20.593 +05:30 [DBG] The navigation 'Orders.PaymentTypeNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:28:20.595 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'PaymentType' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:28:20.602 +05:30 [DBG] The navigation 'Orders.PaymentMethodNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:28:20.605 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'PaymentMethod' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:28:20.613 +05:30 [DBG] The navigation 'Orders.PaymentStatusNavigation' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:28:20.616 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'PaymentStatus' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:28:20.627 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'OrderItems' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:28:20.630 +05:30 [DBG] The navigation 'OrderItems.Product' was detected as changed. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:28:20.632 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'Products' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:28:20.634 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:28:20.636 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 56ms reading results.
2025-05-09 18:28:20.638 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:28:20.641 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 18:28:20.648 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:28:20.651 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:28:20.652 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:28:20.654 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:28:20.656 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:28:20.658 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[InventoryManagementSystem.Models.Responces.CustomerOrderDetailsResponse, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2025-05-09 18:28:20.667 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem) in 536.2108ms
2025-05-09 18:28:20.677 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.OrderController.GetCustomerOrderById (InventoryManagementSystem)'
2025-05-09 18:28:20.679 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:28:20.681 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:28:20.682 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:28:20.684 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Order/customer-order/3 - 200 null application/json; charset=utf-8 617.4557ms
2025-05-09 18:29:43.527 +05:30 [INF] Request starting HTTP/2 GET https://localhost:7150/api/Vendor/get-all-vendors - null null
2025-05-09 18:29:43.547 +05:30 [DBG] 1 candidate(s) found for the request path '/api/Vendor/get-all-vendors'
2025-05-09 18:29:43.552 +05:30 [DBG] Endpoint 'InventoryManagementSystem.Controllers.VendorController.GetAllVendors (InventoryManagementSystem)' with route pattern 'api/Vendor/get-all-vendors' is valid for the request path '/api/Vendor/get-all-vendors'
2025-05-09 18:29:43.559 +05:30 [DBG] Request matched endpoint 'InventoryManagementSystem.Controllers.VendorController.GetAllVendors (InventoryManagementSystem)'
2025-05-09 18:29:43.566 +05:30 [DBG] Static files was skipped as the request already matched an endpoint.
2025-05-09 18:29:43.570 +05:30 [DBG] Successfully validated the token.
2025-05-09 18:29:43.574 +05:30 [DBG] AuthenticationScheme: Bearer was successfully authenticated.
2025-05-09 18:29:43.581 +05:30 [DBG] Authorization was successful.
2025-05-09 18:29:43.587 +05:30 [INF] Executing endpoint 'InventoryManagementSystem.Controllers.VendorController.GetAllVendors (InventoryManagementSystem)'
2025-05-09 18:29:43.602 +05:30 [INF] Route matched with {action = "GetAllVendors", controller = "Vendor"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllVendors() on controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem).
2025-05-09 18:29:43.611 +05:30 [DBG] Execution plan of authorization filters (in the following order): ["None"]
2025-05-09 18:29:43.618 +05:30 [DBG] Execution plan of resource filters (in the following order): ["None"]
2025-05-09 18:29:43.623 +05:30 [DBG] Execution plan of action filters (in the following order): ["Microsoft.AspNetCore.Mvc.ModelBinding.UnsupportedContentTypeFilter (Order: -3000)","Microsoft.AspNetCore.Mvc.Infrastructure.ModelStateInvalidFilter (Order: -2000)"]
2025-05-09 18:29:43.626 +05:30 [DBG] Execution plan of exception filters (in the following order): ["None"]
2025-05-09 18:29:43.630 +05:30 [DBG] Execution plan of result filters (in the following order): ["Microsoft.AspNetCore.Mvc.Infrastructure.ClientErrorResultFilter (Order: -2000)"]
2025-05-09 18:29:43.633 +05:30 [DBG] Executing controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 18:29:43.636 +05:30 [DBG] Executed controller factory for controller InventoryManagementSystem.Controllers.VendorController (InventoryManagementSystem)
2025-05-09 18:29:43.640 +05:30 [INF] Fetching all vendors
2025-05-09 18:29:43.643 +05:30 [DBG] Entity Framework Core 9.0.4 initialized 'ApplicationDbContext' using provider 'Microsoft.EntityFrameworkCore.SqlServer:9.0.4' with options: EngineType=SqlServer 
2025-05-09 18:29:43.652 +05:30 [DBG] Compiling query expression: 
'DbSet<VendorDetails>()
    .Where(v => !(v.IsDeleted))
    .OrderBy(v => v.Name)'
2025-05-09 18:29:43.695 +05:30 [DBG] Generated query execution expression: 
'queryContext => SingleQueryingEnumerable.Create<VendorDetails>(
    relationalQueryContext: (RelationalQueryContext)queryContext, 
    relationalCommandResolver: parameters => [LIFTABLE Constant: RelationalCommandCache.QueryExpression(
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: VendorDetails.VendorId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: VendorDetails.Address (string) Required MaxLength(500), 1], [Property: VendorDetails.City (string) Required MaxLength(50), 2], [Property: VendorDetails.Country (string) Required MaxLength(50), 3], [Property: VendorDetails.CreatedAt (DateTime) Required, 4], [Property: VendorDetails.CreatedBy (long) Required FK Index, 5], [Property: VendorDetails.Email (string) Required MaxLength(100), 6], [Property: VendorDetails.IsDeleted (bool) Required, 7], [Property: VendorDetails.Name (string) Required MaxLength(50), 8], [Property: VendorDetails.Phone (string) Required MaxLength(15), 9], [Property: VendorDetails.Pincode (string) Required MaxLength(10), 10], [Property: VendorDetails.State (string) Required MaxLength(50), 11], [Property: VendorDetails.StoreName (string) Required MaxLength(100), 12], [Property: VendorDetails.UpdatedAt (DateTime) Required, 13], [Property: VendorDetails.UpdatedBy (long) Required, 14] }
        SELECT v.VendorId, v.Address, v.City, v.Country, v.CreatedAt, v.CreatedBy, v.Email, v.IsDeleted, v.Name, v.Phone, v.Pincode, v.State, v.StoreName, v.UpdatedAt, v.UpdatedBy
        FROM VendorDetails AS v
        WHERE Not(v.IsDeleted)
        ORDER BY v.Name ASC) | Resolver: c => new RelationalCommandCache(
        c.Dependencies.MemoryCache, 
        c.RelationalDependencies.QuerySqlGeneratorFactory, 
        c.RelationalDependencies.RelationalParameterBasedSqlProcessorFactory, 
        Projection Mapping:
            EmptyProjectionMember -> Dictionary<IProperty, int> { [Property: VendorDetails.VendorId (long) Required PK AfterSave:Throw ValueGenerated.OnAdd, 0], [Property: VendorDetails.Address (string) Required MaxLength(500), 1], [Property: VendorDetails.City (string) Required MaxLength(50), 2], [Property: VendorDetails.Country (string) Required MaxLength(50), 3], [Property: VendorDetails.CreatedAt (DateTime) Required, 4], [Property: VendorDetails.CreatedBy (long) Required FK Index, 5], [Property: VendorDetails.Email (string) Required MaxLength(100), 6], [Property: VendorDetails.IsDeleted (bool) Required, 7], [Property: VendorDetails.Name (string) Required MaxLength(50), 8], [Property: VendorDetails.Phone (string) Required MaxLength(15), 9], [Property: VendorDetails.Pincode (string) Required MaxLength(10), 10], [Property: VendorDetails.State (string) Required MaxLength(50), 11], [Property: VendorDetails.StoreName (string) Required MaxLength(100), 12], [Property: VendorDetails.UpdatedAt (DateTime) Required, 13], [Property: VendorDetails.UpdatedBy (long) Required, 14] }
        SELECT v.VendorId, v.Address, v.City, v.Country, v.CreatedAt, v.CreatedBy, v.Email, v.IsDeleted, v.Name, v.Phone, v.Pincode, v.State, v.StoreName, v.UpdatedAt, v.UpdatedBy
        FROM VendorDetails AS v
        WHERE Not(v.IsDeleted)
        ORDER BY v.Name ASC, 
        False, 
        new HashSet<string>(
            new string[]{ }, 
            StringComparer.Ordinal
        )
    )].GetRelationalCommandTemplate(parameters), 
    readerColumns: null, 
    shaper: (queryContext, dataReader, resultContext, resultCoordinator) => 
    {
        VendorDetails entity;
        entity = 
        {
            MaterializationContext materializationContext1;
            IEntityType entityType1;
            VendorDetails instance1;
            InternalEntityEntry entry1;
            bool hasNullKey1;
            materializationContext1 = new MaterializationContext(
                [LIFTABLE Constant: ValueBuffer | Resolver: _ => (object)ValueBuffer.Empty], 
                queryContext.Context
            );
            instance1 = default(VendorDetails);
            entry1 = queryContext.TryGetEntry(
                key: [LIFTABLE Constant: Key: VendorDetails.VendorId PK | Resolver: c => c.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails").FindPrimaryKey()], 
                keyValues: new object[]{ (object)dataReader.GetInt64(0) }, 
                throwOnNullKey: True, 
                hasNullKey: hasNullKey1);
            !(hasNullKey1) ? entry1 != default(InternalEntityEntry) ? 
            {
                entityType1 = entry1.EntityType;
                return instance1 = (VendorDetails)entry1.Entity;
            } : 
            {
                ISnapshot shadowSnapshot1;
                shadowSnapshot1 = [LIFTABLE Constant: Snapshot | Resolver: _ => Snapshot.Empty];
                entityType1 = [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{0} => namelessParameter{0}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")];
                instance1 = switch (entityType1)
                {
                    case [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{1} => namelessParameter{1}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")]: 
                        {
                            return 
                            {
                                VendorDetails instance;
                                instance = new VendorDetails();
                                instance.<VendorId>k__BackingField = dataReader.GetInt64(0);
                                instance.<Address>k__BackingField = dataReader.GetString(1);
                                instance.<City>k__BackingField = dataReader.GetString(2);
                                instance.<Country>k__BackingField = dataReader.GetString(3);
                                instance.<CreatedAt>k__BackingField = dataReader.GetDateTime(4);
                                instance.<CreatedBy>k__BackingField = dataReader.GetInt64(5);
                                instance.<Email>k__BackingField = dataReader.GetString(6);
                                instance.<IsDeleted>k__BackingField = dataReader.GetBoolean(7);
                                instance.<Name>k__BackingField = dataReader.GetString(8);
                                instance.<Phone>k__BackingField = dataReader.GetString(9);
                                instance.<Pincode>k__BackingField = dataReader.GetString(10);
                                instance.<State>k__BackingField = dataReader.GetString(11);
                                instance.<StoreName>k__BackingField = dataReader.GetString(12);
                                instance.<UpdatedAt>k__BackingField = dataReader.GetDateTime(13);
                                instance.<UpdatedBy>k__BackingField = dataReader.GetInt64(14);
                                (instance is IInjectableService) ? ((IInjectableService)instance).Injected(
                                    context: materializationContext1.Context, 
                                    entity: instance, 
                                    queryTrackingBehavior: TrackAll, 
                                    structuralType: [LIFTABLE Constant: EntityType: VendorDetails | Resolver: namelessParameter{2} => namelessParameter{2}.Dependencies.Model.FindEntityType("InventoryManagementSystem.Models.Entity.VendorDetails")]) : default(void);
                                return instance;
                            }}
                    default: 
                        default(VendorDetails)
                }
                ;
                entry1 = entityType1 == default(IEntityType) ? default(InternalEntityEntry) : queryContext.StartTracking(
                    entityType: entityType1, 
                    entity: instance1, 
                    snapshot: shadowSnapshot1);
                return instance1;
            } : default(void);
            return instance1;
        };
        return entity;
    }, 
    contextType: InventoryManagementSystem.Data.Context.ApplicationDbContext, 
    standAloneStateManager: False, 
    detailedErrorsEnabled: False, 
    threadSafetyChecksEnabled: True)'
2025-05-09 18:29:43.742 +05:30 [DBG] Creating DbConnection.
2025-05-09 18:29:43.743 +05:30 [DBG] Created DbConnection. (0ms).
2025-05-09 18:29:43.744 +05:30 [DBG] Opening connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:29:43.746 +05:30 [DBG] Opened connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:29:43.749 +05:30 [DBG] Creating DbCommand for 'ExecuteReader'.
2025-05-09 18:29:43.750 +05:30 [DBG] Created DbCommand for 'ExecuteReader' (1ms).
2025-05-09 18:29:43.751 +05:30 [DBG] Initialized DbCommand for 'ExecuteReader' (2ms).
2025-05-09 18:29:43.753 +05:30 [DBG] Executing DbCommand [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [VendorDetails] AS [v]
WHERE [v].[IsDeleted] = CAST(0 AS bit)
ORDER BY [v].[Name]
2025-05-09 18:29:43.769 +05:30 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [v].[VendorId], [v].[Address], [v].[City], [v].[Country], [v].[CreatedAt], [v].[CreatedBy], [v].[Email], [v].[IsDeleted], [v].[Name], [v].[Phone], [v].[Pincode], [v].[State], [v].[StoreName], [v].[UpdatedAt], [v].[UpdatedBy]
FROM [VendorDetails] AS [v]
WHERE [v].[IsDeleted] = CAST(0 AS bit)
ORDER BY [v].[Name]
2025-05-09 18:29:43.772 +05:30 [DBG] Context 'ApplicationDbContext' started tracking 'VendorDetails' entity. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see key values.
2025-05-09 18:29:43.773 +05:30 [DBG] Closing data reader to 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:29:43.775 +05:30 [DBG] A data reader for 'InventoryManagement' on server 'ATPL-LAP-354' is being disposed after spending 2ms reading results.
2025-05-09 18:29:43.777 +05:30 [DBG] Closing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:29:43.779 +05:30 [DBG] Closed connection to database 'InventoryManagement' on server 'ATPL-LAP-354' (2ms).
2025-05-09 18:29:43.782 +05:30 [INF] Fetched 1 vendors
2025-05-09 18:29:43.784 +05:30 [DBG] List of registered output formatters, in the following order: ["Microsoft.AspNetCore.Mvc.Formatters.HttpNoContentOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StringOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.StreamOutputFormatter","Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter"]
2025-05-09 18:29:43.788 +05:30 [DBG] No information found on request to perform content negotiation.
2025-05-09 18:29:43.790 +05:30 [DBG] Attempting to select an output formatter without using a content type as no explicit content types were specified for the response.
2025-05-09 18:29:43.792 +05:30 [DBG] Attempting to select the first formatter in the output formatters list which can write the result.
2025-05-09 18:29:43.794 +05:30 [DBG] Selected output formatter 'Microsoft.AspNetCore.Mvc.Formatters.SystemTextJsonOutputFormatter' and content type 'application/json' to write the response.
2025-05-09 18:29:43.798 +05:30 [INF] Executing OkObjectResult, writing value of type 'InventoryManagementSystem.Models.Responces.ApiResponse`1[[System.Collections.Generic.List`1[[InventoryManagementSystem.Models.Entity.VendorDetails, InventoryManagementSystem, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-05-09 18:29:43.812 +05:30 [INF] Executed action InventoryManagementSystem.Controllers.VendorController.GetAllVendors (InventoryManagementSystem) in 178.944ms
2025-05-09 18:29:43.824 +05:30 [INF] Executed endpoint 'InventoryManagementSystem.Controllers.VendorController.GetAllVendors (InventoryManagementSystem)'
2025-05-09 18:29:43.826 +05:30 [DBG] 'ApplicationDbContext' disposed.
2025-05-09 18:29:43.835 +05:30 [DBG] Disposing connection to database 'InventoryManagement' on server 'ATPL-LAP-354'.
2025-05-09 18:29:43.837 +05:30 [DBG] Disposed connection to database '' on server '' (1ms).
2025-05-09 18:29:43.840 +05:30 [INF] Request finished HTTP/2 GET https://localhost:7150/api/Vendor/get-all-vendors - 200 null application/json; charset=utf-8 313.0711ms
2025-05-09 18:41:06.018 +05:30 [DBG] Connection id "0HNCEUIJVSIHI" received FIN.
2025-05-09 18:41:06.032 +05:30 [DBG] Connection id "0HNCEUIJVSIHI" is closed. The last processed stream ID was 37.
2025-05-09 18:41:06.032 +05:30 [DBG] Connection id "0HNCEUIJVSIHI" sending FIN because: "The Socket transport's send loop completed gracefully."
2025-05-09 18:41:06.045 +05:30 [DBG] The connection queue processing loop for 0HNCEUIJVSIHI completed.
2025-05-09 18:41:06.058 +05:30 [DBG] Connection id "0HNCEUIJVSIHI" stopped.
